android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> a
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> b
    android.graphics.Rect mTmpRect -> c
    float mPosition -> d
    float mOffset -> e
    android.support.v4.app.ActionBarDrawerToggle this$0 -> a
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> a
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> a
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> b
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    void instantiateChildFragmentManager() -> k
    void performCreate(android.os.Bundle) -> b
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> c
    void performStart() -> c
    void performResume() -> d
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> e
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> d
    void performPause() -> f
    void performStop() -> g
    void performReallyStop() -> h
    void performDestroyView() -> i
    void performDestroy() -> j
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> a
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> d
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> e
    void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    boolean popBackStackState$68507953(java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> b
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> c
    android.os.Parcelable saveAllState() -> c
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> a
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> k
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> a
    void doStop() -> b
    void doRetain() -> c
    void finishRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> a
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> a
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> a
    java.lang.CharSequence mTitle -> b
    android.app.PendingIntent mIntent -> c
    android.os.Bundle mExtras -> d
    java.util.ArrayList mRemoteInputs -> e
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    int mFlags -> a
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.lang.String mGroupKey -> q
    boolean mGroupSummary -> r
    java.lang.String mSortKey -> s
    java.util.ArrayList mActions -> t
    boolean mLocalOnly -> u
    android.os.Bundle mExtras -> v
    android.app.Notification mNotification -> w
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> a
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    java.util.ArrayList mActions -> a
    int mFlags -> b
    android.app.PendingIntent mDisplayIntent -> c
    java.util.ArrayList mPages -> d
    android.graphics.Bitmap mBackground -> e
    int mContentIcon -> f
    int mContentIconGravity -> g
    int mContentActionIndex -> h
    int mCustomSizePreset -> i
    int mCustomContentHeight -> j
    int mGravity -> k
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> a
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> a
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    java.lang.Class sActionClass -> e
    java.lang.reflect.Field sActionsField -> f
    java.lang.reflect.Field sActionIconField -> g
    java.lang.reflect.Field sActionTitleField -> h
    java.lang.reflect.Field sActionIntentField -> i
    boolean sActionsAccessFailed -> j
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> a
    boolean ensureActionReflectionReadyLocked() -> a
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> a
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> a
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    int SIDE_CHANNEL_BIND_FLAGS -> a
    java.lang.Object sEnabledNotificationListenersLock -> b
    java.lang.String sEnabledNotificationListeners -> c
    java.util.Set sEnabledNotificationListenerPackages -> d
    android.content.Context mContext -> e
    android.app.NotificationManager mNotificationManager -> f
    java.lang.Object sLock -> g
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> h
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> i
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> a
    int access$000() -> a
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    boolean all -> d
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    android.app.Notification notif -> d
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> a
    android.os.IBinder iBinder -> b
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    android.content.Context mContext -> a
    android.os.HandlerThread mHandlerThread -> b
    android.os.Handler mHandler -> c
    java.util.Map mRecordMap -> d
    java.util.Set mCachedEnabledPackages -> e
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> a
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> b
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> c
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> a
    boolean bound -> b
    android.support.v4.app.INotificationSideChannel service -> c
    java.util.LinkedList taskQueue -> d
    int retryCount -> e
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> a
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> a
    java.lang.CharSequence mLabel -> b
    java.lang.CharSequence[] mChoices -> c
    boolean mAllowFreeFormInput -> d
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> a
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> a
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> a
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> a
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> a
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mToAddresses -> d
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mStreams -> g
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> a
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.String mCallingPackage -> c
    android.content.ComponentName mCallingActivity -> d
    java.util.ArrayList mStreams -> e
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle$115f5926(java.lang.StringBuilder,java.lang.CharSequence,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> a
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> b
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> c
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground$42af7916() -> b
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> d
    void onStopLoading() -> e
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> f
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    boolean mProcessingChange -> t
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> d
    void forceLoad() -> forceLoad
    void onForceLoad() -> a
    void stopLoading() -> stopLoading
    void onStopLoading() -> e
    void abandon() -> abandon
    void reset() -> reset
    void onReset() -> f
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    java.lang.Object postResult(java.lang.Object) -> b
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground$42af7916() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate$1b4f7664() -> c
    void onCancelled() -> a
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> b
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> a
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> a
    android.support.v4.media.TransportPerformer mCallbacks -> b
    android.media.AudioManager mAudioManager -> c
    android.view.View mView -> d
    java.lang.Object mDispatcherState -> e
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> f
    java.util.ArrayList mListeners -> g
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> h
    android.view.KeyEvent$Callback mKeyEventCallback -> i
    boolean isMediaKey(int) -> a
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> a
    void reportPlayingChanged() -> b
    void pushControllerState() -> c
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> a
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.view.View mTargetView -> c
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> d
    java.lang.String mReceiverAction -> e
    android.content.IntentFilter mReceiverFilter -> f
    android.content.Intent mIntent -> g
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> h
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> i
    android.content.BroadcastReceiver mMediaButtonReceiver -> j
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> k
    android.app.PendingIntent mPendingIntent -> l
    android.media.RemoteControlClient mRemoteControl -> m
    boolean mFocused -> n
    int mPlayState -> o
    boolean mAudioFocused -> p
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> a
    void gainFocus() -> b
    void takeAudioFocus() -> e
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> f
    void loseFocus() -> c
    void windowDetached() -> d
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> a
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> a
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> a
    int mColorMode -> b
    int mOrientation -> c
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    android.content.Context mContext -> a
    android.graphics.BitmapFactory$Options mDecodeOptions -> b
    java.lang.Object mLock -> f
    int mScaleMode -> c
    int mColorMode -> d
    int mOrientation -> e
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap$1c6d3aaf(android.net.Uri) -> a
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> a
    android.graphics.Matrix access$000$75eaee36(int,int,android.graphics.RectF,int) -> a
    android.graphics.Bitmap access$200$6f44086e(android.support.v4.print.PrintHelperKitkat,android.net.Uri) -> a
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> a
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> e
    java.lang.String val$jobName -> a
    android.graphics.Bitmap val$bitmap -> b
    int val$fittingMode -> c
    android.support.v4.print.PrintHelperKitkat this$0 -> d
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> g
    android.os.AsyncTask loadBitmap -> a
    android.graphics.Bitmap mBitmap -> b
    java.lang.String val$jobName -> c
    android.net.Uri val$imageFile -> d
    int val$fittingMode -> e
    android.support.v4.print.PrintHelperKitkat this$0 -> f
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> a
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> a
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> a
    android.print.PrintAttributes val$newPrintAttributes -> b
    android.print.PrintAttributes val$oldPrintAttributes -> c
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> d
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> e
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground$4055529b() -> a
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> a
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> a
    java.lang.String LRM_STRING -> b
    java.lang.String RLM_STRING -> c
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> d
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> e
    boolean mIsRtlContext -> f
    int mFlags -> g
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> h
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    int getExitDir(java.lang.String) -> a
    int getEntryDir(java.lang.String) -> b
    boolean access$000(java.util.Locale) -> a
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> a
    android.support.v4.text.BidiFormatter access$200() -> b
    android.support.v4.text.BidiFormatter access$300() -> c
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> a
    int mFlags -> b
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    void initialize(boolean) -> a
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    byte[] DIR_TYPE_CACHE -> a
    java.lang.String text -> b
    boolean isHtml -> c
    int length -> d
    int charIndex -> e
    char lastChar -> f
    int getEntryDir() -> a
    int getExitDir() -> b
    byte getCachedDirectionality(char) -> a
    byte dirTypeBackward() -> c
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> a
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> a
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> b
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> c
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> d
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> e
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> f
    int access$100(int) -> a
    int access$200(int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> c
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> a
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> b
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    boolean defaultIsRtl() -> a
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> a
    java.lang.String ARAB_SCRIPT_SUBTAG -> b
    java.lang.String HEBR_SCRIPT_SUBTAG -> c
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> a
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> a
    int mHead -> b
    int mTail -> c
    int mCapacityBitmask -> d
    void doubleCapacity() -> a
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> a
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> a
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> a
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> a
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mDeferConfirmSingleTap -> l
    boolean mInLongPress -> m
    boolean mAlwaysInTapRegion -> n
    boolean mAlwaysInBiggerTapRegion -> o
    android.view.MotionEvent mCurrentDownEvent -> p
    android.view.MotionEvent mPreviousUpEvent -> q
    boolean mIsDoubleTapping -> r
    float mLastFocusX -> s
    float mLastFocusY -> t
    float mDownFocusX -> u
    float mDownFocusY -> v
    boolean mIsLongpressEnabled -> w
    android.view.VelocityTracker mVelocityTracker -> x
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502$5abea42(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> f
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> a
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> b
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> c
    boolean mTempDetachBound -> d
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> b
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> d
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> e
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> b
    void sortChildDrawingOrder() -> f
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> g
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.ref.WeakReference mView -> b
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1:
    java.lang.Runnable val$runnable -> a
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> b
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2:
    java.lang.Runnable val$runnable -> a
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> b
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3:
    int val$currentLayerType -> a
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> b
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    android.view.animation.Interpolator mEdgeInterpolator -> b
    android.view.View mTarget -> c
    java.lang.Runnable mRunnable -> d
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    int mActivationDelay -> h
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    float[] mMaximumVelocity -> k
    boolean mAlreadyDelayed -> l
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    boolean mAnimating -> o
    boolean mEnabled -> p
    boolean mExclusive -> q
    int DEFAULT_ACTIVATION_DELAY -> r
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> a
    void requestStop() -> b
    float computeTargetVelocity(int,float,float,float) -> a
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float constrainEdgeValue(float,float) -> a
    float constrain(float,float,float) -> a
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> a
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> b
    boolean access$202$2149d4c8(android.support.v4.widget.AutoScrollHelper) -> c
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> d
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> e
    boolean access$102$2149d4c8(android.support.v4.widget.AutoScrollHelper) -> f
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> g
    boolean access$502$2149d4c8(android.support.v4.widget.AutoScrollHelper) -> h
    void access$600(android.support.v4.widget.AutoScrollHelper) -> i
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> j
    int access$800$4868d301(int,int) -> a
    float access$900$483d241b(float) -> a
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> a
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    void hide() -> hide
    void show() -> show
    boolean access$002$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> c
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> a
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mDisallowInterceptRequested -> p
    boolean mChildrenCanceledTouch -> q
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    android.graphics.drawable.Drawable mShadowLeft -> u
    android.graphics.drawable.Drawable mShadowRight -> v
    java.lang.CharSequence mTitleLeft -> w
    java.lang.CharSequence mTitleRight -> x
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> a
    int getDrawerViewAbsoluteGravity(android.view.View) -> b
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> e
    boolean isDrawerView(android.view.View) -> c
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> c
    void cancelChildViewTouch() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> b
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> a
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    java.lang.String DEFAULT_CLASS_NAME -> b
    android.graphics.Rect mTempScreenRect -> c
    android.graphics.Rect mTempParentRect -> d
    android.graphics.Rect mTempVisibleRect -> e
    int[] mTempGlobalRect -> f
    android.view.accessibility.AccessibilityManager mManager -> g
    android.view.View mView -> h
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> i
    int mFocusedVirtualViewId -> j
    int mHoveredVirtualViewId -> k
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> a
    boolean intersectVisibleToUser(android.graphics.Rect) -> a
    boolean isAccessibilityFocused(int) -> b
    int getVirtualViewAt$2548a28() -> b
    boolean onPerformActionForVirtualView$5985f823() -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> a
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> a
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> a
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> a
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> a
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelOpened(android.view.View) -> a
    void dispatchOnPanelClosed(android.view.View) -> b
    void updateObscuredViewsVisibility(android.view.View) -> c
    void setAllChildrenVisible() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96$134632() -> b
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> e
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> c
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setColorScheme(int,int,int,int) -> a
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds$3b4dfe4b(int,int) -> a
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> a
    android.support.v4.widget.SwipeProgressBar mProgressBar -> b
    android.view.View mTarget -> c
    int mOriginalOffsetTop -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    int mMediumAnimationDuration -> j
    float mFromPercentage -> k
    float mCurrPercentage -> l
    int mProgressBarHeight -> m
    int mCurrentTargetOffsetTop -> n
    float mInitialMotionY -> o
    float mLastMotionY -> p
    boolean mIsBeingDragged -> q
    int mActivePointerId -> r
    boolean mReturningToStart -> s
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> t
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> u
    int[] LAYOUT_ATTRS -> v
    android.view.animation.Animation mAnimateToStartPosition -> w
    android.view.animation.Animation mShrinkTrigger -> x
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> y
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> z
    java.lang.Runnable mReturnToStartPosition -> A
    java.lang.Runnable mCancel -> B
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> a
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTargetOffsetTopAndBottom(int) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702$3ab76409(android.support.v4.widget.SwipeRefreshLayout) -> f
    float access$802$3ab76f4f(android.support.v4.widget.SwipeRefreshLayout) -> g
    boolean access$902$3ab72427(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> j
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> k
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> l
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> m
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> n
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> o
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory(int) -> b
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> a
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> a
    boolean tryCaptureViewForDrag(android.view.View,int) -> a
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> a
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.badlogic.gdx.Application -> com.badlogic.gdx.Application:
    int LOG_NONE -> LOG_NONE
    int LOG_DEBUG -> LOG_DEBUG
    int LOG_INFO -> LOG_INFO
    int LOG_ERROR -> LOG_ERROR
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.Application$ApplicationType:
    com.badlogic.gdx.Application$ApplicationType Android -> Android
    com.badlogic.gdx.Application$ApplicationType Desktop -> Desktop
    com.badlogic.gdx.Application$ApplicationType Applet -> Applet
    com.badlogic.gdx.Application$ApplicationType WebGL -> WebGL
    com.badlogic.gdx.Application$ApplicationType iOS -> iOS
    com.badlogic.gdx.Application$ApplicationType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.ApplicationAdapter:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.ApplicationListener:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Audio -> com.badlogic.gdx.Audio:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.Files:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.Files$FileType:
    com.badlogic.gdx.Files$FileType Classpath -> Classpath
    com.badlogic.gdx.Files$FileType Internal -> Internal
    com.badlogic.gdx.Files$FileType External -> External
    com.badlogic.gdx.Files$FileType Absolute -> Absolute
    com.badlogic.gdx.Files$FileType Local -> Local
    com.badlogic.gdx.Files$FileType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.Game:
    com.badlogic.gdx.Screen screen -> screen
    void dispose() -> dispose
    void pause() -> pause
    void resume() -> resume
    void render() -> render
    void resize(int,int) -> resize
    void setScreen(com.badlogic.gdx.Screen) -> setScreen
    com.badlogic.gdx.Screen getScreen() -> getScreen
com.badlogic.gdx.Gdx -> com.badlogic.gdx.Gdx:
    com.badlogic.gdx.Application app -> app
    com.badlogic.gdx.Graphics graphics -> graphics
    com.badlogic.gdx.Audio audio -> audio
    com.badlogic.gdx.Input input -> input
    com.badlogic.gdx.Files files -> files
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
com.badlogic.gdx.Graphics -> com.badlogic.gdx.Graphics:
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setIcon(com.badlogic.gdx.graphics.Pixmap[]) -> setIcon
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.Graphics$BufferFormat:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int samples -> samples
    boolean coverageSampling -> coverageSampling
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.Graphics$DisplayMode:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.Graphics$GraphicsType:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> AndroidGL
    com.badlogic.gdx.Graphics$GraphicsType JoglGL -> JoglGL
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> LWJGL
    com.badlogic.gdx.Graphics$GraphicsType Angle -> Angle
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> WebGL
    com.badlogic.gdx.Graphics$GraphicsType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.Input:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.Input$Buttons:
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int MIDDLE -> MIDDLE
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.Input$Keys:
    int ANY_KEY -> ANY_KEY
    int NUM_0 -> NUM_0
    int NUM_1 -> NUM_1
    int NUM_2 -> NUM_2
    int NUM_3 -> NUM_3
    int NUM_4 -> NUM_4
    int NUM_5 -> NUM_5
    int NUM_6 -> NUM_6
    int NUM_7 -> NUM_7
    int NUM_8 -> NUM_8
    int NUM_9 -> NUM_9
    int A -> A
    int ALT_LEFT -> ALT_LEFT
    int ALT_RIGHT -> ALT_RIGHT
    int APOSTROPHE -> APOSTROPHE
    int AT -> AT
    int B -> B
    int BACK -> BACK
    int BACKSLASH -> BACKSLASH
    int C -> C
    int CALL -> CALL
    int CAMERA -> CAMERA
    int CLEAR -> CLEAR
    int COMMA -> COMMA
    int D -> D
    int DEL -> DEL
    int BACKSPACE -> BACKSPACE
    int FORWARD_DEL -> FORWARD_DEL
    int DPAD_CENTER -> DPAD_CENTER
    int DPAD_DOWN -> DPAD_DOWN
    int DPAD_LEFT -> DPAD_LEFT
    int DPAD_RIGHT -> DPAD_RIGHT
    int DPAD_UP -> DPAD_UP
    int CENTER -> CENTER
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int UP -> UP
    int E -> E
    int ENDCALL -> ENDCALL
    int ENTER -> ENTER
    int ENVELOPE -> ENVELOPE
    int EQUALS -> EQUALS
    int EXPLORER -> EXPLORER
    int F -> F
    int FOCUS -> FOCUS
    int G -> G
    int GRAVE -> GRAVE
    int H -> H
    int HEADSETHOOK -> HEADSETHOOK
    int HOME -> HOME
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int LEFT_BRACKET -> LEFT_BRACKET
    int M -> M
    int MEDIA_FAST_FORWARD -> MEDIA_FAST_FORWARD
    int MEDIA_NEXT -> MEDIA_NEXT
    int MEDIA_PLAY_PAUSE -> MEDIA_PLAY_PAUSE
    int MEDIA_PREVIOUS -> MEDIA_PREVIOUS
    int MEDIA_REWIND -> MEDIA_REWIND
    int MEDIA_STOP -> MEDIA_STOP
    int MENU -> MENU
    int MINUS -> MINUS
    int MUTE -> MUTE
    int N -> N
    int NOTIFICATION -> NOTIFICATION
    int NUM -> NUM
    int O -> O
    int P -> P
    int PERIOD -> PERIOD
    int PLUS -> PLUS
    int POUND -> POUND
    int POWER -> POWER
    int Q -> Q
    int R -> R
    int RIGHT_BRACKET -> RIGHT_BRACKET
    int S -> S
    int SEARCH -> SEARCH
    int SEMICOLON -> SEMICOLON
    int SHIFT_LEFT -> SHIFT_LEFT
    int SHIFT_RIGHT -> SHIFT_RIGHT
    int SLASH -> SLASH
    int SOFT_LEFT -> SOFT_LEFT
    int SOFT_RIGHT -> SOFT_RIGHT
    int SPACE -> SPACE
    int STAR -> STAR
    int SYM -> SYM
    int T -> T
    int TAB -> TAB
    int U -> U
    int UNKNOWN -> UNKNOWN
    int V -> V
    int VOLUME_DOWN -> VOLUME_DOWN
    int VOLUME_UP -> VOLUME_UP
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int META_ALT_LEFT_ON -> META_ALT_LEFT_ON
    int META_ALT_ON -> META_ALT_ON
    int META_ALT_RIGHT_ON -> META_ALT_RIGHT_ON
    int META_SHIFT_LEFT_ON -> META_SHIFT_LEFT_ON
    int META_SHIFT_ON -> META_SHIFT_ON
    int META_SHIFT_RIGHT_ON -> META_SHIFT_RIGHT_ON
    int META_SYM_ON -> META_SYM_ON
    int CONTROL_LEFT -> CONTROL_LEFT
    int CONTROL_RIGHT -> CONTROL_RIGHT
    int ESCAPE -> ESCAPE
    int END -> END
    int INSERT -> INSERT
    int PAGE_UP -> PAGE_UP
    int PAGE_DOWN -> PAGE_DOWN
    int PICTSYMBOLS -> PICTSYMBOLS
    int SWITCH_CHARSET -> SWITCH_CHARSET
    int BUTTON_CIRCLE -> BUTTON_CIRCLE
    int BUTTON_A -> BUTTON_A
    int BUTTON_B -> BUTTON_B
    int BUTTON_C -> BUTTON_C
    int BUTTON_X -> BUTTON_X
    int BUTTON_Y -> BUTTON_Y
    int BUTTON_Z -> BUTTON_Z
    int BUTTON_L1 -> BUTTON_L1
    int BUTTON_R1 -> BUTTON_R1
    int BUTTON_L2 -> BUTTON_L2
    int BUTTON_R2 -> BUTTON_R2
    int BUTTON_THUMBL -> BUTTON_THUMBL
    int BUTTON_THUMBR -> BUTTON_THUMBR
    int BUTTON_START -> BUTTON_START
    int BUTTON_SELECT -> BUTTON_SELECT
    int BUTTON_MODE -> BUTTON_MODE
    int COLON -> COLON
    int F1 -> F1
    int F2 -> F2
    int F3 -> F3
    int F4 -> F4
    int F5 -> F5
    int F6 -> F6
    int F7 -> F7
    int F8 -> F8
    int F9 -> F9
    int F10 -> F10
    int F11 -> F11
    int F12 -> F12
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.Input$Orientation:
    com.badlogic.gdx.Input$Orientation Landscape -> Landscape
    com.badlogic.gdx.Input$Orientation Portrait -> Portrait
    com.badlogic.gdx.Input$Orientation[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.Input$Peripheral:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> HardwareKeyboard
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> OnscreenKeyboard
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> MultitouchScreen
    com.badlogic.gdx.Input$Peripheral Accelerometer -> Accelerometer
    com.badlogic.gdx.Input$Peripheral Compass -> Compass
    com.badlogic.gdx.Input$Peripheral Vibrator -> Vibrator
    com.badlogic.gdx.Input$Peripheral[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.Input$TextInputListener:
    void input(java.lang.String) -> input
    void canceled() -> canceled
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.InputAdapter:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchMoved(int,int) -> touchMoved
    boolean scrolled(int) -> scrolled
    boolean keyTyped(java.lang.String) -> keyTyped
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.InputMultiplexer:
    com.badlogic.gdx.utils.Array processors -> processors
    void addProcessor(int,com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(int) -> removeProcessor
    void addProcessor(com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(com.badlogic.gdx.InputProcessor) -> removeProcessor
    int size() -> size
    void clear() -> clear
    void setProcessors(com.badlogic.gdx.utils.Array) -> setProcessors
    com.badlogic.gdx.utils.Array getProcessors() -> getProcessors
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchMoved(int,int) -> touchMoved
    boolean scrolled(int) -> scrolled
    boolean keyTyped(java.lang.String) -> keyTyped
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.InputProcessor:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean keyTyped(java.lang.String) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchMoved(int,int) -> touchMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.Preferences -> com.badlogic.gdx.Preferences:
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.Screen:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Version -> com.badlogic.gdx.Version:
    java.lang.String VERSION -> VERSION
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.assets.AssetDescriptor:
    java.lang.String fileName -> fileName
    java.lang.Class type -> type
    com.badlogic.gdx.assets.AssetLoaderParameters params -> params
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.assets.AssetErrorListener:
    void error(java.lang.String,java.lang.Class,java.lang.Throwable) -> error
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.assets.AssetLoaderParameters:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> loadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.assets.AssetLoadingTask:
    com.badlogic.gdx.assets.AssetManager manager -> manager
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> assetDesc
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> loader
    java.util.concurrent.ExecutorService threadPool -> threadPool
    long startTime -> startTime
    boolean asyncDone -> asyncDone
    boolean dependenciesLoaded -> dependenciesLoaded
    com.badlogic.gdx.utils.Array dependencies -> dependencies
    java.util.concurrent.Future depsFuture -> depsFuture
    java.util.concurrent.Future loadFuture -> loadFuture
    java.lang.Object asset -> asset
    int ticks -> ticks
    boolean cancel -> cancel
    java.lang.Void call() -> call
    boolean update() -> update
    void handleSyncLoader() -> handleSyncLoader
    void handleAsyncLoader() -> handleAsyncLoader
    java.lang.Object getAsset() -> getAsset
    java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.assets.AssetManager:
    com.badlogic.gdx.utils.ObjectMap assets -> assets
    com.badlogic.gdx.utils.ObjectMap assetTypes -> assetTypes
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> assetDependencies
    com.badlogic.gdx.utils.ObjectMap loaders -> loaders
    com.badlogic.gdx.utils.Array loadQueue -> loadQueue
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Stack tasks -> tasks
    com.badlogic.gdx.assets.AssetErrorListener listener -> listener
    int loaded -> loaded
    int toLoad -> toLoad
    com.badlogic.gdx.utils.Logger log -> log
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    void unload(java.lang.String) -> unload
    boolean containsAsset(java.lang.Object) -> containsAsset
    java.lang.String getAssetFileName(java.lang.Object) -> getAssetFileName
    boolean isLoaded(java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.String,java.lang.Class) -> isLoaded
    void load(java.lang.String,java.lang.Class) -> load
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    void load(com.badlogic.gdx.assets.AssetDescriptor) -> load
    void disposeDependencies(java.lang.String) -> disposeDependencies
    boolean update() -> update
    void finishLoading() -> finishLoading
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> injectDependency
    void nextTask() -> nextTask
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> addTask
    boolean updateTask() -> updateTask
    void incrementRefCountedDependencies(java.lang.String) -> incrementRefCountedDependencies
    void handleTaskError(java.lang.Throwable) -> handleTaskError
    void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    int getLoadedAssets() -> getLoadedAssets
    int getQueuedAssets() -> getQueuedAssets
    float getProgress() -> getProgress
    void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> setErrorListener
    void dispose() -> dispose
    void clear() -> clear
    com.badlogic.gdx.utils.Logger getLogger() -> getLogger
    int getReferenceCount(java.lang.String) -> getReferenceCount
    void setReferenceCount(java.lang.String,int) -> setReferenceCount
    java.lang.String getDiagnostics() -> getDiagnostics
com.badlogic.gdx.assets.AssetManager$1 -> com.badlogic.gdx.assets.AssetManager$1:
    com.badlogic.gdx.assets.AssetManager this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.assets.RefCountedContainer:
    java.lang.Object object -> object
    int refCount -> refCount
    void incRefCount() -> incRefCount
    void decRefCount() -> decRefCount
    int getRefCount() -> getRefCount
    void setRefCount(int) -> setRefCount
    java.lang.Object getObject(java.lang.Class) -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.assets.loaders.AssetLoader:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> resolver
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.assets.loaders.BitmapFontLoader:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter:
    boolean flip -> flip
    com.badlogic.gdx.graphics.Texture$TextureFilter minFitler -> minFitler
    com.badlogic.gdx.graphics.Texture$TextureFilter maxFilter -> maxFilter
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> bitmapFontData
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.assets.loaders.FileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.GenericLoader -> com.badlogic.gdx.assets.loaders.GenericLoader:
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.assets.loaders.MusicLoader:
    com.badlogic.gdx.audio.Music load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter:
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.assets.loaders.PixmapLoader:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadAsync
    com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.assets.loaders.SkinLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadAsync
    com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    java.lang.String texturePath -> texturePath
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.assets.loaders.SoundLoader:
    com.badlogic.gdx.audio.Sound load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> data
    com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    boolean flip -> flip
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.assets.loaders.TextureLoader:
    com.badlogic.gdx.graphics.TextureData data -> data
    com.badlogic.gdx.graphics.Texture texture -> texture
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadAsync
    com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.graphics.TextureData textureData -> textureData
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> wrapU
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> wrapV
com.badlogic.gdx.assets.loaders.TileAtlasLoader -> com.badlogic.gdx.assets.loaders.TileAtlasLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter -> com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter:
    java.lang.String tileMapFile -> tileMapFile
    java.lang.String inputDirectory -> inputDirectory
com.badlogic.gdx.assets.loaders.TileMapRendererLoader -> com.badlogic.gdx.assets.loaders.TileMapRendererLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter) -> getDependencies
    com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter) -> load
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter -> com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter:
    java.lang.String imageDirectory -> imageDirectory
    int tilesPerBlockX -> tilesPerBlockX
    int tilesPerBlockY -> tilesPerBlockY
    float unitsPerTileX -> unitsPerTileX
    float unitsPerTileY -> unitsPerTileY
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> baseResolver
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> descriptors
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> resolve
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> choose
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    int portraitWidth -> portraitWidth
    int portraitHeight -> portraitHeight
    java.lang.String suffix -> suffix
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.audio.AudioDevice:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.audio.AudioRecorder:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.audio.Music:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getPosition() -> getPosition
    void dispose() -> dispose
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.audio.Sound:
    long play() -> play
    long play(float) -> play
    long loop() -> loop
    long loop(float) -> loop
    void stop() -> stop
    void dispose() -> dispose
    void stop(long) -> stop
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    android.content.Context mContext -> mContext
    boolean swapSurface -> swapSurface
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array urgentRunnables -> urgentRunnables
    com.badlogic.gdx.utils.Array executedUrgentRunnables -> executedUrgentRunnables
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    void postRunnable(java.lang.Runnable) -> postRunnable
    void postUrgentRunnable(java.lang.Runnable) -> postUrgentRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    boolean useGL20 -> useGL20
    boolean handleKeyTypedChinese -> handleKeyTypedChinese
    boolean pauseEglHelper -> pauseEglHelper
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    java.util.List wasPlaying -> wasPlaying
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.AndroidGL10:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLineWidth(float) -> glLineWidth
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glFogfv(int,float[],int) -> glFogfv
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.AndroidGL11:
    javax.microedition.khronos.opengles.GL11 gl -> gl
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGLU -> com.badlogic.gdx.backends.android.AndroidGLU:
    void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float) -> gluLookAt
    void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluOrtho2D
    void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluPerspective
    boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluProject
    boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluUnProject
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    boolean launcherPause -> launcherPause
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    boolean isSurfaceCreated -> isSurfaceCreated
    android.content.Context mContext -> mContext
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.content.Context,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setIcon(com.badlogic.gdx.graphics.Pixmap[]) -> setIcon
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    android.content.Context access$0(com.badlogic.gdx.backends.android.AndroidGraphics) -> access$0
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
com.badlogic.gdx.backends.android.AndroidGraphics$2 -> com.badlogic.gdx.backends.android.AndroidGraphics$2:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    android.content.Context mContext -> mContext
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    long getCurrentEventTime() -> getCurrentEventTime
    void setCurrentEventTime(long) -> setCurrentEventTime
    android.content.Context access$0(com.badlogic.gdx.backends.android.AndroidInput) -> access$0
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    android.widget.EditText val$input -> val$input
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    android.widget.EditText val$input -> val$input
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    android.widget.EditText val$input -> val$input
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    android.widget.EditText val$input -> val$input
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    boolean val$visible -> val$visible
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int KEY_TYPED_CHINESE -> KEY_TYPED_CHINESE
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
    java.lang.String keyCharacters -> keyCharacters
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(com.badlogic.gdx.backends.android.AndroidApplication) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    void stop() -> stop
    float getPosition() -> getPosition
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard access$0(com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2) -> access$0
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    android.view.View val$content -> val$content
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(com.badlogic.gdx.backends.android.AndroidApplication) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(com.badlogic.gdx.backends.android.AndroidApplication) -> supportsMultitouch
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> mEgl10
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    boolean mCheckError -> mCheckError
    int mArgCount -> mArgCount
    boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    int eglGetError() -> eglGetError
    boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    boolean eglWaitGL() -> eglWaitGL
    boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,java.lang.Object) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void returns(boolean) -> returns
    void returns(java.lang.Object) -> returns
    java.lang.String toString(java.lang.Object) -> toString
    void arg(java.lang.String,int[]) -> arg
    void arg(java.lang.String,java.lang.Object[]) -> arg
    java.lang.String toString(int,int[],int) -> toString
    java.lang.String toString(int,java.lang.Object[],int) -> toString
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    int CONFIG_CHECK_GL_ERROR -> CONFIG_CHECK_GL_ERROR
    int CONFIG_CHECK_THREAD -> CONFIG_CHECK_THREAD
    int CONFIG_LOG_ARGUMENT_NAMES -> CONFIG_LOG_ARGUMENT_NAMES
    int ERROR_WRONG_THREAD -> ERROR_WRONG_THREAD
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> wrap
    javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper:
    boolean mCheckError -> mCheckError
    boolean mCheckThread -> mCheckThread
    java.lang.Thread mOurThread -> mOurThread
    void checkThread() -> checkThread
    void checkError() -> checkError
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.GLException:
    int mError -> mError
    java.lang.String getErrorString(int) -> getErrorString
    int getError() -> getError
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    int FORMAT_INT -> FORMAT_INT
    int FORMAT_FLOAT -> FORMAT_FLOAT
    int FORMAT_FIXED -> FORMAT_FIXED
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    int mArgCount -> mArgCount
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> mColorPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> mNormalPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> mTexCoordPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> mVertexPointer
    boolean mColorArrayEnabled -> mColorArrayEnabled
    boolean mNormalArrayEnabled -> mNormalArrayEnabled
    boolean mTextureCoordArrayEnabled -> mTextureCoordArrayEnabled
    boolean mVertexArrayEnabled -> mVertexArrayEnabled
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,boolean) -> arg
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,float) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void arg(java.lang.String,int,int[],int) -> arg
    void arg(java.lang.String,int,short[],int) -> arg
    void arg(java.lang.String,int,float[],int) -> arg
    void formattedAppend(java.lang.StringBuilder,int,int) -> formattedAppend
    java.lang.String toString(int,int,int[],int) -> toString
    java.lang.String toString(int,short[],int) -> toString
    java.lang.String toString(int,float[],int) -> toString
    java.lang.String toString(int,java.nio.FloatBuffer) -> toString
    java.lang.String toString(int,int,java.nio.IntBuffer) -> toString
    java.lang.String toString(int,java.nio.ShortBuffer) -> toString
    void arg(java.lang.String,int,java.nio.FloatBuffer) -> arg
    void arg(java.lang.String,int,java.nio.IntBuffer) -> arg
    void arg(java.lang.String,int,java.nio.ShortBuffer) -> arg
    void argPointer(int,int,int,java.nio.Buffer) -> argPointer
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String getClearBufferMask(int) -> getClearBufferMask
    java.lang.String getFactor(int) -> getFactor
    java.lang.String getShadeModel(int) -> getShadeModel
    java.lang.String getTextureTarget(int) -> getTextureTarget
    java.lang.String getTextureEnvTarget(int) -> getTextureEnvTarget
    java.lang.String getTextureEnvPName(int) -> getTextureEnvPName
    int getTextureEnvParamCount(int) -> getTextureEnvParamCount
    java.lang.String getTextureEnvParamName(float) -> getTextureEnvParamName
    java.lang.String getMatrixMode(int) -> getMatrixMode
    java.lang.String getClientState(int) -> getClientState
    java.lang.String getCap(int) -> getCap
    java.lang.String getTexturePName(int) -> getTexturePName
    java.lang.String getTextureParamName(float) -> getTextureParamName
    java.lang.String getFogPName(int) -> getFogPName
    int getFogParamCount(int) -> getFogParamCount
    java.lang.String getBeginMode(int) -> getBeginMode
    java.lang.String getIndexType(int) -> getIndexType
    java.lang.String getIntegerStateName(int) -> getIntegerStateName
    int getIntegerStateSize(int) -> getIntegerStateSize
    int getIntegerStateFormat(int) -> getIntegerStateFormat
    java.lang.String getHintTarget(int) -> getHintTarget
    java.lang.String getHintMode(int) -> getHintMode
    java.lang.String getFaceName(int) -> getFaceName
    java.lang.String getMaterialPName(int) -> getMaterialPName
    int getMaterialParamCount(int) -> getMaterialParamCount
    java.lang.String getLightName(int) -> getLightName
    java.lang.String getLightPName(int) -> getLightPName
    int getLightParamCount(int) -> getLightParamCount
    java.lang.String getLightModelPName(int) -> getLightModelPName
    int getLightModelParamCount(int) -> getLightModelParamCount
    java.lang.String getPointerTypeName(int) -> getPointerTypeName
    java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> toByteBuffer
    char[] toCharIndices(int,int,java.nio.Buffer) -> toCharIndices
    void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> doArrayElement
    void doElement(java.lang.StringBuilder,int,int) -> doElement
    void bindArrays() -> bindArrays
    void unbindArrays() -> unbindArrays
    void startLogIndices() -> startLogIndices
    void endLogIndices() -> endLogIndices
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo:
    int mSize -> mSize
    int mType -> mType
    int mStride -> mStride
    java.nio.Buffer mPointer -> mPointer
    java.nio.ByteBuffer mTempByteBuffer -> mTempByteBuffer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> this$0
    int sizeof(int) -> sizeof
    int getStride() -> getStride
    void bindByteBuffer() -> bindByteBuffer
    void unbindByteBuffer() -> unbindByteBuffer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    java.lang.Object sEglLock -> sEglLock
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    void onMeasure(int,int) -> onMeasure
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void finish() -> finish
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    boolean mDone -> mDone
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    java.util.ArrayList mEventQueue -> mEventQueue
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> mEglHelper
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void run() -> run
    void guardedRun() -> guardedRun
    boolean needToWait() -> needToWait
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
    java.lang.Runnable getEvent() -> getEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    javax.microedition.khronos.opengles.GL10 mgl -> mgl
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> mgl10Ext
    javax.microedition.khronos.opengles.GL11 mgl11 -> mgl11
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> mgl11Ext
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> mgl11ExtensionPack
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
    void glBindFramebufferOES(int,int) -> glBindFramebufferOES
    void glBindRenderbufferOES(int,int) -> glBindRenderbufferOES
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    int glCheckFramebufferStatusOES(int) -> glCheckFramebufferStatusOES
    void glCompressedTexImage2D(int,int,int,int,int,int,int) -> glCompressedTexImage2D
    void glDeleteFramebuffersOES(int,int[],int) -> glDeleteFramebuffersOES
    void glDeleteFramebuffersOES(int,java.nio.IntBuffer) -> glDeleteFramebuffersOES
    void glDeleteRenderbuffersOES(int,int[],int) -> glDeleteRenderbuffersOES
    void glDeleteRenderbuffersOES(int,java.nio.IntBuffer) -> glDeleteRenderbuffersOES
    void glFramebufferRenderbufferOES(int,int,int,int) -> glFramebufferRenderbufferOES
    void glFramebufferTexture2DOES(int,int,int,int,int) -> glFramebufferTexture2DOES
    void glGenerateMipmapOES(int) -> glGenerateMipmapOES
    void glGenFramebuffersOES(int,int[],int) -> glGenFramebuffersOES
    void glGenFramebuffersOES(int,java.nio.IntBuffer) -> glGenFramebuffersOES
    void glGenRenderbuffersOES(int,int[],int) -> glGenRenderbuffersOES
    void glGenRenderbuffersOES(int,java.nio.IntBuffer) -> glGenRenderbuffersOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int) -> glGetFramebufferAttachmentParameterivOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameterivOES
    void glGetRenderbufferParameterivOES(int,int,int[],int) -> glGetRenderbufferParameterivOES
    void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameterivOES
    void glGetTexGenfv(int,int,float[],int) -> glGetTexGenfv
    void glGetTexGenfv(int,int,java.nio.FloatBuffer) -> glGetTexGenfv
    void glGetTexGeniv(int,int,int[],int) -> glGetTexGeniv
    void glGetTexGeniv(int,int,java.nio.IntBuffer) -> glGetTexGeniv
    void glGetTexGenxv(int,int,int[],int) -> glGetTexGenxv
    void glGetTexGenxv(int,int,java.nio.IntBuffer) -> glGetTexGenxv
    boolean glIsFramebufferOES(int) -> glIsFramebufferOES
    boolean glIsRenderbufferOES(int) -> glIsRenderbufferOES
    void glRenderbufferStorageOES(int,int,int,int) -> glRenderbufferStorageOES
    void glTexGenf(int,int,float) -> glTexGenf
    void glTexGenfv(int,int,float[],int) -> glTexGenfv
    void glTexGenfv(int,int,java.nio.FloatBuffer) -> glTexGenfv
    void glTexGeni(int,int,int) -> glTexGeni
    void glTexGeniv(int,int,int[],int) -> glTexGeniv
    void glTexGeniv(int,int,java.nio.IntBuffer) -> glTexGeniv
    void glTexGenx(int,int,int) -> glTexGenx
    void glTexGenxv(int,int,int[],int) -> glTexGenxv
    void glTexGenxv(int,int,java.nio.IntBuffer) -> glTexGenxv
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    boolean mUseGL20 -> mUseGL20
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.IOnMeasureListener -> com.badlogic.gdx.backends.android.surfaceview.IOnMeasureListener:
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.files.FileHandle:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    int[] $SWITCH_TABLE$com$badlogic$gdx$Files$FileType -> $SWITCH_TABLE$com$badlogic$gdx$Files$FileType
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
    int[] $SWITCH_TABLE$com$badlogic$gdx$Files$FileType() -> $SWITCH_TABLE$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.files.FileHandleStream:
    boolean isDirectory() -> isDirectory
    long length() -> length
    boolean exists() -> exists
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    java.io.OutputStream write(boolean) -> write
    com.badlogic.gdx.files.FileHandle[] list() -> list
    void mkdirs() -> mkdirs
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.Camera:
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 up -> up
    com.badlogic.gdx.math.Matrix4 projection -> projection
    com.badlogic.gdx.math.Matrix4 view -> view
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 invProjectionView -> invProjectionView
    float near -> near
    float far -> far
    float viewportWidth -> viewportWidth
    float viewportHeight -> viewportHeight
    com.badlogic.gdx.math.Frustum frustum -> frustum
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.collision.Ray ray -> ray
    void update() -> update
    void update(boolean) -> update
    void apply(com.badlogic.gdx.graphics.GL10) -> apply
    void lookAt(float,float,float) -> lookAt
    void normalizeUp() -> normalizeUp
    void rotate(float,float,float,float) -> rotate
    void translate(float,float,float) -> translate
    void unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> unproject
    void unproject(com.badlogic.gdx.math.Vector3) -> unproject
    void project(com.badlogic.gdx.math.Vector3) -> project
    void project(com.badlogic.gdx.math.Vector3,float,float,float,float) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float) -> getPickRay
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> CLEAR
    com.badlogic.gdx.graphics.Color WHITE -> WHITE
    com.badlogic.gdx.graphics.Color BLACK -> BLACK
    com.badlogic.gdx.graphics.Color RED -> RED
    com.badlogic.gdx.graphics.Color GREEN -> GREEN
    com.badlogic.gdx.graphics.Color BLUE -> BLUE
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> LIGHT_GRAY
    com.badlogic.gdx.graphics.Color GRAY -> GRAY
    com.badlogic.gdx.graphics.Color DARK_GRAY -> DARK_GRAY
    com.badlogic.gdx.graphics.Color PINK -> PINK
    com.badlogic.gdx.graphics.Color ORANGE -> ORANGE
    com.badlogic.gdx.graphics.Color YELLOW -> YELLOW
    com.badlogic.gdx.graphics.Color MAGENTA -> MAGENTA
    com.badlogic.gdx.graphics.Color CYAN -> CYAN
    float r -> r
    float g -> g
    float b -> b
    float a -> a
    com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> mul
    com.badlogic.gdx.graphics.Color mul(float) -> mul
    com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> sub
    void clamp() -> clamp
    void set(float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    float toFloatBits(int,int,int,int) -> toFloatBits
    int toIntBits(int,int,int,int) -> toIntBits
    float toFloatBits() -> toFloatBits
    int toIntBits() -> toIntBits
    float toFloatBits(float,float,float,float) -> toFloatBits
    int alpha(float) -> alpha
    int luminanceAlpha(float,float) -> luminanceAlpha
    int rgb565(float,float,float) -> rgb565
    int rgba4444(float,float,float,float) -> rgba4444
    int rgb888(float,float,float) -> rgb888
    int rgba8888(float,float,float,float) -> rgba8888
    int rgb565(com.badlogic.gdx.graphics.Color) -> rgb565
    int rgba4444(com.badlogic.gdx.graphics.Color) -> rgba4444
    int rgb888(com.badlogic.gdx.graphics.Color) -> rgb888
    int rgba8888(com.badlogic.gdx.graphics.Color) -> rgba8888
    void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb565ToColor
    void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba4444ToColor
    void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb888ToColor
    void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba8888ToColor
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.FPSLogger:
    long startTime -> startTime
    void log() -> log
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.GL10:
    int GL_OES_VERSION_1_0 -> GL_OES_VERSION_1_0
    int GL_OES_read_format -> GL_OES_read_format
    int GL_OES_compressed_paletted_texture -> GL_OES_compressed_paletted_texture
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_FOG -> GL_FOG
    int GL_LIGHTING -> GL_LIGHTING
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_ALPHA_TEST -> GL_ALPHA_TEST
    int GL_BLEND -> GL_BLEND
    int GL_COLOR_LOGIC_OP -> GL_COLOR_LOGIC_OP
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_POINT_SMOOTH -> GL_POINT_SMOOTH
    int GL_LINE_SMOOTH -> GL_LINE_SMOOTH
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_COLOR_MATERIAL -> GL_COLOR_MATERIAL
    int GL_NORMALIZE -> GL_NORMALIZE
    int GL_RESCALE_NORMAL -> GL_RESCALE_NORMAL
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_VERTEX_ARRAY -> GL_VERTEX_ARRAY
    int GL_NORMAL_ARRAY -> GL_NORMAL_ARRAY
    int GL_COLOR_ARRAY -> GL_COLOR_ARRAY
    int GL_TEXTURE_COORD_ARRAY -> GL_TEXTURE_COORD_ARRAY
    int GL_MULTISAMPLE -> GL_MULTISAMPLE
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_ALPHA_TO_ONE -> GL_SAMPLE_ALPHA_TO_ONE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_STACK_OVERFLOW -> GL_STACK_OVERFLOW
    int GL_STACK_UNDERFLOW -> GL_STACK_UNDERFLOW
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_EXP -> GL_EXP
    int GL_EXP2 -> GL_EXP2
    int GL_FOG_DENSITY -> GL_FOG_DENSITY
    int GL_FOG_START -> GL_FOG_START
    int GL_FOG_END -> GL_FOG_END
    int GL_FOG_MODE -> GL_FOG_MODE
    int GL_FOG_COLOR -> GL_FOG_COLOR
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_SMOOTH_POINT_SIZE_RANGE -> GL_SMOOTH_POINT_SIZE_RANGE
    int GL_SMOOTH_LINE_WIDTH_RANGE -> GL_SMOOTH_LINE_WIDTH_RANGE
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES -> GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES -> GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    int GL_MAX_LIGHTS -> GL_MAX_LIGHTS
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_MODELVIEW_STACK_DEPTH -> GL_MAX_MODELVIEW_STACK_DEPTH
    int GL_MAX_PROJECTION_STACK_DEPTH -> GL_MAX_PROJECTION_STACK_DEPTH
    int GL_MAX_TEXTURE_STACK_DEPTH -> GL_MAX_TEXTURE_STACK_DEPTH
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_PERSPECTIVE_CORRECTION_HINT -> GL_PERSPECTIVE_CORRECTION_HINT
    int GL_POINT_SMOOTH_HINT -> GL_POINT_SMOOTH_HINT
    int GL_LINE_SMOOTH_HINT -> GL_LINE_SMOOTH_HINT
    int GL_POLYGON_SMOOTH_HINT -> GL_POLYGON_SMOOTH_HINT
    int GL_FOG_HINT -> GL_FOG_HINT
    int GL_LIGHT_MODEL_AMBIENT -> GL_LIGHT_MODEL_AMBIENT
    int GL_LIGHT_MODEL_TWO_SIDE -> GL_LIGHT_MODEL_TWO_SIDE
    int GL_AMBIENT -> GL_AMBIENT
    int GL_DIFFUSE -> GL_DIFFUSE
    int GL_SPECULAR -> GL_SPECULAR
    int GL_POSITION -> GL_POSITION
    int GL_SPOT_DIRECTION -> GL_SPOT_DIRECTION
    int GL_SPOT_EXPONENT -> GL_SPOT_EXPONENT
    int GL_SPOT_CUTOFF -> GL_SPOT_CUTOFF
    int GL_CONSTANT_ATTENUATION -> GL_CONSTANT_ATTENUATION
    int GL_LINEAR_ATTENUATION -> GL_LINEAR_ATTENUATION
    int GL_QUADRATIC_ATTENUATION -> GL_QUADRATIC_ATTENUATION
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_FLOAT -> GL_FLOAT
    int GL_CLEAR -> GL_CLEAR
    int GL_AND -> GL_AND
    int GL_AND_REVERSE -> GL_AND_REVERSE
    int GL_COPY -> GL_COPY
    int GL_AND_INVERTED -> GL_AND_INVERTED
    int GL_NOOP -> GL_NOOP
    int GL_XOR -> GL_XOR
    int GL_OR -> GL_OR
    int GL_NOR -> GL_NOR
    int GL_EQUIV -> GL_EQUIV
    int GL_INVERT -> GL_INVERT
    int GL_OR_REVERSE -> GL_OR_REVERSE
    int GL_COPY_INVERTED -> GL_COPY_INVERTED
    int GL_OR_INVERTED -> GL_OR_INVERTED
    int GL_NAND -> GL_NAND
    int GL_SET -> GL_SET
    int GL_EMISSION -> GL_EMISSION
    int GL_SHININESS -> GL_SHININESS
    int GL_AMBIENT_AND_DIFFUSE -> GL_AMBIENT_AND_DIFFUSE
    int GL_MODELVIEW -> GL_MODELVIEW
    int GL_PROJECTION -> GL_PROJECTION
    int GL_TEXTURE -> GL_TEXTURE
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FLAT -> GL_FLAT
    int GL_SMOOTH -> GL_SMOOTH
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_MODULATE -> GL_MODULATE
    int GL_DECAL -> GL_DECAL
    int GL_ADD -> GL_ADD
    int GL_TEXTURE_ENV_MODE -> GL_TEXTURE_ENV_MODE
    int GL_TEXTURE_ENV_COLOR -> GL_TEXTURE_ENV_COLOR
    int GL_TEXTURE_ENV -> GL_TEXTURE_ENV
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_PALETTE4_RGB8_OES -> GL_PALETTE4_RGB8_OES
    int GL_PALETTE4_RGBA8_OES -> GL_PALETTE4_RGBA8_OES
    int GL_PALETTE4_R5_G6_B5_OES -> GL_PALETTE4_R5_G6_B5_OES
    int GL_PALETTE4_RGBA4_OES -> GL_PALETTE4_RGBA4_OES
    int GL_PALETTE4_RGB5_A1_OES -> GL_PALETTE4_RGB5_A1_OES
    int GL_PALETTE8_RGB8_OES -> GL_PALETTE8_RGB8_OES
    int GL_PALETTE8_RGBA8_OES -> GL_PALETTE8_RGBA8_OES
    int GL_PALETTE8_R5_G6_B5_OES -> GL_PALETTE8_R5_G6_B5_OES
    int GL_PALETTE8_RGBA4_OES -> GL_PALETTE8_RGBA4_OES
    int GL_PALETTE8_RGB5_A1_OES -> GL_PALETTE8_RGB5_A1_OES
    int GL_LIGHT0 -> GL_LIGHT0
    int GL_LIGHT1 -> GL_LIGHT1
    int GL_LIGHT2 -> GL_LIGHT2
    int GL_LIGHT3 -> GL_LIGHT3
    int GL_LIGHT4 -> GL_LIGHT4
    int GL_LIGHT5 -> GL_LIGHT5
    int GL_LIGHT6 -> GL_LIGHT6
    int GL_LIGHT7 -> GL_LIGHT7
    int GL_POINT -> GL_POINT
    int GL_LINE -> GL_LINE
    int GL_FILL -> GL_FILL
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDisableClientState(int) -> glDisableClientState
    void glEnableClientState(int) -> glEnableClientState
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPointSize(float) -> glPointSize
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glShadeModel(int) -> glShadeModel
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.GL11:
    int GL_OES_VERSION_1_0 -> GL_OES_VERSION_1_0
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_POLYGON_SMOOTH_HINT -> GL_POLYGON_SMOOTH_HINT
    int GL_VERSION_ES_CM_1_0 -> GL_VERSION_ES_CM_1_0
    int GL_VERSION_ES_CL_1_0 -> GL_VERSION_ES_CL_1_0
    int GL_VERSION_ES_CM_1_1 -> GL_VERSION_ES_CM_1_1
    int GL_VERSION_ES_CL_1_1 -> GL_VERSION_ES_CL_1_1
    int GL_CLIP_PLANE0 -> GL_CLIP_PLANE0
    int GL_CLIP_PLANE1 -> GL_CLIP_PLANE1
    int GL_CLIP_PLANE2 -> GL_CLIP_PLANE2
    int GL_CLIP_PLANE3 -> GL_CLIP_PLANE3
    int GL_CLIP_PLANE4 -> GL_CLIP_PLANE4
    int GL_CLIP_PLANE5 -> GL_CLIP_PLANE5
    int GL_CURRENT_COLOR -> GL_CURRENT_COLOR
    int GL_CURRENT_NORMAL -> GL_CURRENT_NORMAL
    int GL_CURRENT_TEXTURE_COORDS -> GL_CURRENT_TEXTURE_COORDS
    int GL_POINT_SIZE -> GL_POINT_SIZE
    int GL_POINT_SIZE_MIN -> GL_POINT_SIZE_MIN
    int GL_POINT_SIZE_MAX -> GL_POINT_SIZE_MAX
    int GL_POINT_FADE_THRESHOLD_SIZE -> GL_POINT_FADE_THRESHOLD_SIZE
    int GL_POINT_DISTANCE_ATTENUATION -> GL_POINT_DISTANCE_ATTENUATION
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_SHADE_MODEL -> GL_SHADE_MODEL
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_MATRIX_MODE -> GL_MATRIX_MODE
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_MODELVIEW_STACK_DEPTH -> GL_MODELVIEW_STACK_DEPTH
    int GL_PROJECTION_STACK_DEPTH -> GL_PROJECTION_STACK_DEPTH
    int GL_TEXTURE_STACK_DEPTH -> GL_TEXTURE_STACK_DEPTH
    int GL_MODELVIEW_MATRIX -> GL_MODELVIEW_MATRIX
    int GL_PROJECTION_MATRIX -> GL_PROJECTION_MATRIX
    int GL_TEXTURE_MATRIX -> GL_TEXTURE_MATRIX
    int GL_ALPHA_TEST_FUNC -> GL_ALPHA_TEST_FUNC
    int GL_ALPHA_TEST_REF -> GL_ALPHA_TEST_REF
    int GL_BLEND_DST -> GL_BLEND_DST
    int GL_BLEND_SRC -> GL_BLEND_SRC
    int GL_LOGIC_OP_MODE -> GL_LOGIC_OP_MODE
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_MAX_CLIP_PLANES -> GL_MAX_CLIP_PLANES
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_VERTEX_ARRAY_SIZE -> GL_VERTEX_ARRAY_SIZE
    int GL_VERTEX_ARRAY_TYPE -> GL_VERTEX_ARRAY_TYPE
    int GL_VERTEX_ARRAY_STRIDE -> GL_VERTEX_ARRAY_STRIDE
    int GL_NORMAL_ARRAY_TYPE -> GL_NORMAL_ARRAY_TYPE
    int GL_NORMAL_ARRAY_STRIDE -> GL_NORMAL_ARRAY_STRIDE
    int GL_COLOR_ARRAY_SIZE -> GL_COLOR_ARRAY_SIZE
    int GL_COLOR_ARRAY_TYPE -> GL_COLOR_ARRAY_TYPE
    int GL_COLOR_ARRAY_STRIDE -> GL_COLOR_ARRAY_STRIDE
    int GL_TEXTURE_COORD_ARRAY_SIZE -> GL_TEXTURE_COORD_ARRAY_SIZE
    int GL_TEXTURE_COORD_ARRAY_TYPE -> GL_TEXTURE_COORD_ARRAY_TYPE
    int GL_TEXTURE_COORD_ARRAY_STRIDE -> GL_TEXTURE_COORD_ARRAY_STRIDE
    int GL_VERTEX_ARRAY_POINTER -> GL_VERTEX_ARRAY_POINTER
    int GL_NORMAL_ARRAY_POINTER -> GL_NORMAL_ARRAY_POINTER
    int GL_COLOR_ARRAY_POINTER -> GL_COLOR_ARRAY_POINTER
    int GL_TEXTURE_COORD_ARRAY_POINTER -> GL_TEXTURE_COORD_ARRAY_POINTER
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_CLIENT_ACTIVE_TEXTURE -> GL_CLIENT_ACTIVE_TEXTURE
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_VERTEX_ARRAY_BUFFER_BINDING -> GL_VERTEX_ARRAY_BUFFER_BINDING
    int GL_NORMAL_ARRAY_BUFFER_BINDING -> GL_NORMAL_ARRAY_BUFFER_BINDING
    int GL_COLOR_ARRAY_BUFFER_BINDING -> GL_COLOR_ARRAY_BUFFER_BINDING
    int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING -> GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_SUBTRACT -> GL_SUBTRACT
    int GL_COMBINE -> GL_COMBINE
    int GL_COMBINE_RGB -> GL_COMBINE_RGB
    int GL_COMBINE_ALPHA -> GL_COMBINE_ALPHA
    int GL_RGB_SCALE -> GL_RGB_SCALE
    int GL_ADD_SIGNED -> GL_ADD_SIGNED
    int GL_INTERPOLATE -> GL_INTERPOLATE
    int GL_CONSTANT -> GL_CONSTANT
    int GL_PRIMARY_COLOR -> GL_PRIMARY_COLOR
    int GL_PREVIOUS -> GL_PREVIOUS
    int GL_OPERAND0_RGB -> GL_OPERAND0_RGB
    int GL_OPERAND1_RGB -> GL_OPERAND1_RGB
    int GL_OPERAND2_RGB -> GL_OPERAND2_RGB
    int GL_OPERAND0_ALPHA -> GL_OPERAND0_ALPHA
    int GL_OPERAND1_ALPHA -> GL_OPERAND1_ALPHA
    int GL_OPERAND2_ALPHA -> GL_OPERAND2_ALPHA
    int GL_ALPHA_SCALE -> GL_ALPHA_SCALE
    int GL_SRC0_RGB -> GL_SRC0_RGB
    int GL_SRC1_RGB -> GL_SRC1_RGB
    int GL_SRC2_RGB -> GL_SRC2_RGB
    int GL_SRC0_ALPHA -> GL_SRC0_ALPHA
    int GL_SRC1_ALPHA -> GL_SRC1_ALPHA
    int GL_SRC2_ALPHA -> GL_SRC2_ALPHA
    int GL_DOT3_RGB -> GL_DOT3_RGB
    int GL_DOT3_RGBA -> GL_DOT3_RGBA
    int GL_POINT_SIZE_ARRAY_OES -> GL_POINT_SIZE_ARRAY_OES
    int GL_POINT_SIZE_ARRAY_TYPE_OES -> GL_POINT_SIZE_ARRAY_TYPE_OES
    int GL_POINT_SIZE_ARRAY_STRIDE_OES -> GL_POINT_SIZE_ARRAY_STRIDE_OES
    int GL_POINT_SIZE_ARRAY_POINTER_OES -> GL_POINT_SIZE_ARRAY_POINTER_OES
    int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES -> GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    int GL_POINT_SPRITE_OES -> GL_POINT_SPRITE_OES
    int GL_COORD_REPLACE_OES -> GL_COORD_REPLACE_OES
    int GL_OES_point_size_array -> GL_OES_point_size_array
    int GL_OES_point_sprite -> GL_OES_point_sprite
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.GL20:
    int GL_ES_VERSION_2_0 -> GL_ES_VERSION_2_0
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FUNC_ADD -> GL_FUNC_ADD
    int GL_BLEND_EQUATION -> GL_BLEND_EQUATION
    int GL_BLEND_EQUATION_RGB -> GL_BLEND_EQUATION_RGB
    int GL_BLEND_EQUATION_ALPHA -> GL_BLEND_EQUATION_ALPHA
    int GL_FUNC_SUBTRACT -> GL_FUNC_SUBTRACT
    int GL_FUNC_REVERSE_SUBTRACT -> GL_FUNC_REVERSE_SUBTRACT
    int GL_BLEND_DST_RGB -> GL_BLEND_DST_RGB
    int GL_BLEND_SRC_RGB -> GL_BLEND_SRC_RGB
    int GL_BLEND_DST_ALPHA -> GL_BLEND_DST_ALPHA
    int GL_BLEND_SRC_ALPHA -> GL_BLEND_SRC_ALPHA
    int GL_CONSTANT_COLOR -> GL_CONSTANT_COLOR
    int GL_ONE_MINUS_CONSTANT_COLOR -> GL_ONE_MINUS_CONSTANT_COLOR
    int GL_CONSTANT_ALPHA -> GL_CONSTANT_ALPHA
    int GL_ONE_MINUS_CONSTANT_ALPHA -> GL_ONE_MINUS_CONSTANT_ALPHA
    int GL_BLEND_COLOR -> GL_BLEND_COLOR
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_STREAM_DRAW -> GL_STREAM_DRAW
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_CURRENT_VERTEX_ATTRIB -> GL_CURRENT_VERTEX_ATTRIB
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_BLEND -> GL_BLEND
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_STENCIL_BACK_FUNC -> GL_STENCIL_BACK_FUNC
    int GL_STENCIL_BACK_FAIL -> GL_STENCIL_BACK_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> GL_STENCIL_BACK_PASS_DEPTH_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> GL_STENCIL_BACK_PASS_DEPTH_PASS
    int GL_STENCIL_BACK_REF -> GL_STENCIL_BACK_REF
    int GL_STENCIL_BACK_VALUE_MASK -> GL_STENCIL_BACK_VALUE_MASK
    int GL_STENCIL_BACK_WRITEMASK -> GL_STENCIL_BACK_WRITEMASK
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_INT -> GL_INT
    int GL_UNSIGNED_INT -> GL_UNSIGNED_INT
    int GL_FLOAT -> GL_FLOAT
    int GL_FIXED -> GL_FIXED
    int GL_DEPTH_COMPONENT -> GL_DEPTH_COMPONENT
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FRAGMENT_SHADER -> GL_FRAGMENT_SHADER
    int GL_VERTEX_SHADER -> GL_VERTEX_SHADER
    int GL_MAX_VERTEX_ATTRIBS -> GL_MAX_VERTEX_ATTRIBS
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> GL_MAX_VERTEX_UNIFORM_VECTORS
    int GL_MAX_VARYING_VECTORS -> GL_MAX_VARYING_VECTORS
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    int GL_MAX_TEXTURE_IMAGE_UNITS -> GL_MAX_TEXTURE_IMAGE_UNITS
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> GL_MAX_FRAGMENT_UNIFORM_VECTORS
    int GL_SHADER_TYPE -> GL_SHADER_TYPE
    int GL_DELETE_STATUS -> GL_DELETE_STATUS
    int GL_LINK_STATUS -> GL_LINK_STATUS
    int GL_VALIDATE_STATUS -> GL_VALIDATE_STATUS
    int GL_ATTACHED_SHADERS -> GL_ATTACHED_SHADERS
    int GL_ACTIVE_UNIFORMS -> GL_ACTIVE_UNIFORMS
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> GL_ACTIVE_UNIFORM_MAX_LENGTH
    int GL_ACTIVE_ATTRIBUTES -> GL_ACTIVE_ATTRIBUTES
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    int GL_SHADING_LANGUAGE_VERSION -> GL_SHADING_LANGUAGE_VERSION
    int GL_CURRENT_PROGRAM -> GL_CURRENT_PROGRAM
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_INVERT -> GL_INVERT
    int GL_INCR_WRAP -> GL_INCR_WRAP
    int GL_DECR_WRAP -> GL_DECR_WRAP
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE -> GL_TEXTURE
    int GL_TEXTURE_CUBE_MAP -> GL_TEXTURE_CUBE_MAP
    int GL_TEXTURE_BINDING_CUBE_MAP -> GL_TEXTURE_BINDING_CUBE_MAP
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> GL_TEXTURE_CUBE_MAP_POSITIVE_X
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> GL_MAX_CUBE_MAP_TEXTURE_SIZE
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_MIRRORED_REPEAT -> GL_MIRRORED_REPEAT
    int GL_FLOAT_VEC2 -> GL_FLOAT_VEC2
    int GL_FLOAT_VEC3 -> GL_FLOAT_VEC3
    int GL_FLOAT_VEC4 -> GL_FLOAT_VEC4
    int GL_INT_VEC2 -> GL_INT_VEC2
    int GL_INT_VEC3 -> GL_INT_VEC3
    int GL_INT_VEC4 -> GL_INT_VEC4
    int GL_BOOL -> GL_BOOL
    int GL_BOOL_VEC2 -> GL_BOOL_VEC2
    int GL_BOOL_VEC3 -> GL_BOOL_VEC3
    int GL_BOOL_VEC4 -> GL_BOOL_VEC4
    int GL_FLOAT_MAT2 -> GL_FLOAT_MAT2
    int GL_FLOAT_MAT3 -> GL_FLOAT_MAT3
    int GL_FLOAT_MAT4 -> GL_FLOAT_MAT4
    int GL_SAMPLER_2D -> GL_SAMPLER_2D
    int GL_SAMPLER_CUBE -> GL_SAMPLER_CUBE
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> GL_VERTEX_ATTRIB_ARRAY_ENABLED
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> GL_VERTEX_ATTRIB_ARRAY_SIZE
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> GL_VERTEX_ATTRIB_ARRAY_STRIDE
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> GL_VERTEX_ATTRIB_ARRAY_TYPE
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> GL_VERTEX_ATTRIB_ARRAY_POINTER
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> GL_IMPLEMENTATION_COLOR_READ_TYPE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> GL_IMPLEMENTATION_COLOR_READ_FORMAT
    int GL_COMPILE_STATUS -> GL_COMPILE_STATUS
    int GL_INFO_LOG_LENGTH -> GL_INFO_LOG_LENGTH
    int GL_SHADER_SOURCE_LENGTH -> GL_SHADER_SOURCE_LENGTH
    int GL_SHADER_COMPILER -> GL_SHADER_COMPILER
    int GL_SHADER_BINARY_FORMATS -> GL_SHADER_BINARY_FORMATS
    int GL_NUM_SHADER_BINARY_FORMATS -> GL_NUM_SHADER_BINARY_FORMATS
    int GL_LOW_FLOAT -> GL_LOW_FLOAT
    int GL_MEDIUM_FLOAT -> GL_MEDIUM_FLOAT
    int GL_HIGH_FLOAT -> GL_HIGH_FLOAT
    int GL_LOW_INT -> GL_LOW_INT
    int GL_MEDIUM_INT -> GL_MEDIUM_INT
    int GL_HIGH_INT -> GL_HIGH_INT
    int GL_FRAMEBUFFER -> GL_FRAMEBUFFER
    int GL_RENDERBUFFER -> GL_RENDERBUFFER
    int GL_RGBA4 -> GL_RGBA4
    int GL_RGB5_A1 -> GL_RGB5_A1
    int GL_RGB565 -> GL_RGB565
    int GL_DEPTH_COMPONENT16 -> GL_DEPTH_COMPONENT16
    int GL_STENCIL_INDEX -> GL_STENCIL_INDEX
    int GL_STENCIL_INDEX8 -> GL_STENCIL_INDEX8
    int GL_RENDERBUFFER_WIDTH -> GL_RENDERBUFFER_WIDTH
    int GL_RENDERBUFFER_HEIGHT -> GL_RENDERBUFFER_HEIGHT
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> GL_RENDERBUFFER_INTERNAL_FORMAT
    int GL_RENDERBUFFER_RED_SIZE -> GL_RENDERBUFFER_RED_SIZE
    int GL_RENDERBUFFER_GREEN_SIZE -> GL_RENDERBUFFER_GREEN_SIZE
    int GL_RENDERBUFFER_BLUE_SIZE -> GL_RENDERBUFFER_BLUE_SIZE
    int GL_RENDERBUFFER_ALPHA_SIZE -> GL_RENDERBUFFER_ALPHA_SIZE
    int GL_RENDERBUFFER_DEPTH_SIZE -> GL_RENDERBUFFER_DEPTH_SIZE
    int GL_RENDERBUFFER_STENCIL_SIZE -> GL_RENDERBUFFER_STENCIL_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    int GL_COLOR_ATTACHMENT0 -> GL_COLOR_ATTACHMENT0
    int GL_DEPTH_ATTACHMENT -> GL_DEPTH_ATTACHMENT
    int GL_STENCIL_ATTACHMENT -> GL_STENCIL_ATTACHMENT
    int GL_NONE -> GL_NONE
    int GL_FRAMEBUFFER_COMPLETE -> GL_FRAMEBUFFER_COMPLETE
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    int GL_FRAMEBUFFER_UNSUPPORTED -> GL_FRAMEBUFFER_UNSUPPORTED
    int GL_FRAMEBUFFER_BINDING -> GL_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_BINDING -> GL_RENDERBUFFER_BINDING
    int GL_MAX_RENDERBUFFER_SIZE -> GL_MAX_RENDERBUFFER_SIZE
    int GL_INVALID_FRAMEBUFFER_OPERATION -> GL_INVALID_FRAMEBUFFER_OPERATION
    int GL_VERTEX_PROGRAM_POINT_SIZE -> GL_VERTEX_PROGRAM_POINT_SIZE
    int GL_COVERAGE_BUFFER_BIT_NV -> GL_COVERAGE_BUFFER_BIT_NV
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.GLCommon:
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> GL_TEXTURE_MAX_ANISOTROPY_EXT
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.GLU -> com.badlogic.gdx.graphics.GLU:
    void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float) -> gluLookAt
    void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluOrtho2D
    void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluPerspective
    boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluProject
    boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluUnProject
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.Mesh:
    java.util.Map meshes -> meshes
    boolean forceVBO -> forceVBO
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> vertices
    com.badlogic.gdx.graphics.glutils.IndexData indices -> indices
    boolean autoBind -> autoBind
    boolean isVertexArray -> isVertexArray
    int refCount -> refCount
    void setVertices(float[]) -> setVertices
    void setVertices(float[],int,int) -> setVertices
    void getVertices(float[]) -> getVertices
    void setIndices(short[]) -> setIndices
    void setIndices(short[],int,int) -> setIndices
    void getIndices(short[]) -> getIndices
    int getNumIndices() -> getNumIndices
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    int getMaxIndices() -> getMaxIndices
    int getVertexSize() -> getVertexSize
    void setAutoBind(boolean) -> setAutoBind
    void bind() -> bind
    void unbind() -> unbind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void render(int) -> render
    void render(int,int,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> render
    void dispose() -> dispose
    com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> getVertexAttribute
    com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> getVertexAttributes
    java.nio.FloatBuffer getVerticesBuffer() -> getVerticesBuffer
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> calculateBoundingBox
    void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    java.nio.ShortBuffer getIndicesBuffer() -> getIndicesBuffer
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> addManagedMesh
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> invalidateAllMeshes
    void clearAllMeshes(com.badlogic.gdx.Application) -> clearAllMeshes
    java.lang.String getManagedStatus() -> getManagedStatus
    void scale(float,float,float) -> scale
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.Mesh$VertexDataType:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> VertexArray
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> VertexBufferObject
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> VertexBufferObjectSubData
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.OrthographicCamera:
    float zoom -> zoom
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void findDirectionForIsoView(float,float,int) -> findDirectionForIsoView
    float calculateAngle(float) -> calculateAngle
    com.badlogic.gdx.math.Vector3 calculateDirection(float) -> calculateDirection
    void update() -> update
    void update(boolean) -> update
    void setToOrtho(boolean) -> setToOrtho
    void setToOrtho(boolean,float,float) -> setToOrtho
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.PerspectiveCamera:
    float fieldOfView -> fieldOfView
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.Pixmap:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> blending
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> pixmap
    int color -> color
    boolean disposed -> disposed
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> setBlending
    void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> setFilter
    void setColor(int) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void fill() -> fill
    void drawLine(int,int,int,int) -> drawLine
    void drawRectangle(int,int,int,int) -> drawRectangle
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    void fillRectangle(int,int,int,int) -> fillRectangle
    void drawCircle(int,int,int) -> drawCircle
    void fillCircle(int,int,int) -> fillCircle
    int getPixel(int,int) -> getPixel
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void dispose() -> dispose
    void drawPixel(int,int) -> drawPixel
    void drawPixel(int,int,int) -> drawPixel
    int getGLFormat() -> getGLFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLType() -> getGLType
    java.nio.ByteBuffer getPixels() -> getPixels
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> getBlending
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.Pixmap$Blending:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> None
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> SourceOver
    com.badlogic.gdx.graphics.Pixmap$Blending[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.Pixmap$Filter:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> NearestNeighbour
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> BiLinear
    com.badlogic.gdx.graphics.Pixmap$Filter[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.Pixmap$Format:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> Alpha
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> Intensity
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> LuminanceAlpha
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> RGB565
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> RGBA4444
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> RGB888
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> RGBA8888
    com.badlogic.gdx.graphics.Pixmap$Format[] ENUM$VALUES -> ENUM$VALUES
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> toGdx2DPixmapFormat
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> fromGdx2DPixmapFormat
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.PixmapIO:
    void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writeCIM
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> readCIM
    void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writePNG
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.PixmapIO$CIM:
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] writeBuffer -> writeBuffer
    byte[] readBuffer -> readBuffer
    void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> write
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> read
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.PixmapIO$PNG:
    int[] crcTable -> crcTable
    int ZLIB_BLOCK_SIZE -> ZLIB_BLOCK_SIZE
    byte[] write(com.badlogic.gdx.graphics.Pixmap) -> write
    byte[] createHeaderChunk(int,int) -> createHeaderChunk
    byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap) -> createDataChunk
    byte[] createTrailerChunk() -> createTrailerChunk
    byte[] toChunk(java.lang.String,byte[]) -> toChunk
    void createCRCTable() -> createCRCTable
    int updateCRC(int,byte[]) -> updateCRC
    byte[] toZLIB(byte[]) -> toZLIB
    void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char) -> writeUncompressedDeflateBlock
    int calcADLER32(byte[]) -> calcADLER32
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.Texture:
    boolean enforcePotImages -> enforcePotImages
    boolean useHWMipMap -> useHWMipMap
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    java.util.Map managedTextures -> managedTextures
    java.nio.IntBuffer buffer -> buffer
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    int glHandle -> glHandle
    com.badlogic.gdx.graphics.TextureData data -> data
    void create(com.badlogic.gdx.graphics.TextureData) -> create
    int createGLHandle() -> createGLHandle
    void load(com.badlogic.gdx.graphics.TextureData) -> load
    void uploadImageData(com.badlogic.gdx.graphics.Pixmap) -> uploadImageData
    void reload() -> reload
    void bind() -> bind
    void bind(int) -> bind
    void draw(com.badlogic.gdx.graphics.Pixmap,int,int) -> draw
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> getMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> getMagFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> getUWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> getVWrap
    com.badlogic.gdx.graphics.TextureData getTextureData() -> getTextureData
    boolean isManaged() -> isManaged
    int getTextureObjectHandle() -> getTextureObjectHandle
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> setWrap
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setFilter
    void dispose() -> dispose
    void setEnforcePotImages(boolean) -> setEnforcePotImages
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> addManagedTexture
    void clearAllTextures(com.badlogic.gdx.Application) -> clearAllTextures
    void invalidateAllTextures(com.badlogic.gdx.Application) -> invalidateAllTextures
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    java.lang.String getManagedStatus() -> getManagedStatus
    int getNumManagedTextures() -> getNumManagedTextures
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.Texture$1:
    int val$refCount -> val$refCount
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.Texture$TextureFilter:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> Nearest
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> Linear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> MipMap
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> MipMapNearestNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> MipMapLinearNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> MipMapNearestLinear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> MipMapLinearLinear
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] ENUM$VALUES -> ENUM$VALUES
    boolean isMipMap() -> isMipMap
    int getGLEnum() -> getGLEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.Texture$TextureWrap:
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> ClampToEdge
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> Repeat
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] ENUM$VALUES -> ENUM$VALUES
    int getGLEnum() -> getGLEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.TextureData:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCompressedData() -> consumeCompressedData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.TextureData$TextureDataType:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> Pixmap
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> Compressed
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.TextureDict -> com.badlogic.gdx.graphics.TextureDict:
    com.badlogic.gdx.utils.ObjectMap sDictionary -> sDictionary
    com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String) -> loadTexture
    com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> loadTexture
    void removeTexture(java.lang.String) -> removeTexture
    void unloadAll() -> unloadAll
com.badlogic.gdx.graphics.TextureRef -> com.badlogic.gdx.graphics.TextureRef:
    java.lang.String Name -> Name
    int mRefCount -> mRefCount
    com.badlogic.gdx.graphics.Texture mTexture -> mTexture
    void addRef() -> addRef
    int unload() -> unload
    void dispose() -> dispose
    void bind() -> bind
    com.badlogic.gdx.graphics.Texture get() -> get
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.VertexAttribute:
    int usage -> usage
    int numComponents -> numComponents
    int offset -> offset
    java.lang.String alias -> alias
    com.badlogic.gdx.graphics.VertexAttribute Position() -> Position
    com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> TexCoords
    com.badlogic.gdx.graphics.VertexAttribute Normal() -> Normal
    com.badlogic.gdx.graphics.VertexAttribute Color() -> Color
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.VertexAttributes:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    int vertexSize -> vertexSize
    int calculateOffsets() -> calculateOffsets
    void checkValidity() -> checkValidity
    int size() -> size
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> get
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.VertexAttributes$Usage:
    int Position -> Position
    int Color -> Color
    int ColorPacked -> ColorPacked
    int Normal -> Normal
    int TextureCoordinates -> TextureCoordinates
    int Generic -> Generic
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.Animation:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> keyFrames
    float frameDuration -> frameDuration
    float animationDuration -> animationDuration
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> getKeyFrame
    boolean isAnimationFinished(float) -> isAnimationFinished
com.badlogic.gdx.graphics.g2d.BitmapFileTextureData -> com.badlogic.gdx.graphics.g2d.BitmapFileTextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    int width -> width
    int height -> height
    android.graphics.Bitmap bmp -> bmp
    boolean isPrepared -> isPrepared
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCompressedData() -> consumeCompressedData
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.BitmapFont:
    int LOG2_PAGE_SIZE -> LOG2_PAGE_SIZE
    int PAGE_SIZE -> PAGE_SIZE
    int PAGES -> PAGES
    char[] xChars -> xChars
    char[] capChars -> capChars
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    boolean flipped -> flipped
    boolean integer -> integer
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    boolean ownsTexture -> ownsTexture
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> load
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> getWrappedBounds
    void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> computeGlyphAdvancesAndPositions
    int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> computeVisibleGlyphs
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void scale(float) -> scale
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    float getLineHeight() -> getLineHeight
    float getSpaceWidth() -> getSpaceWidth
    float getXHeight() -> getXHeight
    float getCapHeight() -> getCapHeight
    float getAscent() -> getAscent
    float getDescent() -> getDescent
    boolean isFlipped() -> isFlipped
    void dispose() -> dispose
    void setFixedWidthGlyphs(java.lang.CharSequence) -> setFixedWidthGlyphs
    boolean containsCharacter(char) -> containsCharacter
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> getData
    int indexOf(java.lang.CharSequence,char,int) -> indexOf
    boolean isWhitespace(char) -> isWhitespace
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    java.lang.String imagePath -> imagePath
    com.badlogic.gdx.files.FileHandle fontFile -> fontFile
    boolean flipped -> flipped
    float lineHeight -> lineHeight
    float capHeight -> capHeight
    float ascent -> ascent
    float descent -> descent
    float down -> down
    float scaleX -> scaleX
    float scaleY -> scaleY
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> glyphs
    float spaceWidth -> spaceWidth
    float xHeight -> xHeight
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> setGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> getFirstGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> getGlyph
    java.lang.String getImagePath() -> getImagePath
    com.badlogic.gdx.files.FileHandle getFontFile() -> getFontFile
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph:
    int srcX -> srcX
    int srcY -> srcY
    int width -> width
    int height -> height
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int xoffset -> xoffset
    int yoffset -> yoffset
    int xadvance -> xadvance
    byte[][] kerning -> kerning
    int getKerning(char) -> getKerning
    void setKerning(int,int) -> setKerning
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> LEFT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> CENTER
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> RIGHT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    float width -> width
    float height -> height
    void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> set
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    float[] vertices -> vertices
    int idx -> idx
    float x -> x
    float y -> y
    float color -> color
    com.badlogic.gdx.graphics.Color tmpColor -> tmpColor
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    boolean integer -> integer
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void reset(int) -> reset
    float addToCache(java.lang.CharSequence,float,float,int,int) -> addToCache
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> addGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> getBounds
    float getX() -> getX
    float getY() -> getY
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> getFont
    void dispose() -> dispose
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
com.badlogic.gdx.graphics.g2d.BitmapTexture -> com.badlogic.gdx.graphics.g2d.BitmapTexture:
    com.badlogic.gdx.graphics.g2d.BitmapTextureData data -> data
    java.nio.ByteBuffer loadTextureByteBuffer(com.badlogic.gdx.files.FileHandle) -> loadTextureByteBuffer
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    boolean isDisposed() -> isDisposed
com.badlogic.gdx.graphics.g2d.BitmapTextureData -> com.badlogic.gdx.graphics.g2d.BitmapTextureData:
    android.graphics.Bitmap bmp -> bmp
    boolean disposed -> disposed
    int width -> width
    int height -> height
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCompressedData() -> consumeCompressedData
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.g2d.CompressedTextureLoader -> com.badlogic.gdx.graphics.g2d.CompressedTextureLoader:
    java.lang.String TAG -> TAG
    java.lang.String TEXTURE_UNCOMPRESSED -> TEXTURE_UNCOMPRESSED
    java.lang.String TEXTURE_ETC1 -> TEXTURE_ETC1
    java.lang.String TEXTURE_S3TC -> TEXTURE_S3TC
    java.lang.String TEXTURE_ATC -> TEXTURE_ATC
    java.lang.String TEXTURE_PVRTC -> TEXTURE_PVRTC
    int PVR_HEADER_SIZE -> PVR_HEADER_SIZE
    int PVR_2BPP -> PVR_2BPP
    int PVR_4BPP -> PVR_4BPP
    int PVR_MAGIC_NUMBER -> PVR_MAGIC_NUMBER
    int PVR_HEADERV2_ENDIANESS -> PVR_HEADERV2_ENDIANESS
    int PVR_HEADERV2_NOENDIANESS -> PVR_HEADERV2_NOENDIANESS
    int GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG -> GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
    int GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG -> GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
    int GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG -> GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
    int GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG -> GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
    int GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG -> GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG
    byte[] ioBuffer -> ioBuffer
    int DDS_HEADER_STRUCT_SIZE -> DDS_HEADER_STRUCT_SIZE
    int DDS_PIXELFORMAT_STRUCT_SIZE -> DDS_PIXELFORMAT_STRUCT_SIZE
    int DDS_HEADER_SIZE -> DDS_HEADER_SIZE
    int DDS_MAGIC_NUMBER -> DDS_MAGIC_NUMBER
    int DDS_DDPF_FOURCC -> DDS_DDPF_FOURCC
    int DDS_DXT1 -> DDS_DXT1
    int DDS_DXT5 -> DDS_DXT5
    int COMPRESSED_RGB_S3TC_DXT1_EXT -> COMPRESSED_RGB_S3TC_DXT1_EXT
    int COMPRESSED_RGBA_S3TC_DXT1_EXT -> COMPRESSED_RGBA_S3TC_DXT1_EXT
    int COMPRESSED_RGBA_S3TC_DXT5_EXT -> COMPRESSED_RGBA_S3TC_DXT5_EXT
    java.util.HashMap sExtensionMap -> sExtensionMap
    java.util.HashMap sFormatMap -> sFormatMap
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$PVRHeader readPVRHeader(java.io.InputStream) -> readPVRHeader
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$PVRHeaderV2 readPVRHeaderV2(java.io.InputStream) -> readPVRHeaderV2
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture loadTextureATC(android.content.res.Resources,int) -> loadTextureATC
    android.opengl.ETC1Util$ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int) -> compressTexture
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture createFromUncompressedETC1(android.graphics.Bitmap) -> createFromUncompressedETC1
    java.nio.ByteBuffer read(java.io.InputStream,int) -> read
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture loadTexturePVRTC(java.io.InputStream) -> loadTexturePVRTC
    java.nio.ByteBuffer loadTextureByteBuffer(java.io.InputStream) -> loadTextureByteBuffer
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture loadTexturePVRTC(java.io.InputStream,java.nio.ByteBuffer) -> loadTexturePVRTC
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$DDSHeader readDDSHeader(java.io.InputStream) -> readDDSHeader
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture loadTextureDXT(android.content.res.Resources,int) -> loadTextureDXT
    void updateSupportedFormats() -> updateSupportedFormats
    boolean isFormatSupported(java.lang.String) -> isFormatSupported
    boolean access$0(java.lang.String) -> access$0
com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture -> com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture:
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mInternalFormat -> mInternalFormat
    java.nio.ByteBuffer mData -> mData
    java.lang.String mFormatName -> mFormatName
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.nio.ByteBuffer getData() -> getData
    int getFormat() -> getFormat
    boolean isSupported() -> isSupported
com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$DDSHeader -> com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$DDSHeader:
    int mMagic -> mMagic
    int mSize -> mSize
    int mFlags -> mFlags
    int mHeight -> mHeight
    int mWidth -> mWidth
    int mPitchOrLinearSize -> mPitchOrLinearSize
    int mDepth -> mDepth
    int mMipMapCount -> mMipMapCount
    int[] mReserved1 -> mReserved1
    int mPixelFormatSize -> mPixelFormatSize
    int mPixelFormatFlags -> mPixelFormatFlags
    int mPixelFormatFourCC -> mPixelFormatFourCC
    int mPixelFormatRGBBitCount -> mPixelFormatRGBBitCount
    int mPixelFormatRBitMask -> mPixelFormatRBitMask
    int mPixelFormatGBitMask -> mPixelFormatGBitMask
    int mPixelFormatBBitMask -> mPixelFormatBBitMask
    int mPixelFormatABitMask -> mPixelFormatABitMask
    int mCaps -> mCaps
    int mCaps2 -> mCaps2
    int mCaps3 -> mCaps3
    int mCaps4 -> mCaps4
    int mReserved2 -> mReserved2
com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$PVRHeader -> com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$PVRHeader:
    int mHeaderSize -> mHeaderSize
    int mHeight -> mHeight
    int mWidth -> mWidth
    int mMipMapCount -> mMipMapCount
    int mpfFlags -> mpfFlags
    int mDataSize -> mDataSize
    int mBitCount -> mBitCount
    int mRBitMask -> mRBitMask
    int mGBitMask -> mGBitMask
    int mBBitMask -> mBBitMask
    int mAlphaBitMask -> mAlphaBitMask
    int mPVR -> mPVR
    int mNumSurfs -> mNumSurfs
com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$PVRHeaderV2 -> com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$PVRHeaderV2:
    int mVersion -> mVersion
    int mFlags -> mFlags
    long mPixelFormat -> mPixelFormat
    int mColorSpace -> mColorSpace
    int mChannelType -> mChannelType
    int mHeight -> mHeight
    int mWidth -> mWidth
    int mDepth -> mDepth
    int mNumSurfs -> mNumSurfs
    int mNumFaces -> mNumFaces
    int mMipmapCount -> mMipmapCount
    int mMetaSize -> mMetaSize
com.badlogic.gdx.graphics.g2d.EmptyNinePatch -> com.badlogic.gdx.graphics.g2d.EmptyNinePatch:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] emptyPatches -> emptyPatches
    com.badlogic.gdx.graphics.g2d.EmptyNinePatch instance -> instance
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    com.badlogic.gdx.graphics.g2d.EmptyNinePatch getInstance() -> getInstance
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
com.badlogic.gdx.graphics.g2d.EmptyNinePatch$1 -> com.badlogic.gdx.graphics.g2d.EmptyNinePatch$1:
    int getRegionWidth() -> getRegionWidth
    int getRegionHeight() -> getRegionHeight
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> GDX2D_FORMAT_ALPHA
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> GDX2D_FORMAT_LUMINANCE_ALPHA
    int GDX2D_FORMAT_RGB888 -> GDX2D_FORMAT_RGB888
    int GDX2D_FORMAT_RGBA8888 -> GDX2D_FORMAT_RGBA8888
    int GDX2D_FORMAT_RGB565 -> GDX2D_FORMAT_RGB565
    int GDX2D_FORMAT_RGBA4444 -> GDX2D_FORMAT_RGBA4444
    int GDX2D_SCALE_NEAREST -> GDX2D_SCALE_NEAREST
    int GDX2D_SCALE_LINEAR -> GDX2D_SCALE_LINEAR
    int GDX2D_BLEND_NONE -> GDX2D_BLEND_NONE
    int GDX2D_BLEND_SRC_OVER -> GDX2D_BLEND_SRC_OVER
    long basePtr -> basePtr
    int width -> width
    int height -> height
    int format -> format
    java.nio.ByteBuffer pixelPtr -> pixelPtr
    long[] nativeData -> nativeData
    void dispose() -> dispose
    void clear(int) -> clear
    void setPixel(int,int,int) -> setPixel
    int getPixel(int,int) -> getPixel
    void drawLine(int,int,int,int,int) -> drawLine
    void drawRect(int,int,int,int,int) -> drawRect
    void drawCircle(int,int,int,int) -> drawCircle
    void fillRect(int,int,int,int,int) -> fillRect
    void fillCircle(int,int,int,int) -> fillCircle
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> newPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> newPixmap
    java.nio.ByteBuffer getPixels() -> getPixels
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getFormat() -> getFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLFormat() -> getGLFormat
    int getGLType() -> getGLType
    java.lang.String getFormatString() -> getFormatString
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.NinePatch:
    int TOP_LEFT -> TOP_LEFT
    int TOP_CENTER -> TOP_CENTER
    int TOP_RIGHT -> TOP_RIGHT
    int MIDDLE_LEFT -> MIDDLE_LEFT
    int MIDDLE_CENTER -> MIDDLE_CENTER
    int MIDDLE_RIGHT -> MIDDLE_RIGHT
    int BOTTOM_LEFT -> BOTTOM_LEFT
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int BOTTOM_RIGHT -> BOTTOM_RIGHT
    com.badlogic.gdx.graphics.g2d.TextureRegion[] patches -> patches
    com.badlogic.gdx.graphics.Color color -> color
    boolean blending -> blending
    void checkValidity() -> checkValidity
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    float getRightWidth() -> getRightWidth
    float getTopHeight() -> getTopHeight
    float getBottomHeight() -> getBottomHeight
    float getTotalHeight() -> getTotalHeight
    float getTotalWidth() -> getTotalWidth
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getPatches() -> getPatches
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setBlending(boolean) -> setBlending
com.badlogic.gdx.graphics.g2d.PVRTCTextureData -> com.badlogic.gdx.graphics.g2d.PVRTCTextureData:
    com.badlogic.gdx.graphics.g2d.CompressedTextureLoader$CompressedTexture PVRTCdata -> PVRTCdata
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCompressedData() -> consumeCompressedData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffect:
    com.badlogic.gdx.utils.Array emitters -> emitters
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    void start() -> start
    void reset() -> reset
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void allowCompletion() -> allowCompletion
    boolean isComplete() -> isComplete
    void setDuration(int) -> setDuration
    void setPosition(float,float) -> setPosition
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.utils.Array getEmitters() -> getEmitters
    com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> findEmitter
    void save(java.io.File) -> save
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas) -> load
    void loadEmitters(com.badlogic.gdx.files.FileHandle) -> loadEmitters
    void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> loadEmitterImages
    void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> loadEmitterImages
    com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> loadTexture
    void dispose() -> dispose
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> effect
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> newObject
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> obtain
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> this$0
    void free() -> free
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    int UPDATE_SCALE -> UPDATE_SCALE
    int UPDATE_ANGLE -> UPDATE_ANGLE
    int UPDATE_ROTATION -> UPDATE_ROTATION
    int UPDATE_VELOCITY -> UPDATE_VELOCITY
    int UPDATE_WIND -> UPDATE_WIND
    int UPDATE_GRAVITY -> UPDATE_GRAVITY
    int UPDATE_TINT -> UPDATE_TINT
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> delayValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> lifeOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> durationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> lifeValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> emissionValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> scaleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> rotationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> velocityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> angleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> windValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> gravityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> transparencyValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> tintValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> xOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> yOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> spawnWidthValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> spawnHeightValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> spawnShapeValue
    float accumulator -> accumulator
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> particles
    int minParticleCount -> minParticleCount
    int maxParticleCount -> maxParticleCount
    float x -> x
    float y -> y
    java.lang.String name -> name
    java.lang.String imagePath -> imagePath
    int activeCount -> activeCount
    boolean[] active -> active
    boolean firstUpdate -> firstUpdate
    boolean flipX -> flipX
    boolean flipY -> flipY
    int updateFlags -> updateFlags
    boolean allowCompletion -> allowCompletion
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    int emission -> emission
    int emissionDiff -> emissionDiff
    int emissionDelta -> emissionDelta
    int lifeOffset -> lifeOffset
    int lifeOffsetDiff -> lifeOffsetDiff
    int life -> life
    int lifeDiff -> lifeDiff
    float spawnWidth -> spawnWidth
    float spawnWidthDiff -> spawnWidthDiff
    float spawnHeight -> spawnHeight
    float spawnHeightDiff -> spawnHeightDiff
    float duration -> duration
    float durationTimer -> durationTimer
    float delay -> delay
    float delayTimer -> delayTimer
    boolean attached -> attached
    boolean continuous -> continuous
    boolean aligned -> aligned
    boolean behind -> behind
    boolean additive -> additive
    int[] $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
    int[] $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
    void initialize() -> initialize
    void setMaxParticleCount(int) -> setMaxParticleCount
    void addParticle() -> addParticle
    void addParticles(int) -> addParticles
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void start() -> start
    void reset() -> reset
    void restart() -> restart
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
    void activateParticle(int) -> activateParticle
    boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> updateParticle
    void setPosition(float,float) -> setPosition
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    void allowCompletion() -> allowCompletion
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> getLife
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> getScale
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> getRotation
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> getTint
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> getVelocity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> getWind
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> getGravity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> getAngle
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> getEmission
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> getTransparency
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> getDuration
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> getDelay
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> getLifeOffset
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> getXOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> getYOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> getSpawnWidth
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> getSpawnHeight
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> getSpawnShape
    boolean isAttached() -> isAttached
    void setAttached(boolean) -> setAttached
    boolean isContinuous() -> isContinuous
    void setContinuous(boolean) -> setContinuous
    boolean isAligned() -> isAligned
    void setAligned(boolean) -> setAligned
    boolean isAdditive() -> isAdditive
    void setAdditive(boolean) -> setAdditive
    boolean isBehind() -> isBehind
    void setBehind(boolean) -> setBehind
    int getMinParticleCount() -> getMinParticleCount
    void setMinParticleCount(int) -> setMinParticleCount
    int getMaxParticleCount() -> getMaxParticleCount
    boolean isComplete() -> isComplete
    float getPercentComplete() -> getPercentComplete
    float getX() -> getX
    float getY() -> getY
    int getActiveCount() -> getActiveCount
    java.lang.String getImagePath() -> getImagePath
    void setImagePath(java.lang.String) -> setImagePath
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    java.lang.String readString(java.io.BufferedReader,java.lang.String) -> readString
    boolean readBoolean(java.io.BufferedReader,java.lang.String) -> readBoolean
    int readInt(java.io.BufferedReader,java.lang.String) -> readInt
    float readFloat(java.io.BufferedReader,java.lang.String) -> readFloat
    float getScaleFactor() -> getScaleFactor
    int[] $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide() -> $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
    int[] $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape() -> $SWITCH_TABLE$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    float[] temp -> temp
    float[] colors -> colors
    float[] timeline -> timeline
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    float[] getColors() -> getColors
    void setColors(float[]) -> setColors
    float[] getColor(float) -> getColor
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    float value -> value
    float getValue() -> getValue
    void setValue(float) -> setValue
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life -> life
    int currentLife -> currentLife
    float scale -> scale
    float scaleDiff -> scaleDiff
    float rotation -> rotation
    float rotationDiff -> rotationDiff
    float velocity -> velocity
    float velocityDiff -> velocityDiff
    float angle -> angle
    float angleDiff -> angleDiff
    float angleCos -> angleCos
    float angleSin -> angleSin
    float transparency -> transparency
    float transparencyDiff -> transparencyDiff
    float wind -> wind
    float windDiff -> windDiff
    float gravity -> gravity
    float gravityDiff -> gravityDiff
    float[] tint -> tint
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    boolean active -> active
    boolean alwaysActive -> alwaysActive
    void setAlwaysActive(boolean) -> setAlwaysActive
    boolean isAlwaysActive() -> isAlwaysActive
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    float lowMin -> lowMin
    float lowMax -> lowMax
    float newLowValue() -> newLowValue
    void setLow(float) -> setLow
    void setLow(float,float) -> setLow
    float getLowMin() -> getLowMin
    void setLowMin(float) -> setLowMin
    float getLowMax() -> getLowMax
    void setLowMax(float) -> setLowMax
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    float[] scaling -> scaling
    float[] timeline -> timeline
    float highMin -> highMin
    float highMax -> highMax
    boolean relative -> relative
    float newHighValue() -> newHighValue
    void setHigh(float) -> setHigh
    void setHigh(float,float) -> setHigh
    float getHighMin() -> getHighMin
    void setHighMin(float) -> setHighMin
    float getHighMax() -> getHighMax
    void setHighMax(float) -> setHighMax
    float[] getScaling() -> getScaling
    void setScaling(float[]) -> setScaling
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    boolean isRelative() -> isRelative
    void setRelative(boolean) -> setRelative
    float getScale(float) -> getScale
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> both
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> top
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> bottom
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> point
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> line
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> square
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> ellipse
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> shape
    boolean edges -> edges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> side
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> getShape
    void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> setShape
    boolean isEdges() -> isEdges
    void setEdges(boolean) -> setEdges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> getSide
    void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> setSide
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D:
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.math.Vector2 startPoint -> startPoint
    com.badlogic.gdx.math.Vector2 endPoint -> endPoint
    boolean particleCollided -> particleCollided
    float normalAngle -> normalAngle
    float EPSILON -> EPSILON
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCallBack -> rayCallBack
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> this$0
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> this$0
    void translate(float,float) -> translate
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.PixmapPacker:
    int pageWidth -> pageWidth
    int pageHeight -> pageHeight
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> pageFormat
    int padding -> padding
    boolean duplicateBorder -> duplicateBorder
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> currPage
    boolean disposed -> disposed
    com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> pack
    void newPage() -> newPage
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> insert
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> getRect
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> getPage
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> generateTextureAtlas
    void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> updateTextureAtlas
    int getPageWidth() -> getPageWidth
    int getPageHeight() -> getPageHeight
    int getPadding() -> getPadding
    boolean duplicateBoarder() -> duplicateBoarder
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData -> com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> leftChild
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> rightChild
    com.badlogic.gdx.math.Rectangle rect -> rect
    java.lang.String leaveName -> leaveName
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> root
    com.badlogic.gdx.utils.OrderedMap rects -> rects
    com.badlogic.gdx.graphics.Pixmap image -> image
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.utils.Array addedRects -> addedRects
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    com.badlogic.gdx.graphics.Pixmap getPixmap() -> getPixmap
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.Sprite:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SPRITE_SIZE -> SPRITE_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Color color -> color
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    void set(com.badlogic.gdx.graphics.g2d.Sprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void rotate90(boolean) -> rotate90
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(float,float,float,float) -> setRegion
    void setU(float) -> setU
    void setV(float) -> setV
    void setU2(float) -> setU2
    void setV2(float) -> setV2
    void flip(boolean,boolean) -> flip
    void scroll(float,float) -> scroll
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.SpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.Mesh[] buffers -> buffers
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    int idx -> idx
    int currBufferIdx -> currBufferIdx
    float[] vertices -> vertices
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean drawing -> drawing
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxSpritesInBatch -> maxSpritesInBatch
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    int X1 -> X1
    int Y1 -> Y1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void renderMesh() -> renderMesh
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.SpriteCache:
    float[] tempVertices -> tempVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    java.util.ArrayList caches -> caches
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> currentCache
    java.util.ArrayList textures -> textures
    java.util.ArrayList counts -> counts
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void beginCache() -> beginCache
    void beginCache(int) -> beginCache
    int endCache() -> endCache
    void clear() -> clear
    void add(com.badlogic.gdx.graphics.Texture,float[],int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.Sprite) -> add
    void begin() -> begin
    void end() -> end
    void draw(int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    int id -> id
    int offset -> offset
    int maxCount -> maxCount
    int textureCount -> textureCount
    com.badlogic.gdx.graphics.Texture[] textures -> textures
    int[] counts -> counts
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.TextureAtlas:
    java.lang.String[] tuple -> tuple
    java.util.HashSet textures -> textures
    java.util.ArrayList regions -> regions
    java.nio.ByteBuffer ByteBufferTextureAtlas -> ByteBufferTextureAtlas
    java.util.Comparator indexComparator -> indexComparator
    void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> load
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> addRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> addRegion
    java.util.List getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> findRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> findRegion
    java.util.List findRegions(java.lang.String) -> findRegions
    java.util.List createSprites() -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> createSprite
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> createSprite
    java.util.List createSprites(java.lang.String) -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> newSprite
    java.util.Set getTextures() -> getTextures
    void dispose() -> dispose
    java.lang.String readValue(java.io.BufferedReader) -> readValue
    void readTuple(java.io.BufferedReader) -> readTuple
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.TextureAtlas$1:
    int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int packedWidth -> packedWidth
    int packedHeight -> packedHeight
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    void flip(boolean,boolean) -> flip
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> region
    float originalOffsetX -> originalOffsetX
    float originalOffsetY -> originalOffsetY
    void setPosition(float,float) -> setPosition
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setOrigin(float,float) -> setOrigin
    void flip(boolean,boolean) -> flip
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> getAtlasRegion
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.utils.Array regions -> regions
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page:
    com.badlogic.gdx.files.FileHandle textureFile -> textureFile
    com.badlogic.gdx.graphics.Texture texture -> texture
    boolean useMipMaps -> useMipMaps
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> page
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int left -> left
    int top -> top
    int width -> width
    int height -> height
    boolean flip -> flip
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.TextureRegion:
    com.badlogic.gdx.graphics.Texture texture -> texture
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    void setRegion(com.badlogic.gdx.graphics.Texture) -> setRegion
    void setRegion(int,int,int,int) -> setRegion
    void setRegion(float,float,float,float) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> setRegion
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    float getU() -> getU
    void setU(float) -> setU
    float getV() -> getV
    void setV(float) -> setV
    float getU2() -> getU2
    void setU2(float) -> setU2
    float getV2() -> getV2
    void setV2(float) -> setV2
    int getRegionX() -> getRegionX
    void setRegionX(int) -> setRegionX
    int getRegionY() -> getRegionY
    void setRegionY(int) -> setRegionY
    int getRegionWidth() -> getRegionWidth
    void setRegionWidth(int) -> setRegionWidth
    int getRegionHeight() -> getRegionHeight
    void setRegionHeight(int) -> setRegionHeight
    void flip(boolean,boolean) -> flip
    void scroll(float,float) -> scroll
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> split
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> split
com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas -> com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas:
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int,int,int,int,int) -> split
com.badlogic.gdx.graphics.g2d.tiled.TileAtlas -> com.badlogic.gdx.graphics.g2d.tiled.TileAtlas:
    com.badlogic.gdx.utils.IntMap regionsMap -> regionsMap
    java.util.HashSet textures -> textures
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int) -> getRegion
    void dispose() -> dispose
    java.lang.String removeExtension(java.lang.String) -> removeExtension
    java.lang.String removePath(java.lang.String) -> removePath
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    void flipRegions(boolean,boolean) -> flipRegions
com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer -> com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer:
    com.badlogic.gdx.graphics.g2d.SpriteCache cache -> cache
    int[][][] normalCacheId -> normalCacheId
    int[][][] blendedCacheId -> blendedCacheId
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas atlas -> atlas
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap map -> map
    int mapHeightUnits -> mapHeightUnits
    int mapWidthUnits -> mapWidthUnits
    int tileWidth -> tileWidth
    int tileHeight -> tileHeight
    float unitsPerTileX -> unitsPerTileX
    float unitsPerTileY -> unitsPerTileY
    int tilesPerBlockX -> tilesPerBlockX
    int tilesPerBlockY -> tilesPerBlockY
    float unitsPerBlockX -> unitsPerBlockX
    float unitsPerBlockY -> unitsPerBlockY
    int[] allLayers -> allLayers
    boolean isSimpleTileAtlas -> isSimpleTileAtlas
    com.badlogic.gdx.utils.IntArray blendedTiles -> blendedTiles
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    float overdrawX -> overdrawX
    float overdrawY -> overdrawY
    int initialRow -> initialRow
    int initialCol -> initialCol
    int currentRow -> currentRow
    int currentCol -> currentCol
    int lastRow -> lastRow
    int lastCol -> lastCol
    int currentLayer -> currentLayer
    void init(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> init
    int addBlock(int[][],int,int,boolean) -> addBlock
    void render() -> render
    void render(float,float,float,float) -> render
    void render(com.badlogic.gdx.graphics.OrthographicCamera) -> render
    void render(com.badlogic.gdx.graphics.OrthographicCamera,int[]) -> render
    void render(float,float,float,float,int[]) -> render
    int getLayerWidthInBlocks(int,int) -> getLayerWidthInBlocks
    int getLayerHeightInBlocks(int) -> getLayerHeightInBlocks
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    int getRow(int) -> getRow
    int getCol(int) -> getCol
    int getInitialRow() -> getInitialRow
    int getInitialCol() -> getInitialCol
    int getLastRow() -> getLastRow
    int getLastCol() -> getLastCol
    float getUnitsPerTileX() -> getUnitsPerTileX
    float getUnitsPerTileY() -> getUnitsPerTileY
    int getMapHeightUnits() -> getMapHeightUnits
    int getMapWidthUnits() -> getMapWidthUnits
    int parseIntWithDefault(java.lang.String,int) -> parseIntWithDefault
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap getMap() -> getMap
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas getAtlas() -> getAtlas
    com.badlogic.gdx.utils.IntArray createFromCSV(java.lang.String) -> createFromCSV
com.badlogic.gdx.graphics.g2d.tiled.TileSet -> com.badlogic.gdx.graphics.g2d.tiled.TileSet:
    int firstgid -> firstgid
    int tileWidth -> tileWidth
    int tileHeight -> tileHeight
    int margin -> margin
    int spacing -> spacing
    java.lang.String imageName -> imageName
    java.lang.String name -> name
com.badlogic.gdx.graphics.g2d.tiled.TiledLayer -> com.badlogic.gdx.graphics.g2d.tiled.TiledLayer:
    java.lang.String name -> name
    java.util.HashMap properties -> properties
    int[][] tiles -> tiles
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader:
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(java.lang.String) -> createMap
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(com.badlogic.gdx.files.FileHandle) -> createMap
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(com.badlogic.gdx.files.FileHandle,java.lang.String) -> createMap
    int unsignedByteToInt(byte) -> unsignedByteToInt
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1:
    java.util.Stack currBranch -> currBranch
    boolean awaitingData -> awaitingData
    com.badlogic.gdx.graphics.g2d.tiled.TiledLayer currLayer -> currLayer
    int currLayerWidth -> currLayerWidth
    int currLayerHeight -> currLayerHeight
    com.badlogic.gdx.graphics.g2d.tiled.TileSet currTileSet -> currTileSet
    com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup currObjectGroup -> currObjectGroup
    com.badlogic.gdx.graphics.g2d.tiled.TiledObject currObject -> currObject
    int currTile -> currTile
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline polyline -> polyline
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline polygon -> polygon
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property currProperty -> currProperty
    java.lang.String encoding -> encoding
    java.lang.String dataString -> dataString
    java.lang.String compression -> compression
    byte[] data -> data
    int dataCounter -> dataCounter
    int row -> row
    int col -> col
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap val$map -> val$map
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    void text(java.lang.String) -> text
    void close() -> close
    void putPolyLine(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline) -> putPolyLine
    void putProperty(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property) -> putProperty
    void fromCSV() -> fromCSV
    void arrangeData() -> arrangeData
    void unZlib() -> unZlib
    void unGZip() -> unGZip
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline:
    java.lang.String name -> name
    java.lang.String points -> points
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 this$1 -> this$1
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property:
    java.lang.String parentType -> parentType
    java.lang.String name -> name
    java.lang.String value -> value
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 this$1 -> this$1
com.badlogic.gdx.graphics.g2d.tiled.TiledMap -> com.badlogic.gdx.graphics.g2d.tiled.TiledMap:
    java.util.ArrayList layers -> layers
    java.util.ArrayList objectGroups -> objectGroups
    java.util.ArrayList tileSets -> tileSets
    java.util.HashMap properties -> properties
    java.util.ArrayList tileProperties -> tileProperties
    com.badlogic.gdx.files.FileHandle tmxFile -> tmxFile
    java.lang.String orientation -> orientation
    int width -> width
    int height -> height
    int tileWidth -> tileWidth
    int tileHeight -> tileHeight
    void setTileProperty(int,java.lang.String,java.lang.String) -> setTileProperty
    java.lang.String getTileProperty(int,java.lang.String) -> getTileProperty
com.badlogic.gdx.graphics.g2d.tiled.TiledMap$TileProperty -> com.badlogic.gdx.graphics.g2d.tiled.TiledMap$TileProperty:
    int id -> id
    java.util.HashMap propertyMap -> propertyMap
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap this$0 -> this$0
com.badlogic.gdx.graphics.g2d.tiled.TiledObject -> com.badlogic.gdx.graphics.g2d.tiled.TiledObject:
    java.lang.String name -> name
    java.lang.String type -> type
    int x -> x
    int y -> y
    int width -> width
    int height -> height
    int gid -> gid
    java.util.HashMap properties -> properties
    java.lang.String polyline -> polyline
    java.lang.String polygon -> polygon
com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup -> com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup:
    int width -> width
    int height -> height
    java.lang.String name -> name
    java.util.HashMap properties -> properties
    java.util.ArrayList objects -> objects
com.badlogic.gdx.graphics.g3d.Animation -> com.badlogic.gdx.graphics.g3d.Animation:
    float getLength() -> getLength
    int getNumFrames() -> getNumFrames
com.badlogic.gdx.graphics.g3d.Animator -> com.badlogic.gdx.graphics.g3d.Animator:
    float mAnimPos -> mAnimPos
    float mAnimLen -> mAnimLen
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode mWrapMode -> mWrapMode
    int mCurrentFrameIdx -> mCurrentFrameIdx
    int mNextFrameIdx -> mNextFrameIdx
    float mFrameDelta -> mFrameDelta
    com.badlogic.gdx.graphics.g3d.Animation mCurrentAnim -> mCurrentAnim
    int[] $SWITCH_TABLE$com$badlogic$gdx$graphics$g3d$Animator$WrapMode -> $SWITCH_TABLE$com$badlogic$gdx$graphics$g3d$Animator$WrapMode
    void setAnimation(com.badlogic.gdx.graphics.g3d.Animation,com.badlogic.gdx.graphics.g3d.Animator$WrapMode) -> setAnimation
    com.badlogic.gdx.graphics.g3d.Animation getCurrentAnimation() -> getCurrentAnimation
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode getCurrentWrapMode() -> getCurrentWrapMode
    void update(float) -> update
    void setInterpolationFrames() -> setInterpolationFrames
    void interpolate() -> interpolate
    int[] $SWITCH_TABLE$com$badlogic$gdx$graphics$g3d$Animator$WrapMode() -> $SWITCH_TABLE$com$badlogic$gdx$graphics$g3d$Animator$WrapMode
com.badlogic.gdx.graphics.g3d.Animator$WrapMode -> com.badlogic.gdx.graphics.g3d.Animator$WrapMode:
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode Loop -> Loop
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode Clamp -> Clamp
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode SingleFrame -> SingleFrame
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode[] values() -> values
    com.badlogic.gdx.graphics.g3d.Animator$WrapMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.Material -> com.badlogic.gdx.graphics.g3d.Material:
    java.lang.String Name -> Name
    com.badlogic.gdx.graphics.glutils.ShaderProgram Shader -> Shader
    com.badlogic.gdx.graphics.TextureRef Texture -> Texture
    java.lang.String TexturePath -> TexturePath
    com.badlogic.gdx.graphics.Color Ambient -> Ambient
    com.badlogic.gdx.graphics.Color Diffuse -> Diffuse
    com.badlogic.gdx.graphics.Color Specular -> Specular
    com.badlogic.gdx.graphics.Color Emissive -> Emissive
    int BlendSourceFactor -> BlendSourceFactor
    int BlendDestFactor -> BlendDestFactor
    float[] tmp -> tmp
    void setTmpArray(float,float,float,float) -> setTmpArray
    void set(int) -> set
    boolean read(java.io.DataInputStream) -> read
    boolean write(java.io.DataOutputStream) -> write
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool -> arrayPool
    com.badlogic.gdx.utils.Array usedArrays -> usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups -> materialGroups
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    java.util.Comparator cameraSorter -> cameraSorter
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    void createDefaultShader() -> createDefaultShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> this$0
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.g3d.decals.Decal:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SIZE -> SIZE
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    int value -> value
    float[] vertices -> vertices
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector2 scale -> scale
    com.badlogic.gdx.math.Vector2 transformationOffset -> transformationOffset
    com.badlogic.gdx.math.Vector2 dimensions -> dimensions
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> material
    boolean updated -> updated
    com.badlogic.gdx.math.Vector3 dir -> dir
    int X1 -> X1
    int Y1 -> Y1
    int Z1 -> Z1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int Z2 -> Z2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int Z3 -> Z3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int Z4 -> Z4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.math.Quaternion rotator -> rotator
    com.badlogic.gdx.math.Vector3 X_AXIS -> X_AXIS
    com.badlogic.gdx.math.Vector3 Y_AXIS -> Y_AXIS
    com.badlogic.gdx.math.Vector3 Z_AXIS -> Z_AXIS
    void setColor(float,float,float,float) -> setColor
    void rotateX(float) -> rotateX
    void rotateY(float) -> rotateY
    void rotateZ(float) -> rotateZ
    void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setRotation
    com.badlogic.gdx.math.Quaternion getRotation() -> getRotation
    void translateX(float) -> translateX
    void setX(float) -> setX
    float getX() -> getX
    void translateY(float) -> translateY
    void setY(float) -> setY
    float getY() -> getY
    void translateZ(float) -> translateZ
    void setZ(float) -> setZ
    float getZ() -> getZ
    void translate(float,float,float) -> translate
    void setPosition(float,float,float) -> setPosition
    com.badlogic.gdx.math.Vector3 getPosition() -> getPosition
    void setScaleX(float) -> setScaleX
    float getScaleX() -> getScaleX
    void setScaleY(float) -> setScaleY
    float getScaleY() -> getScaleY
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setHeight(float) -> setHeight
    float getHeight() -> getHeight
    void setDimensions(float,float) -> setDimensions
    float[] getVertices() -> getVertices
    void update() -> update
    void transformVertices() -> transformVertices
    void resetVertices() -> resetVertices
    void updateUVs() -> updateUVs
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setBlending(int,int) -> setBlending
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> getMaterial
    void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> lookAt
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> newDecal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.utils.SortedIntList groupList -> groupList
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> groupStrategy
    com.badlogic.gdx.utils.Pool groupPool -> groupPool
    com.badlogic.gdx.utils.Array usedGroups -> usedGroups
    void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> setGroupStrategy
    void initialize(int) -> initialize
    int getSize() -> getSize
    void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> add
    void flush() -> flush
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> render
    void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> flush
    void clear() -> clear
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    int NO_BLEND -> NO_BLEND
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    int srcBlendFactor -> srcBlendFactor
    int dstBlendFactor -> dstBlendFactor
    void set() -> set
    boolean isOpaque() -> isOpaque
    int getSrcBlendFactor() -> getSrcBlendFactor
    int getDstBlendFactor() -> getDstBlendFactor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    void beforeGroup(com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup() -> afterGroup
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    com.badlogic.gdx.utils.IntMap plugs -> plugs
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> plugIn
    com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> unPlug
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> comparator
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> this$0
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.keyframed.Keyframe -> com.badlogic.gdx.graphics.g3d.keyframed.Keyframe:
    float[][] vertices -> vertices
    short[][] indices -> indices
    boolean indicesSet -> indicesSet
    boolean indicesSent -> indicesSent
    com.badlogic.gdx.math.Vector3[] taggedJointPos -> taggedJointPos
    com.badlogic.gdx.math.Quaternion[] taggedJoint -> taggedJoint
com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimation -> com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimation:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.g3d.keyframed.Keyframe[] keyframes -> keyframes
    float length -> length
    float sampleRate -> sampleRate
    int refs -> refs
    float getLength() -> getLength
    int getNumFrames() -> getNumFrames
    void addRef() -> addRef
    int removeRef() -> removeRef
com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimator -> com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimator:
    int sStride -> sStride
    com.badlogic.gdx.graphics.g3d.keyframed.Keyframe A -> A
    com.badlogic.gdx.graphics.g3d.keyframed.Keyframe B -> B
    com.badlogic.gdx.graphics.g3d.keyframed.Keyframe R -> R
    int numMeshes -> numMeshes
    float invSampleRate -> invSampleRate
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion jointAOrient -> jointAOrient
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion jointBOrient -> jointBOrient
    com.badlogic.gdx.graphics.g3d.keyframed.Keyframe getInterpolatedKeyframe() -> getInterpolatedKeyframe
    void setKeyframeDimensions(int,int,int) -> setKeyframeDimensions
    void setNumTaggedJoints(int) -> setNumTaggedJoints
    void setInterpolationFrames() -> setInterpolationFrames
    void interpolate() -> interpolate
    void interpolateJoints(float) -> interpolateJoints
    boolean hasAnimation() -> hasAnimation
com.badlogic.gdx.graphics.g3d.keyframed.KeyframedModel -> com.badlogic.gdx.graphics.g3d.keyframed.KeyframedModel:
    com.badlogic.gdx.graphics.g3d.Material[] materials -> materials
    com.badlogic.gdx.utils.ObjectMap animations -> animations
    java.util.ArrayList animationRefs -> animationRefs
    java.lang.String assetName -> assetName
    com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimator animator -> animator
    com.badlogic.gdx.graphics.Mesh[] target -> target
    boolean[] visible -> visible
    int numMeshes -> numMeshes
    java.util.ArrayList taggedJointNames -> taggedJointNames
    com.badlogic.gdx.graphics.g3d.Animator getAnimator() -> getAnimator
    void setMaterials(com.badlogic.gdx.graphics.g3d.Material[]) -> setMaterials
    void setTaggedJoints(java.util.ArrayList) -> setTaggedJoints
    com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimation sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String) -> sampleAnimationFromMD5
    void getJointData(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion) -> getJointData
    void setAnimation(java.lang.String,com.badlogic.gdx.graphics.g3d.Animator$WrapMode) -> setAnimation
    com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimation getAnimation(java.lang.String) -> getAnimation
    void update(float) -> update
    void render() -> render
    void setMeshVisible(int,boolean) -> setMeshVisible
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderOld -> com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderOld:
    com.badlogic.gdx.graphics.Mesh loadObj(java.io.InputStream) -> loadObj
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation:
    int frameRate -> frameRate
    float secondsPerFrame -> secondsPerFrame
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints[] frames -> frames
    com.badlogic.gdx.math.collision.BoundingBox[] bounds -> bounds
    java.lang.String name -> name
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion jointAOrient -> jointAOrient
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion jointBOrient -> jointBOrient
    void write(java.io.DataOutputStream) -> write
    void read(java.io.DataInputStream) -> read
    void interpolate(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float) -> interpolate
    float getLength() -> getLength
    int getNumFrames() -> getNumFrames
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5AnimationInfo -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5AnimationInfo:
    int currFrame -> currFrame
    int nextFrame -> nextFrame
    int maxFrame -> maxFrame
    float lastTime -> lastTime
    float maxTime -> maxTime
    void reset() -> reset
    void reset(int,float) -> reset
    void update(float) -> update
    int getCurrentFrame() -> getCurrentFrame
    int getNextFrame() -> getNextFrame
    float getInterpolation() -> getInterpolation
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator:
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints mCurrentFrame -> mCurrentFrame
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints mNextFrame -> mNextFrame
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints mSkeleton -> mSkeleton
    void setSkeleton(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints) -> setSkeleton
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints getSkeleton() -> getSkeleton
    void setAnimation(com.badlogic.gdx.graphics.g3d.Animation,com.badlogic.gdx.graphics.g3d.Animator$WrapMode) -> setAnimation
    void setInterpolationFrames() -> setInterpolationFrames
    void interpolate() -> interpolate
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni:
    void calculateVertices(float[],float[],float[],float[],int,int,int) -> calculateVertices
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints:
    java.lang.String[] names -> names
    int numJoints -> numJoints
    int stride -> stride
    float[] joints -> joints
    void read(java.io.DataInputStream) -> read
    void write(java.io.DataOutputStream) -> write
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader:
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion thisOrient -> thisOrient
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion parentOrient -> parentOrient
    com.badlogic.gdx.math.Vector3 parentPos -> parentPos
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model loadModel(java.io.InputStream,boolean) -> loadModel
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation loadAnimation(java.io.InputStream) -> loadAnimation
    float parseFloat(java.lang.String) -> parseFloat
    int parseInt(java.lang.String) -> parseInt
    void buildFrameSkeleton(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$JointInfo[],com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$BaseFrameJoint[],float[],com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,int) -> buildFrameSkeleton
    void tokenize(java.lang.String,java.util.List) -> tokenize
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$BaseFrameJoint -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$BaseFrameJoint:
    com.badlogic.gdx.math.Vector3 pos -> pos
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion orient -> orient
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$JointInfo -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$JointInfo:
    java.lang.String name -> name
    int parent -> parent
    int flags -> flags
    int startIndex -> startIndex
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Mesh -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Mesh:
    java.lang.String shader -> shader
    int numVertices -> numVertices
    int numWeights -> numWeights
    int numTriangles -> numTriangles
    float[] vertices -> vertices
    float[] weights -> weights
    short[] indices -> indices
    int floatsPerVertex -> floatsPerVertex
    int floatsPerWeight -> floatsPerWeight
    com.badlogic.gdx.math.Vector3 bn -> bn
    com.badlogic.gdx.math.Vector3 _A -> _A
    com.badlogic.gdx.math.Vector3 _B -> _B
    com.badlogic.gdx.math.Vector3 _n -> _n
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion quat -> quat
    com.badlogic.gdx.math.Vector3 vn -> vn
    float[] createVertexArray() -> createVertexArray
    float[] createVertexArray(int) -> createVertexArray
    short[] getIndices() -> getIndices
    void calculateVerticesN(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[],com.badlogic.gdx.math.collision.BoundingBox) -> calculateVerticesN
    void calculateVertices(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[],com.badlogic.gdx.math.collision.BoundingBox) -> calculateVertices
    void calculateVerticesN(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[],float[],float[],int,int,com.badlogic.gdx.math.collision.BoundingBox) -> calculateVerticesN
    void calculateVertices(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[],float[],float[],int,int,com.badlogic.gdx.math.collision.BoundingBox) -> calculateVertices
    void calculateVerticesJni(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[]) -> calculateVerticesJni
    void calculateNormalsBind(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[]) -> calculateNormalsBind
    com.badlogic.gdx.math.Vector3 calcNor(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> calcNor
    void calculateNormalsBind(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints,float[],float[],short[],float[],int,int) -> calculateNormalsBind
    void read(java.io.DataInputStream) -> read
    void write(java.io.DataOutputStream) -> write
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model:
    int numJoints -> numJoints
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints baseSkeleton -> baseSkeleton
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Mesh[] meshes -> meshes
    int getNumVertices() -> getNumVertices
    int getNumTriangles() -> getNumTriangles
    void read(java.io.DataInputStream) -> read
    void write(java.io.DataOutputStream) -> write
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion:
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion tmp -> tmp
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion inv -> inv
    boolean $assertionsDisabled -> $assertionsDisabled
    void set(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion) -> set
    void computeW() -> computeW
    void normalize() -> normalize
    void multiply(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion) -> multiply
    void multiply(com.badlogic.gdx.math.Vector3) -> multiply
    void rotate(com.badlogic.gdx.math.Vector3) -> rotate
    float dot(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion) -> dot
    void slerp(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion,float) -> slerp
    void invert() -> invert
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer -> com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer:
    com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model model -> model
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    short[][] indices -> indices
    float[][] vertices -> vertices
    boolean useJni -> useJni
    boolean useNormals -> useNormals
    com.badlogic.gdx.math.collision.BoundingBox mBBox -> mBBox
    com.badlogic.gdx.math.collision.BoundingBox getBBox() -> getBBox
    float[] getVertices(int) -> getVertices
    short[] getIndices(int) -> getIndices
    com.badlogic.gdx.graphics.Mesh getMesh() -> getMesh
    void setSkeleton(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints) -> setSkeleton
    void setUseJni(boolean) -> setUseJni
    void calculateNormals(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints) -> calculateNormals
    void render() -> render
    void render(com.badlogic.gdx.graphics.g3d.Material[]) -> render
    void dispose() -> dispose
    boolean isJniUsed() -> isJniUsed
com.badlogic.gdx.graphics.g3d.loaders.obj.ObjLoader -> com.badlogic.gdx.graphics.g3d.loaders.obj.ObjLoader:
    com.badlogic.gdx.graphics.Mesh loadObj(java.io.InputStream) -> loadObj
    com.badlogic.gdx.graphics.Mesh loadObj(java.io.InputStream,boolean) -> loadObj
    com.badlogic.gdx.graphics.Mesh loadObj(java.io.InputStream,boolean,boolean) -> loadObj
    com.badlogic.gdx.graphics.Mesh loadObjFromString(java.lang.String) -> loadObjFromString
    com.badlogic.gdx.graphics.Mesh loadObjFromString(java.lang.String,boolean) -> loadObjFromString
    com.badlogic.gdx.graphics.Mesh loadObjFromString(java.lang.String,boolean,boolean) -> loadObjFromString
    int getIndex(java.lang.String,int) -> getIndex
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> PKM_HEADER_SIZE
    int ETC1_RGB8_OES -> ETC1_RGB8_OES
    int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> getPixelSize
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> encodeImage
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> encodeImagePKM
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> decodeImage
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    int width -> width
    int height -> height
    java.nio.ByteBuffer compressedData -> compressedData
    int dataOffset -> dataOffset
    boolean hasPKMHeader() -> hasPKMHeader
    void write(com.badlogic.gdx.files.FileHandle) -> write
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> data
    boolean useMipMaps -> useMipMaps
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCompressedData() -> consumeCompressedData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.FileTextureData:
    boolean copyToPOT -> copyToPOT
    com.badlogic.gdx.files.FileHandle file -> file
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    boolean useMipMaps -> useMipMaps
    boolean isPrepared -> isPrepared
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> ensurePot
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.files.FileHandle getFileHandle() -> getFileHandle
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCompressedData() -> consumeCompressedData
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.FrameBuffer:
    java.util.Map buffers -> buffers
    com.badlogic.gdx.graphics.Texture colorTexture -> colorTexture
    int framebufferHandle -> framebufferHandle
    int depthbufferHandle -> depthbufferHandle
    int width -> width
    int height -> height
    boolean hasDepth -> hasDepth
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    void build() -> build
    void dispose() -> dispose
    void begin() -> begin
    void end() -> end
    void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> addManagedFrameBuffer
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> invalidateAllFrameBuffers
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> clearAllFrameBuffers
    java.lang.String getManagedStatus() -> getManagedStatus
    com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> getColorBufferTexture
    int getHeight() -> getHeight
    int getWidth() -> getWidth
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    int primitiveType -> primitiveType
    float[] positions -> positions
    java.nio.FloatBuffer positionsBuffer -> positionsBuffer
    float[] colors -> colors
    java.nio.FloatBuffer colorsBuffer -> colorsBuffer
    float[] normals -> normals
    java.nio.FloatBuffer normalsBuffer -> normalsBuffer
    float[] texCoords -> texCoords
    java.nio.FloatBuffer texCoordsBuffer -> texCoordsBuffer
    int idxPos -> idxPos
    int idxCols -> idxCols
    int idxNors -> idxNors
    int idxTexCoords -> idxTexCoords
    boolean hasCols -> hasCols
    boolean hasNors -> hasNors
    boolean hasTexCoords -> hasTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void begin(int) -> begin
    void color(float,float,float,float) -> color
    void normal(float,float,float) -> normal
    void texCoord(float,float) -> texCoord
    void vertex(float,float,float) -> vertex
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void end() -> end
    void vertex(com.badlogic.gdx.math.Vector3) -> vertex
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    int primitiveType -> primitiveType
    int vertexIdx -> vertexIdx
    int numSetTexCoords -> numSetTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    int numTexCoords -> numTexCoords
    int vertexSize -> vertexSize
    int normalOffset -> normalOffset
    int colorOffset -> colorOffset
    int texCoordOffset -> texCoordOffset
    com.badlogic.gdx.math.Matrix4 projModelView -> projModelView
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> buildVertexAttributes
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
    java.lang.String createVertexShader(boolean,boolean,int) -> createVertexShader
    java.lang.String createFragmentShader(boolean,boolean,int) -> createFragmentShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> createDefaultShader
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.IndexArray:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.IndexData:
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    boolean useHWMipMap -> useHWMipMap
    void setUseHardwareMipMap(boolean) -> setUseHardwareMipMap
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> generateMipMap
    void generateMipMapGLES20(com.badlogic.gdx.graphics.Pixmap,boolean) -> generateMipMapGLES20
    void generateMipMapDesktop(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> generateMipMapDesktop
    void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> generateMipMapCPU
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean useMipMaps -> useMipMaps
    boolean disposePixmap -> disposePixmap
    boolean disposePixmap() -> disposePixmap
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCompressedData() -> consumeCompressedData
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.ShaderProgram:
    java.lang.String POSITION_ATTRIBUTE -> POSITION_ATTRIBUTE
    java.lang.String NORMAL_ATTRIBUTE -> NORMAL_ATTRIBUTE
    java.lang.String COLOR_ATTRIBUTE -> COLOR_ATTRIBUTE
    java.lang.String TEXCOORD_ATTRIBUTE -> TEXCOORD_ATTRIBUTE
    java.lang.String TANGENT_ATTRIBUTE -> TANGENT_ATTRIBUTE
    java.lang.String BINORMAL_ATTRIBUTE -> BINORMAL_ATTRIBUTE
    boolean pedantic -> pedantic
    com.badlogic.gdx.utils.ObjectMap shaders -> shaders
    java.lang.String log -> log
    boolean isCompiled -> isCompiled
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> uniforms
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> uniformTypes
    java.lang.String[] uniformNames -> uniformNames
    com.badlogic.gdx.utils.ObjectIntMap attributes -> attributes
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> attributeTypes
    java.lang.String[] attributeNames -> attributeNames
    int program -> program
    int vertexShaderHandle -> vertexShaderHandle
    int fragmentShaderHandle -> fragmentShaderHandle
    java.nio.FloatBuffer matrix -> matrix
    java.lang.String vertexShaderSource -> vertexShaderSource
    java.lang.String fragmentShaderSource -> fragmentShaderSource
    boolean invalidated -> invalidated
    java.nio.ByteBuffer buffer -> buffer
    java.nio.FloatBuffer floatBuffer -> floatBuffer
    java.nio.IntBuffer intBuffer -> intBuffer
    int refCount -> refCount
    java.nio.IntBuffer intbuf -> intbuf
    java.nio.IntBuffer params -> params
    java.nio.IntBuffer type -> type
    void compileShaders(java.lang.String,java.lang.String) -> compileShaders
    int loadShader(int,java.lang.String) -> loadShader
    int linkProgram() -> linkProgram
    java.lang.String getLog() -> getLog
    boolean isCompiled() -> isCompiled
    int fetchAttributeLocation(java.lang.String) -> fetchAttributeLocation
    int fetchUniformLocation(java.lang.String) -> fetchUniformLocation
    void setUniformi(java.lang.String,int) -> setUniformi
    void setUniformi(java.lang.String,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int,int) -> setUniformi
    void setUniformf(java.lang.String,float) -> setUniformf
    void setUniformf(java.lang.String,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float,float) -> setUniformf
    void setUniform1fv(java.lang.String,float[],int,int) -> setUniform1fv
    void setUniform2fv(java.lang.String,float[],int,int) -> setUniform2fv
    void setUniform3fv(java.lang.String,float[],int,int) -> setUniform3fv
    void setUniform4fv(java.lang.String,float[],int,int) -> setUniform4fv
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> setVertexAttribute
    void begin() -> begin
    void end() -> end
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> disableVertexAttribute
    void enableVertexAttribute(java.lang.String) -> enableVertexAttribute
    void checkManaged() -> checkManaged
    void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> addManagedShader
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> invalidateAllShaderPrograms
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> clearAllShaderPrograms
    java.lang.String getManagedStatus() -> getManagedStatus
    void setAttributef(java.lang.String,float,float,float,float) -> setAttributef
    void ensureBufferCapacity(int) -> ensureBufferCapacity
    void fetchUniforms() -> fetchUniforms
    void fetchAttributes() -> fetchAttributes
    boolean hasAttribute(java.lang.String) -> hasAttribute
    int getAttributeType(java.lang.String) -> getAttributeType
    int getAttributeLocation(java.lang.String) -> getAttributeLocation
    boolean hasUniform(java.lang.String) -> hasUniform
    int getUniformType(java.lang.String) -> getUniformType
    int getUniformLocation(java.lang.String) -> getUniformLocation
    java.lang.String[] getAttributes() -> getAttributes
    java.lang.String[] getUniforms() -> getUniforms
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> renderer
    boolean matrixDirty -> matrixDirty
    com.badlogic.gdx.math.Matrix4 projView -> projView
    com.badlogic.gdx.math.Matrix4 transform -> transform
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 tmp -> tmp
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType -> currType
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void identity() -> identity
    void translate(float,float,float) -> translate
    void rotate(float,float,float,float) -> rotate
    void scale(float,float,float) -> scale
    void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> begin
    void point(float,float,float) -> point
    void line(float,float,float,float,float,float) -> line
    void line(float,float,float,float) -> line
    void rect(float,float,float,float) -> rect
    void filledRect(float,float,float,float) -> filledRect
    void box(float,float,float,float,float,float) -> box
    void circle(float,float,float) -> circle
    void circle(float,float,float,int) -> circle
    void filledCircle(float,float,float) -> filledCircle
    void filledCircle(float,float,float,int) -> filledCircle
    void triangle(float,float,float,float,float,float) -> triangle
    void filledTriangle(float,float,float,float,float,float) -> filledTriangle
    void checkDirty() -> checkDirty
    void checkFlush(int) -> checkFlush
    void end() -> end
    void flush() -> flush
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> Point
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> Line
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Rectangle -> Rectangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledRectangle -> FilledRectangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Box -> Box
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Circle -> Circle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledCircle -> FilledCircle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Triangle -> Triangle
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledTriangle -> FilledTriangle
    int glType -> glType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] ENUM$VALUES -> ENUM$VALUES
    int getGlType() -> getGlType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.VertexArray:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    boolean isBound -> isBound
    void dispose() -> dispose
    java.nio.FloatBuffer getBuffer() -> getBuffer
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    void setVertices(float[],int,int) -> setVertices
    void bind() -> bind
    void unbind() -> unbind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void setVertices(float[],int,int) -> setVertices
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind() -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void setVertices(float[],int,int) -> setVertices
    void bind() -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind() -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
    int getBufferHandle() -> getBufferHandle
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.VertexData:
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setVertices(float[],int,int) -> setVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void dispose() -> dispose
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.input.GestureDetector:
    int tapSquareSize -> tapSquareSize
    long tapCountInterval -> tapCountInterval
    long longPressDuration -> longPressDuration
    long maxFlingDelay -> maxFlingDelay
    boolean inTapSquare -> inTapSquare
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    boolean longPressFired -> longPressFired
    boolean pinching -> pinching
    boolean panning -> panning
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> tracker
    int tapSquareCenterX -> tapSquareCenterX
    int tapSquareCenterY -> tapSquareCenterY
    long gestureStartTime -> gestureStartTime
    com.badlogic.gdx.math.Vector2 firstPointer -> firstPointer
    com.badlogic.gdx.math.Vector2 secondPointer -> secondPointer
    com.badlogic.gdx.math.Vector2 initialFirstPointer -> initialFirstPointer
    com.badlogic.gdx.math.Vector2 initialSecondPointer -> initialSecondPointer
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> listener
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean isLongPressed() -> isLongPressed
    boolean isLongPressed(float) -> isLongPressed
    boolean isPanning() -> isPanning
    void reset() -> reset
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.input.GestureDetector$GestureAdapter:
    boolean touchDown(int,int,int) -> touchDown
    boolean tap(int,int,int) -> tap
    boolean longPress(int,int) -> longPress
    boolean fling(float,float) -> fling
    boolean pan(int,int,int,int) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.input.GestureDetector$GestureListener:
    boolean touchDown(int,int,int) -> touchDown
    boolean tap(int,int,int) -> tap
    boolean longPress(int,int) -> longPress
    boolean fling(float,float) -> fling
    boolean pan(int,int,int,int) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    int sampleSize -> sampleSize
    int lastX -> lastX
    int lastY -> lastY
    int deltaX -> deltaX
    int deltaY -> deltaY
    long lastTime -> lastTime
    int numSamples -> numSamples
    float[] meanX -> meanX
    float[] meanY -> meanY
    long[] meanTime -> meanTime
    void start(int,int,long) -> start
    void update(int,int,long) -> update
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    float getAverage(float[],int) -> getAverage
    long getAverage(long[],int) -> getAverage
    float getSum(float[],int) -> getSum
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.input.RemoteInput:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.ServerSocket serverSocket -> serverSocket
    float[] accel -> accel
    float[] compass -> compass
    boolean multiTouch -> multiTouch
    float remoteWidth -> remoteWidth
    float remoteHeight -> remoteHeight
    java.util.Set keys -> keys
    int[] touchX -> touchX
    int[] touchY -> touchY
    boolean[] isTouched -> isTouched
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    int port -> port
    java.lang.String[] ips -> ips
    void run() -> run
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getY() -> getY
    int getY(int) -> getY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    java.lang.String[] getIPs() -> getIPs
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    long getCurrentEventTime() -> getCurrentEventTime
    void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.input.RemoteInput$EventTrigger:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> touchEvent
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> keyEvent
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.input.RemoteInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.input.RemoteInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.input.RemoteSender:
    java.io.DataOutputStream out -> out
    boolean connected -> connected
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int ACCEL -> ACCEL
    int COMPASS -> COMPASS
    int SIZE -> SIZE
    void sendUpdate() -> sendUpdate
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchMoved(int,int) -> touchMoved
    boolean scrolled(int) -> scrolled
    boolean isConnected() -> isConnected
    boolean keyTyped(java.lang.String) -> keyTyped
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    long serialVersionUID -> serialVersionUID
    java.util.List controlPoints -> controlPoints
    com.badlogic.gdx.math.Vector3 T1 -> T1
    com.badlogic.gdx.math.Vector3 T2 -> T2
    void add(com.badlogic.gdx.math.Vector3) -> add
    java.util.List getControlPoints() -> getControlPoints
    java.util.List getPath(int) -> getPath
    void getPath(com.badlogic.gdx.math.Vector3[],int) -> getPath
    java.util.List getTangents(int) -> getTangents
    java.util.List getTangentNormals2D(int) -> getTangentNormals2D
    java.util.List getTangentNormals(int,com.badlogic.gdx.math.Vector3) -> getTangentNormals
    java.util.List getTangentNormals(int,java.util.List) -> getTangentNormals
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.Circle:
    float x -> x
    float y -> y
    float radius -> radius
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    void set(float,float,float) -> set
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.EarClippingTriangulator:
    int CONCAVE -> CONCAVE
    int CONVEX -> CONVEX
    int concaveVertexCount -> concaveVertexCount
    java.util.List computeTriangles(java.util.List) -> computeTriangles
    boolean areVerticesClockwise(java.util.ArrayList) -> areVerticesClockwise
    int[] classifyVertices(java.util.ArrayList) -> classifyVertices
    boolean isTriangleConvex(float,float,float,float,float,float) -> isTriangleConvex
    int computeSpannedAreaSign(float,float,float,float,float,float) -> computeSpannedAreaSign
    boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float) -> isAnyVertexInTriangle
    boolean isEarTip(java.util.ArrayList,int,int[]) -> isEarTip
    void cutEarTip(java.util.ArrayList,int,java.util.ArrayList) -> cutEarTip
    void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int) -> removeCollinearNeighborEarsAfterRemovingEarTip
    boolean isCollinear(java.util.ArrayList,int) -> isCollinear
    boolean isCollinear(java.util.ArrayList,int,int,int) -> isCollinear
    int computePreviousIndex(java.util.List,int) -> computePreviousIndex
    int computeNextIndex(java.util.List,int) -> computeNextIndex
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> clipSpacePlanePoints
    float[] clipSpacePlanePointsArray -> clipSpacePlanePointsArray
    com.badlogic.gdx.math.Plane[] planes -> planes
    com.badlogic.gdx.math.Vector3[] planePoints -> planePoints
    float[] planePointsArray -> planePointsArray
    void update(com.badlogic.gdx.math.Matrix4) -> update
    boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> pointInFrustum
    boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustum
    boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustumWithoutNearFar
    boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> boundsInFrustum
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.Interpolation:
    com.badlogic.gdx.math.Interpolation linear -> linear
    com.badlogic.gdx.math.Interpolation fade -> fade
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> pow2
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> pow2In
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> pow2Out
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> pow3
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> pow3In
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> pow3Out
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> pow4
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> pow4In
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> pow4Out
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> pow5
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> pow5In
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> pow5Out
    com.badlogic.gdx.math.Interpolation sine -> sine
    com.badlogic.gdx.math.Interpolation sineIn -> sineIn
    com.badlogic.gdx.math.Interpolation sineOut -> sineOut
    com.badlogic.gdx.math.Interpolation exp10 -> exp10
    com.badlogic.gdx.math.Interpolation exp10In -> exp10In
    com.badlogic.gdx.math.Interpolation exp10Out -> exp10Out
    com.badlogic.gdx.math.Interpolation exp5 -> exp5
    com.badlogic.gdx.math.Interpolation exp5In -> exp5In
    com.badlogic.gdx.math.Interpolation exp5Out -> exp5Out
    com.badlogic.gdx.math.Interpolation circle -> circle
    com.badlogic.gdx.math.Interpolation circleIn -> circleIn
    com.badlogic.gdx.math.Interpolation circleOut -> circleOut
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> elastic
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> elasticIn
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> elasticOut
    com.badlogic.gdx.math.Interpolation swing -> swing
    com.badlogic.gdx.math.Interpolation swingIn -> swingIn
    com.badlogic.gdx.math.Interpolation swingOut -> swingOut
    com.badlogic.gdx.math.Interpolation bounce -> bounce
    com.badlogic.gdx.math.Interpolation bounceIn -> bounceIn
    com.badlogic.gdx.math.Interpolation bounceOut -> bounceOut
    float apply(float) -> apply
    float apply(float,float,float) -> apply
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.Interpolation$1:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.Interpolation$2:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.Interpolation$3:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.Interpolation$4:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.Interpolation$5:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.Interpolation$6:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.Interpolation$7:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.Interpolation$8:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.Interpolation$Bounce:
    float out(float) -> out
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.Interpolation$BounceIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.Interpolation$BounceOut:
    float[] widths -> widths
    float[] heights -> heights
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.Interpolation$Elastic:
    float value -> value
    float power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.Interpolation$ElasticIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.Interpolation$ElasticOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.Interpolation$Exp:
    float value -> value
    float power -> power
    float min -> min
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.Interpolation$ExpIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.Interpolation$ExpOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.Interpolation$Pow:
    int power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.Interpolation$PowIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.Interpolation$PowOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.Interpolation$Swing:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.Interpolation$SwingIn:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.Interpolation$SwingOut:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> v0
    com.badlogic.gdx.math.Vector3 v1 -> v1
    com.badlogic.gdx.math.Vector3 v2 -> v2
    com.badlogic.gdx.math.Plane p -> p
    com.badlogic.gdx.math.Vector3 i -> i
    com.badlogic.gdx.math.Vector3 dir -> dir
    com.badlogic.gdx.math.Vector3 start -> start
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 best -> best
    com.badlogic.gdx.math.Vector3 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector3 intersection -> intersection
    float getLowestPositiveRoot(float,float,float) -> getLowestPositiveRoot
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> isPointInTriangle
    boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectSegmentPlane
    int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pointLineSide
    int pointLineSide(float,float,float,float,float,float) -> pointLineSide
    boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2) -> isPointInPolygon
    float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceLinePoint
    float distanceLinePoint(float,float,float,float,float,float) -> distanceLinePoint
    boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> intersectSegmentCircle
    float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> intersectSegmentCircleDisplace
    boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectRayPlane
    float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectLinePlane
    boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayTriangle
    boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> intersectRaySphere
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> intersectRayBoundsFast
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> intersectRectangles
    boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectSegments
    float det(float,float,float,float) -> det
    double detd(double,double,double,double) -> detd
    boolean overlapCircles(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> overlapCircles
    boolean overlapRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> overlapRectangles
    boolean overlapCircleRectangle(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> overlapCircleRectangle
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> overlapConvexPolygons
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Vector2) -> overlapConvexPolygons
    boolean separateConvexPolygons(float[],float[],com.badlogic.gdx.math.Vector2) -> separateConvexPolygons
    void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> splitTriangle
    void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int) -> splitEdge
    void main(java.lang.String[]) -> main
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] front -> front
    float[] back -> back
    float[] edgeSplit -> edgeSplit
    int numFront -> numFront
    int numBack -> numBack
    int total -> total
    boolean frontCurrent -> frontCurrent
    int frontOffset -> frontOffset
    int backOffset -> backOffset
    java.lang.String toString() -> toString
    void setSide(boolean) -> setSide
    boolean getSide() -> getSide
    void add(float[],int,int) -> add
    void reset() -> reset
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.MathUtils:
    float PI -> PI
    int SIN_BITS -> SIN_BITS
    int SIN_MASK -> SIN_MASK
    int SIN_COUNT -> SIN_COUNT
    float radFull -> radFull
    float degFull -> degFull
    float radToIndex -> radToIndex
    float degToIndex -> degToIndex
    float radiansToDegrees -> radiansToDegrees
    float degreesToRadians -> degreesToRadians
    float[] sin -> sin
    float[] cos -> cos
    int ATAN2_BITS -> ATAN2_BITS
    int ATAN2_BITS2 -> ATAN2_BITS2
    int ATAN2_MASK -> ATAN2_MASK
    int ATAN2_COUNT -> ATAN2_COUNT
    int ATAN2_DIM -> ATAN2_DIM
    float INV_ATAN2_DIM_MINUS_1 -> INV_ATAN2_DIM_MINUS_1
    float[] atan2 -> atan2
    java.util.Random random -> random
    int BIG_ENOUGH_INT -> BIG_ENOUGH_INT
    double BIG_ENOUGH_FLOOR -> BIG_ENOUGH_FLOOR
    double CEIL -> CEIL
    double BIG_ENOUGH_CEIL -> BIG_ENOUGH_CEIL
    double BIG_ENOUGH_ROUND -> BIG_ENOUGH_ROUND
    float sin(float) -> sin
    float cos(float) -> cos
    float sinDeg(float) -> sinDeg
    float cosDeg(float) -> cosDeg
    float atan2(float,float) -> atan2
    int random(int) -> random
    int random(int,int) -> random
    boolean randomBoolean() -> randomBoolean
    float random() -> random
    float random(float) -> random
    float random(float,float) -> random
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int clamp(int,int,int) -> clamp
    short clamp(short,short,short) -> clamp
    float clamp(float,float,float) -> clamp
    int floor(float) -> floor
    int floorPositive(float) -> floorPositive
    int ceil(float) -> ceil
    int ceilPositive(float) -> ceilPositive
    int round(float) -> round
    int roundPositive(float) -> roundPositive
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    long serialVersionUID -> serialVersionUID
    float DEGREE_TO_RAD -> DEGREE_TO_RAD
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    float[] val -> val
    float[] tmp -> tmp
    com.badlogic.gdx.math.Matrix3 idt() -> idt
    com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Matrix3 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> setToScaling
    java.lang.String toString() -> toString
    float det() -> det
    com.badlogic.gdx.math.Matrix3 inv() -> inv
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix3 trn(float,float) -> trn
    com.badlogic.gdx.math.Matrix3 translate(float,float) -> translate
    com.badlogic.gdx.math.Matrix3 rotate(float) -> rotate
    com.badlogic.gdx.math.Matrix3 scale(float,float) -> scale
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix3 scl(float) -> scl
    void mul(float[],float[]) -> mul
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M03 -> M03
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M13 -> M13
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    int M23 -> M23
    int M30 -> M30
    int M31 -> M31
    int M32 -> M32
    int M33 -> M33
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> quat
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.math.Vector3 l_vez -> l_vez
    com.badlogic.gdx.math.Vector3 l_vex -> l_vex
    com.badlogic.gdx.math.Vector3 l_vey -> l_vey
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.Vector3 tmpForward -> tmpForward
    com.badlogic.gdx.math.Vector3 tmpUp -> tmpUp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix4 set(float[]) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> set
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 cpy() -> cpy
    com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> trn
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Matrix4 tra() -> tra
    com.badlogic.gdx.math.Matrix4 idt() -> idt
    com.badlogic.gdx.math.Matrix4 inv() -> inv
    float det() -> det
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> setToProjection
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> setToOrtho
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> setFromEulerAngles
    com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToWorld
    java.lang.String toString() -> toString
    void lerp(com.badlogic.gdx.math.Matrix4,float) -> lerp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float) -> scl
    void getTranslation(com.badlogic.gdx.math.Vector3) -> getTranslation
    void getRotation(com.badlogic.gdx.math.Quaternion) -> getRotation
    com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> toNormalMatrix
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> translate
    com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> scale
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float) -> set
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> testPoint
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> testPoint
    boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> isFrontFacing
    com.badlogic.gdx.math.Vector3 getNormal() -> getNormal
    float getD() -> getD
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Plane) -> set
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> OnPlane
    com.badlogic.gdx.math.Plane$PlaneSide Back -> Back
    com.badlogic.gdx.math.Plane$PlaneSide Front -> Front
    com.badlogic.gdx.math.Plane$PlaneSide[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.Polygon:
    float[] vertices -> vertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    float[] getVertices() -> getVertices
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float area() -> area
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    boolean contains(float,float) -> contains
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    float NORMALIZATION_TOLERANCE -> NORMALIZATION_TOLERANCE
    com.badlogic.gdx.math.Quaternion tmp1 -> tmp1
    com.badlogic.gdx.math.Quaternion tmp2 -> tmp2
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.math.Quaternion cpy() -> cpy
    float len() -> len
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> setEulerAngles
    float len2() -> len2
    com.badlogic.gdx.math.Quaternion nor() -> nor
    com.badlogic.gdx.math.Quaternion conjugate() -> conjugate
    void transform(com.badlogic.gdx.math.Vector3) -> transform
    com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> mulLeft
    void toMatrix(float[]) -> toMatrix
    com.badlogic.gdx.math.Quaternion idt() -> idt
    com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> slerp
    boolean equals(java.lang.Object) -> equals
    float dot(com.badlogic.gdx.math.Quaternion) -> dot
    com.badlogic.gdx.math.Quaternion mul(float) -> mul
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
    boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    void set(float,float,float,float) -> set
    boolean contains(float,float) -> contains
    void set(com.badlogic.gdx.math.Rectangle) -> set
    void merge(com.badlogic.gdx.math.Rectangle) -> merge
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.math.Vector2 X -> X
    com.badlogic.gdx.math.Vector2 Y -> Y
    com.badlogic.gdx.math.Vector2 Zero -> Zero
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    com.badlogic.gdx.math.Vector2 mul(float) -> mul
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    float dst2(float,float) -> dst2
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 tmp() -> tmp
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> mul
    float crs(com.badlogic.gdx.math.Vector2) -> crs
    float crs(float,float) -> crs
    float angle() -> angle
    com.badlogic.gdx.math.Vector2 rotate(float) -> rotate
    com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> lerp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> epsilonEquals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector3 X -> X
    com.badlogic.gdx.math.Vector3 Y -> Y
    com.badlogic.gdx.math.Vector3 Z -> Z
    com.badlogic.gdx.math.Vector3 Zero -> Zero
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Vector3 set(float[]) -> set
    com.badlogic.gdx.math.Vector3 cpy() -> cpy
    com.badlogic.gdx.math.Vector3 tmp() -> tmp
    com.badlogic.gdx.math.Vector3 tmp2() -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3() -> tmp3
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> add
    com.badlogic.gdx.math.Vector3 add(float) -> add
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> sub
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> sub
    com.badlogic.gdx.math.Vector3 sub(float) -> sub
    com.badlogic.gdx.math.Vector3 mul(float) -> mul
    com.badlogic.gdx.math.Vector3 div(float) -> div
    float len() -> len
    float len2() -> len2
    boolean idt(com.badlogic.gdx.math.Vector3) -> idt
    float dst(com.badlogic.gdx.math.Vector3) -> dst
    com.badlogic.gdx.math.Vector3 nor() -> nor
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> crs
    com.badlogic.gdx.math.Vector3 crs(float,float,float) -> crs
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> prj
    com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> rot
    boolean isUnit() -> isUnit
    boolean isZero() -> isZero
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> slerp
    java.lang.String toString() -> toString
    float dot(float,float,float) -> dot
    float dst2(com.badlogic.gdx.math.Vector3) -> dst2
    float dst2(float,float,float) -> dst2
    float dst(float,float,float) -> dst
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector3 scale(float,float,float) -> scale
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> values
    int added_values -> added_values
    int last_value -> last_value
    float mean -> mean
    boolean dirty -> dirty
    boolean hasEnoughData() -> hasEnoughData
    void clear() -> clear
    void addValue(float) -> addValue
    float getMean() -> getMean
    float getOldest() -> getOldest
    float getLatest() -> getLatest
    float standardDeviation() -> standardDeviation
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3[] crn -> crn
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    boolean crn_dirty -> crn_dirty
    com.badlogic.gdx.math.Vector3 getCenter() -> getCenter
    void updateCorners() -> updateCorners
    com.badlogic.gdx.math.Vector3[] getCorners() -> getCorners
    com.badlogic.gdx.math.Vector3 getDimensions() -> getDimensions
    com.badlogic.gdx.math.Vector3 getMin() -> getMin
    com.badlogic.gdx.math.Vector3 getMax() -> getMax
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> set
    com.badlogic.gdx.math.collision.BoundingBox inf() -> inf
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> ext
    com.badlogic.gdx.math.collision.BoundingBox clr() -> clr
    boolean isValid() -> isValid
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> ext
    com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> mul
    boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> contains
    boolean contains(com.badlogic.gdx.math.Vector3) -> contains
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> ext
    float min(float,float) -> min
    float max(float,float) -> max
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.collision.Ray cpy() -> cpy
    com.badlogic.gdx.math.Vector3 getEndPoint(float) -> getEndPoint
    com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> mul
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> set
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    long serialVersionUID -> serialVersionUID
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
    boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> overlaps
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> addr
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.World world -> world
    java.util.ArrayList fixtures -> fixtures
    java.util.ArrayList joints -> joints
    java.lang.Object userData -> userData
    com.badlogic.gdx.physics.box2d.Transform transform -> transform
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 worldCenter -> worldCenter
    com.badlogic.gdx.math.Vector2 localCenter -> localCenter
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    com.badlogic.gdx.physics.box2d.MassData massData -> massData
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    com.badlogic.gdx.math.Vector2 worldVector -> worldVector
    com.badlogic.gdx.math.Vector2 localPoint2 -> localPoint2
    com.badlogic.gdx.math.Vector2 localVector -> localVector
    com.badlogic.gdx.math.Vector2 linVelWorld -> linVelWorld
    com.badlogic.gdx.math.Vector2 linVelLoc -> linVelLoc
    void reset(long) -> reset
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> createFixture
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> createFixture
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> destroyFixture
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    void setTransform(com.badlogic.gdx.math.Vector2,float) -> setTransform
    void setTransform(float,float,float) -> setTransform
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    com.badlogic.gdx.physics.box2d.Transform getTransform() -> getTransform
    void jniGetTransform(long,float[]) -> jniGetTransform
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    float getAngle() -> getAngle
    float jniGetAngle(long) -> jniGetAngle
    com.badlogic.gdx.math.Vector2 getWorldCenter() -> getWorldCenter
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    com.badlogic.gdx.math.Vector2 getLocalCenter() -> getLocalCenter
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> setLinearVelocity
    void setLinearVelocity(float,float) -> setLinearVelocity
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    com.badlogic.gdx.math.Vector2 getLinearVelocity() -> getLinearVelocity
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    float getAngularVelocity() -> getAngularVelocity
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyForce
    void applyForce(float,float,float,float) -> applyForce
    void jniApplyForce(long,float,float,float,float) -> jniApplyForce
    void applyForceToCenter(com.badlogic.gdx.math.Vector2) -> applyForceToCenter
    void applyForceToCenter(float,float) -> applyForceToCenter
    void jniApplyForceToCenter(long,float,float) -> jniApplyForceToCenter
    void applyTorque(float) -> applyTorque
    void jniApplyTorque(long,float) -> jniApplyTorque
    void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyLinearImpulse
    void applyLinearImpulse(float,float,float,float) -> applyLinearImpulse
    void jniApplyLinearImpulse(long,float,float,float,float) -> jniApplyLinearImpulse
    void applyAngularImpulse(float) -> applyAngularImpulse
    void jniApplyAngularImpulse(long,float) -> jniApplyAngularImpulse
    float getMass() -> getMass
    float jniGetMass(long) -> jniGetMass
    float getInertia() -> getInertia
    float jniGetInertia(long) -> jniGetInertia
    com.badlogic.gdx.physics.box2d.MassData getMassData() -> getMassData
    void jniGetMassData(long,float[]) -> jniGetMassData
    void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> setMassData
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    void resetMassData() -> resetMassData
    void jniResetMassData(long) -> jniResetMassData
    com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> getWorldPoint
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> getWorldVector
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> getLocalPoint
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> getLocalVector
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromWorldPoint
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromLocalPoint
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    float getLinearDamping() -> getLinearDamping
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    void setLinearDamping(float) -> setLinearDamping
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    float getAngularDamping() -> getAngularDamping
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    void setAngularDamping(float) -> setAngularDamping
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> setType
    void jniSetType(long,int) -> jniSetType
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> getType
    int jniGetType(long) -> jniGetType
    void setBullet(boolean) -> setBullet
    void jniSetBullet(long,boolean) -> jniSetBullet
    boolean isBullet() -> isBullet
    boolean jniIsBullet(long) -> jniIsBullet
    void setSleepingAllowed(boolean) -> setSleepingAllowed
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    boolean isSleepingAllowed() -> isSleepingAllowed
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    void setAwake(boolean) -> setAwake
    void jniSetAwake(long,boolean) -> jniSetAwake
    boolean isAwake() -> isAwake
    boolean jniIsAwake(long) -> jniIsAwake
    void setActive(boolean) -> setActive
    void jniSetActive(long,boolean) -> jniSetActive
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
    void setFixedRotation(boolean) -> setFixedRotation
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    boolean isFixedRotation() -> isFixedRotation
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    java.util.ArrayList getFixtureList() -> getFixtureList
    java.util.ArrayList getJointList() -> getJointList
    float getGravityScale() -> getGravityScale
    float jniGetGravityScale(long) -> jniGetGravityScale
    void setGravityScale(float) -> setGravityScale
    void jniSetGravityScale(long,float) -> jniSetGravityScale
    com.badlogic.gdx.physics.box2d.World getWorld() -> getWorld
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.BodyDef:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> type
    com.badlogic.gdx.math.Vector2 position -> position
    float angle -> angle
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    float angularVelocity -> angularVelocity
    float linearDamping -> linearDamping
    float angularDamping -> angularDamping
    boolean allowSleep -> allowSleep
    boolean awake -> awake
    boolean fixedRotation -> fixedRotation
    boolean bullet -> bullet
    boolean active -> active
    float gravityScale -> gravityScale
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> StaticBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> KinematicBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> DynamicBody
    int value -> value
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer -> com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer -> renderer
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> batch
    com.badlogic.gdx.math.Vector2[] vertices -> vertices
    com.badlogic.gdx.math.Vector2 lower -> lower
    com.badlogic.gdx.math.Vector2 upper -> upper
    boolean drawBodies -> drawBodies
    boolean drawJoints -> drawJoints
    boolean drawAABBs -> drawAABBs
    boolean drawInactiveBodies -> drawInactiveBodies
    com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE -> SHAPE_NOT_ACTIVE
    com.badlogic.gdx.graphics.Color SHAPE_STATIC -> SHAPE_STATIC
    com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC -> SHAPE_KINEMATIC
    com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE -> SHAPE_NOT_AWAKE
    com.badlogic.gdx.graphics.Color SHAPE_AWAKE -> SHAPE_AWAKE
    com.badlogic.gdx.graphics.Color JOINT_COLOR -> JOINT_COLOR
    com.badlogic.gdx.graphics.Color AABB_COLOR -> AABB_COLOR
    com.badlogic.gdx.math.Vector2 t -> t
    com.badlogic.gdx.math.Vector2 axis -> axis
    com.badlogic.gdx.math.Vector2 f -> f
    com.badlogic.gdx.math.Vector2 v -> v
    com.badlogic.gdx.math.Vector2 lv -> lv
    void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4) -> render
    void renderBodies(com.badlogic.gdx.physics.box2d.World) -> renderBodies
    void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform) -> drawAABB
    void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color) -> drawShape
    void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> drawSolidCircle
    void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color) -> drawSolidPolygon
    void drawJoint(com.badlogic.gdx.physics.box2d.Joint) -> drawJoint
    void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> drawSegment
    void drawContact(com.badlogic.gdx.physics.box2d.Contact) -> drawContact
    boolean isDrawBodies() -> isDrawBodies
    void setDrawBodies(boolean) -> setDrawBodies
    boolean isDrawJoints() -> isDrawJoints
    void setDrawJoints(boolean) -> setDrawJoints
    boolean isDrawAABBs() -> isDrawAABBs
    void setDrawAABBs(boolean) -> setDrawAABBs
    boolean isDrawInactiveBodies() -> isDrawInactiveBodies
    void setDrawInactiveBodies(boolean) -> setDrawInactiveBodies
    com.badlogic.gdx.math.Vector2 getAxis() -> getAxis
    void setAxis(com.badlogic.gdx.math.Vector2) -> setAxis
    void dispose() -> dispose
com.badlogic.gdx.physics.box2d.ChainShape -> com.badlogic.gdx.physics.box2d.ChainShape:
    float[] verts -> verts
    long newChainShape() -> newChainShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void createLoop(com.badlogic.gdx.math.Vector2[]) -> createLoop
    void jniCreateLoop(long,float[],int) -> jniCreateLoop
    void createChain(com.badlogic.gdx.math.Vector2[]) -> createChain
    void jniCreateChain(long,float[],int) -> jniCreateChain
    void setPrevVertex(com.badlogic.gdx.math.Vector2) -> setPrevVertex
    void setPrevVertex(float,float) -> setPrevVertex
    void jniSetPrevVertex(long,float,float) -> jniSetPrevVertex
    void setNextVertex(com.badlogic.gdx.math.Vector2) -> setNextVertex
    void setNextVertex(float,float) -> setNextVertex
    void jniSetNextVertex(long,float,float) -> jniSetNextVertex
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 position -> position
    long newCircleShape() -> newCircleShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> worldManifold
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> getWorldManifold
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    boolean isTouching() -> isTouching
    boolean jniIsTouching(long) -> jniIsTouching
    void setEnabled(boolean) -> setEnabled
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    boolean isEnabled() -> isEnabled
    boolean jniIsEnabled(long) -> jniIsEnabled
    com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> getFixtureA
    long jniGetFixtureA(long) -> jniGetFixtureA
    com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> getFixtureB
    long jniGetFixtureB(long) -> jniGetFixtureB
    int getChildIndexA() -> getChildIndexA
    int jniGetChildIndexA(long) -> jniGetChildIndexA
    int getChildIndexB() -> getChildIndexB
    int jniGetChildIndexB(long) -> jniGetChildIndexB
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void resetFriction() -> resetFriction
    void jniResetFriction(long) -> jniResetFriction
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void ResetRestitution() -> ResetRestitution
    void jniResetRestitution(long) -> jniResetRestitution
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.ContactFilter:
    boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> shouldCollide
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.ContactImpulse:
    com.badlogic.gdx.physics.box2d.World world -> world
    long addr -> addr
    float[] tmp -> tmp
    float[] normalImpulses -> normalImpulses
    float[] tangentImpulses -> tangentImpulses
    float[] getNormalImpulses() -> getNormalImpulses
    void jniGetNormalImpulses(long,float[]) -> jniGetNormalImpulses
    float[] getTangentImpulses() -> getTangentImpulses
    void jniGetTangentImpulses(long,float[]) -> jniGetTangentImpulses
    int getCount() -> getCount
    int jniGetCount(long) -> jniGetCount
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.ContactListener:
    void beginContact(com.badlogic.gdx.physics.box2d.Contact) -> beginContact
    void endContact(com.badlogic.gdx.physics.box2d.Contact) -> endContact
    void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold) -> preSolve
    void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse) -> postSolve
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.DestructionListener:
com.badlogic.gdx.physics.box2d.EdgeShape -> com.badlogic.gdx.physics.box2d.EdgeShape:
    float[] vertex -> vertex
    long newEdgeShape() -> newEdgeShape
    void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> set
    void set(float,float,float,float) -> set
    void jniSet(long,float,float,float,float) -> jniSet
    void getVertex1(com.badlogic.gdx.math.Vector2) -> getVertex1
    void jniGetVertex1(long,float[]) -> jniGetVertex1
    void getVertex2(com.badlogic.gdx.math.Vector2) -> getVertex2
    void jniGetVertex2(long,float[]) -> jniGetVertex2
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.Filter:
    short categoryBits -> categoryBits
    short maskBits -> maskBits
    short groupIndex -> groupIndex
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> body
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    java.lang.Object userData -> userData
    short[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
    void reset(com.badlogic.gdx.physics.box2d.Body,long) -> reset
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Shape getShape() -> getShape
    long jniGetShape(long) -> jniGetShape
    void setSensor(boolean) -> setSensor
    void jniSetSensor(long,boolean) -> jniSetSensor
    boolean isSensor() -> isSensor
    boolean jniIsSensor(long) -> jniIsSensor
    void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> setFilterData
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    com.badlogic.gdx.physics.box2d.Filter getFilterData() -> getFilterData
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    void refilter() -> refilter
    void jniRefilter(long) -> jniRefilter
    com.badlogic.gdx.physics.box2d.Body getBody() -> getBody
    boolean testPoint(com.badlogic.gdx.math.Vector2) -> testPoint
    boolean testPoint(float,float) -> testPoint
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    void setDensity(float) -> setDensity
    void jniSetDensity(long,float) -> jniSetDensity
    float getDensity() -> getDensity
    float jniGetDensity(long) -> jniGetDensity
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.FixtureDef:
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    float friction -> friction
    float restitution -> restitution
    float density -> density
    boolean isSensor -> isSensor
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> jointEdgeA
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> jointEdgeB
    com.badlogic.gdx.math.Vector2 anchorA -> anchorA
    com.badlogic.gdx.math.Vector2 anchorB -> anchorB
    com.badlogic.gdx.math.Vector2 reactionForce -> reactionForce
    com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Body getBodyA() -> getBodyA
    long jniGetBodyA(long) -> jniGetBodyA
    com.badlogic.gdx.physics.box2d.Body getBodyB() -> getBodyB
    long jniGetBodyB(long) -> jniGetBodyB
    com.badlogic.gdx.math.Vector2 getAnchorA() -> getAnchorA
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    com.badlogic.gdx.math.Vector2 getAnchorB() -> getAnchorB
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    com.badlogic.gdx.math.Vector2 getReactionForce(float) -> getReactionForce
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    float getReactionTorque(float) -> getReactionTorque
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.JointDef:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> type
    com.badlogic.gdx.physics.box2d.Body bodyA -> bodyA
    com.badlogic.gdx.physics.box2d.Body bodyB -> bodyB
    boolean collideConnected -> collideConnected
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.JointDef$JointType:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> Unknown
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> RevoluteJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> PrismaticJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> DistanceJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> PulleyJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> MouseJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> GearJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint -> WheelJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> WeldJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> FrictionJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint -> RopeJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> valueTypes
    int value -> value
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.JointEdge:
    com.badlogic.gdx.physics.box2d.Body other -> other
    com.badlogic.gdx.physics.box2d.Joint joint -> joint
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.Manifold:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> points
    com.badlogic.gdx.math.Vector2 localNormal -> localNormal
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    int[] tmpInt -> tmpInt
    float[] tmpFloat -> tmpFloat
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType() -> getType
    int jniGetType(long) -> jniGetType
    int getPointCount() -> getPointCount
    int jniGetPointCount(long) -> jniGetPointCount
    com.badlogic.gdx.math.Vector2 getLocalNormal() -> getLocalNormal
    void jniGetLocalNormal(long,float[]) -> jniGetLocalNormal
    com.badlogic.gdx.math.Vector2 getLocalPoint() -> getLocalPoint
    void jniGetLocalPoint(long,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints() -> getPoints
    int jniGetPoint(long,float[],int) -> jniGetPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint:
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    float normalImpulse -> normalImpulse
    float tangentImpulse -> tangentImpulse
    int contactID -> contactID
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> this$0
    java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldType:
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle -> Circle
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA -> FaceA
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB -> FaceB
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values() -> values
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.MassData:
    float mass -> mass
    com.badlogic.gdx.math.Vector2 center -> center
    float I -> I
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> verts
    long newPolygonShape() -> newPolygonShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void set(com.badlogic.gdx.math.Vector2[]) -> set
    void jniSet(long,float[],int) -> jniSet
    void setAsBox(float,float) -> setAsBox
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> setAsBox
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.QueryCallback:
    boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture) -> reportFixture
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.RayCastCallback:
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    float getRadius() -> getRadius
    float jniGetRadius(long) -> jniGetRadius
    void setRadius(float) -> setRadius
    void jniSetRadius(long,float) -> jniSetRadius
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
    int getChildCount() -> getChildCount
    int jniGetChildCount(long) -> jniGetChildCount
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.Shape$Type:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> Circle
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> Polygon
    com.badlogic.gdx.physics.box2d.Shape$Type Edge -> Edge
    com.badlogic.gdx.physics.box2d.Shape$Type Chain -> Chain
    com.badlogic.gdx.physics.box2d.Shape$Type[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.Transform:
    int POS_X -> POS_X
    int POS_Y -> POS_Y
    int COS -> COS
    int SIN -> SIN
    float[] vals -> vals
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> mul
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    com.badlogic.gdx.utils.Pool freeBodies -> freeBodies
    com.badlogic.gdx.utils.Pool freeFixtures -> freeFixtures
    long addr -> addr
    com.badlogic.gdx.utils.LongMap bodies -> bodies
    com.badlogic.gdx.utils.LongMap fixtures -> fixtures
    com.badlogic.gdx.utils.LongMap joints -> joints
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> contactFilter
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> contactListener
    float[] tmpGravity -> tmpGravity
    com.badlogic.gdx.math.Vector2 gravity -> gravity
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> queryCallback
    long[] contactAddrs -> contactAddrs
    java.util.ArrayList contacts -> contacts
    java.util.ArrayList freeContacts -> freeContacts
    com.badlogic.gdx.physics.box2d.Contact contact -> contact
    com.badlogic.gdx.physics.box2d.Manifold manifold -> manifold
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> impulse
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> rayCastCallback
    com.badlogic.gdx.math.Vector2 rayPoint -> rayPoint
    com.badlogic.gdx.math.Vector2 rayNormal -> rayNormal
    long newWorld(float,float,boolean) -> newWorld
    void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener) -> setDestructionListener
    void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> setContactFilter
    void setUseDefaultContactFilter(boolean) -> setUseDefaultContactFilter
    void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> setContactListener
    com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> createBody
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> destroyBody
    void jniDestroyBody(long,long) -> jniDestroyBody
    com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createJoint
    long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createProperJoint
    long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float) -> jniCreateWheelJoint
    long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateRopeJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> destroyJoint
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    void step(float,int,int) -> step
    void jniStep(long,float,int,int) -> jniStep
    void clearForces() -> clearForces
    void jniClearForces(long) -> jniClearForces
    void setWarmStarting(boolean) -> setWarmStarting
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    void setContinuousPhysics(boolean) -> setContinuousPhysics
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    int getProxyCount() -> getProxyCount
    int jniGetProxyCount(long) -> jniGetProxyCount
    int getBodyCount() -> getBodyCount
    int jniGetBodyCount(long) -> jniGetBodyCount
    int getJointCount() -> getJointCount
    int jniGetJointcount(long) -> jniGetJointcount
    int getContactCount() -> getContactCount
    int jniGetContactCount(long) -> jniGetContactCount
    void setGravity(com.badlogic.gdx.math.Vector2) -> setGravity
    void jniSetGravity(long,float,float) -> jniSetGravity
    com.badlogic.gdx.math.Vector2 getGravity() -> getGravity
    void jniGetGravity(long,float[]) -> jniGetGravity
    boolean isLocked() -> isLocked
    boolean jniIsLocked(long) -> jniIsLocked
    void setAutoClearForces(boolean) -> setAutoClearForces
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    boolean getAutoClearForces() -> getAutoClearForces
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> QueryAABB
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    java.util.List getContactList() -> getContactList
    java.util.Iterator getBodies() -> getBodies
    java.util.Iterator getJoints() -> getJoints
    void jniGetContactList(long,long[]) -> jniGetContactList
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    boolean contactFilter(long,long) -> contactFilter
    void beginContact(long) -> beginContact
    void endContact(long) -> endContact
    void preSolve(long,long) -> preSolve
    void postSolve(long,long) -> postSolve
    boolean reportFixture(long) -> reportFixture
    void setVelocityThreshold(float) -> setVelocityThreshold
    float getVelocityThreshold() -> getVelocityThreshold
    void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> rayCast
    void jniRayCast(long,float,float,float,float) -> jniRayCast
    float reportRayFixture(long,float,float,float,float,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.World$1 -> com.badlogic.gdx.physics.box2d.World$1:
    com.badlogic.gdx.physics.box2d.World this$0 -> this$0
    com.badlogic.gdx.physics.box2d.Body newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.World$2 -> com.badlogic.gdx.physics.box2d.World$2:
    com.badlogic.gdx.physics.box2d.World this$0 -> this$0
    com.badlogic.gdx.physics.box2d.Fixture newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.WorldManifold:
    com.badlogic.gdx.math.Vector2 normal -> normal
    com.badlogic.gdx.math.Vector2[] points -> points
    int numContactPoints -> numContactPoints
    com.badlogic.gdx.math.Vector2 getNormal() -> getNormal
    com.badlogic.gdx.math.Vector2[] getPoints() -> getPoints
    int getNumberOfContactPoints() -> getNumberOfContactPoints
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    void setLength(float) -> setLength
    void jniSetLength(long,float) -> jniSetLength
    float getLength() -> getLength
    float jniGetLength(long) -> jniGetLength
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float length -> length
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setMaxTorque(float) -> setMaxTorque
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    float getMaxTorque() -> getMaxTorque
    float jniGetMaxTorque(long) -> jniGetMaxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxForce -> maxForce
    float maxTorque -> maxTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.GearJoint:
    void setRatio(float) -> setRatio
    void jniSetRatio(long,float) -> jniSetRatio
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.GearJointDef:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> joint1
    com.badlogic.gdx.physics.box2d.Joint joint2 -> joint2
    float ratio -> ratio
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 target -> target
    void setTarget(com.badlogic.gdx.math.Vector2) -> setTarget
    void jniSetTarget(long,float,float) -> jniSetTarget
    com.badlogic.gdx.math.Vector2 getTarget() -> getTarget
    void jniGetTarget(long,float[]) -> jniGetTarget
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.MouseJointDef:
    com.badlogic.gdx.math.Vector2 target -> target
    float maxForce -> maxForce
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorForce(float) -> setMaxMotorForce
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    float getMotorForce(float) -> getMotorForce
    float jniGetMotorForce(long,float) -> jniGetMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> getGroundAnchorA
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> getGroundAnchorB
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    float getLength1() -> getLength1
    float jniGetLength1(long) -> jniGetLength1
    float getLength2() -> getLength2
    float jniGetLength2(long) -> jniGetLength2
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    float minPulleyLength -> minPulleyLength
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float lengthA -> lengthA
    float lengthB -> lengthB
    float ratio -> ratio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> initialize
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    float getJointAngle() -> getJointAngle
    float jniGetJointAngle(long) -> jniGetJointAngle
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMotorTorque(float) -> getMotorTorque
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerAngle -> lowerAngle
    float upperAngle -> upperAngle
    boolean enableMotor -> enableMotor
    float motorSpeed -> motorSpeed
    float maxMotorTorque -> maxMotorTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.RopeJoint -> com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    float getMaxLength() -> getMaxLength
    float jniGetMaxLength(long) -> jniGetMaxLength
com.badlogic.gdx.physics.box2d.joints.RopeJointDef -> com.badlogic.gdx.physics.box2d.joints.RopeJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxLength -> maxLength
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.WeldJoint:
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.WheelJoint -> com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMaxMotorTorque() -> getMaxMotorTorque
    float jniGetMaxMotorTorque(long) -> jniGetMaxMotorTorque
    float getMotorTorque(float) -> getMotorTorque
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
    void setSpringFrequencyHz(float) -> setSpringFrequencyHz
    void jniSetSpringFrequencyHz(long,float) -> jniSetSpringFrequencyHz
    float getSpringFrequencyHz() -> getSpringFrequencyHz
    float jniGetSpringFrequencyHz(long) -> jniGetSpringFrequencyHz
    void setSpringDampingRatio(float) -> setSpringDampingRatio
    void jniSetSpringDampingRatio(long,float) -> jniSetSpringDampingRatio
    float getSpringDampingRatio() -> getSpringDampingRatio
    float jniGetSpringDampingRatio(long) -> jniGetSpringDampingRatio
com.badlogic.gdx.physics.box2d.joints.WheelJointDef -> com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    boolean enableMotor -> enableMotor
    float maxMotorTorque -> maxMotorTorque
    float motorSpeed -> motorSpeed
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.Action:
    com.badlogic.gdx.scenes.scene2d.OnActionCompleted listener -> listener
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void act(float) -> act
    boolean isDone() -> isDone
    void finish() -> finish
    void callActionCompletedListener() -> callActionCompletedListener
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Action setCompletionListener(com.badlogic.gdx.scenes.scene2d.OnActionCompleted) -> setCompletionListener
    com.badlogic.gdx.scenes.scene2d.OnActionCompleted getCompletionListener() -> getCompletionListener
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.Actor:
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    java.lang.String name -> name
    boolean touchable -> touchable
    boolean visible -> visible
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.math.Vector3 rotationVector -> rotationVector
    com.badlogic.gdx.math.Quaternion quaternion -> quaternion
    com.badlogic.gdx.utils.PooledLinkedList actions -> actions
    boolean toRemove -> toRemove
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    boolean touchMoved(float,float) -> touchMoved
    boolean scrolled(int) -> scrolled
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean keyTyped(java.lang.String) -> keyTyped
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void toLocalCoordinates(com.badlogic.gdx.math.Vector2) -> toLocalCoordinates
    void remove() -> remove
    void act(float) -> act
    void action(com.badlogic.gdx.scenes.scene2d.Action) -> action
    void clearActions() -> clearActions
    java.lang.String toString() -> toString
    void markToRemove(boolean) -> markToRemove
    boolean isMarkedToRemove() -> isMarkedToRemove
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    void setRotationVector(float,float,float) -> setRotationVector
    void setRotationAngle(float,float,float) -> setRotationAngle
com.badlogic.gdx.scenes.scene2d.AnimationAction -> com.badlogic.gdx.scenes.scene2d.AnimationAction:
    float duration -> duration
    float invDuration -> invDuration
    float taken -> taken
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    boolean done -> done
    com.badlogic.gdx.scenes.scene2d.Interpolator interpolator -> interpolator
    boolean isDone() -> isDone
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.AnimationAction setInterpolator(com.badlogic.gdx.scenes.scene2d.Interpolator) -> setInterpolator
    float createInterpolatedAlpha(float) -> createInterpolatedAlpha
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.CompositeAction -> com.badlogic.gdx.scenes.scene2d.CompositeAction:
    java.util.ArrayList actions -> actions
    java.util.ArrayList getActions() -> getActions
com.badlogic.gdx.scenes.scene2d.Cullable -> com.badlogic.gdx.scenes.scene2d.Cullable:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.Group:
    com.badlogic.gdx.graphics.Texture debugTexture -> debugTexture
    boolean debug -> debug
    java.util.List children -> children
    java.util.List immutableChildren -> immutableChildren
    java.util.List groups -> groups
    java.util.List immutableGroups -> immutableGroups
    com.badlogic.gdx.utils.ObjectMap namesToActors -> namesToActors
    com.badlogic.gdx.math.Matrix4 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix4 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 batchTransform -> batchTransform
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> oldBatchTransform
    boolean transform -> transform
    com.badlogic.gdx.scenes.scene2d.Actor lastTouchedChild -> lastTouchedChild
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    com.badlogic.gdx.math.Vector2 point -> point
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void drawChildren(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawChildren
    void drawChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawChild
    void applyTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> applyTransform
    com.badlogic.gdx.math.Matrix4 updateTransform() -> updateTransform
    void resetTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> resetTransform
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    boolean touchDown(float,float,int) -> touchDown
    boolean touchMoved(float,float) -> touchMoved
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void childrenChanged() -> childrenChanged
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    void removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void removeActorRecursive(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActorRecursive
    void setStage(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    boolean swapActor(int,int) -> swapActor
    boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    java.util.List getActors() -> getActors
    java.util.List getGroups() -> getGroups
    void clear() -> clear
    void sortChildren(java.util.Comparator) -> sortChildren
    void toLocalCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toLocalCoordinates
    boolean isDescendant(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendant
    void toChildCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,float,float,com.badlogic.gdx.math.Vector2) -> toChildCoordinates
    void enableDebugging(java.lang.String) -> enableDebugging
    void disableDebugging() -> disableDebugging
com.badlogic.gdx.scenes.scene2d.Interpolator -> com.badlogic.gdx.scenes.scene2d.Interpolator:
    float getInterpolation(float) -> getInterpolation
    void finished() -> finished
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.Layout -> com.badlogic.gdx.scenes.scene2d.Layout:
    void layout() -> layout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.OnActionCompleted -> com.badlogic.gdx.scenes.scene2d.OnActionCompleted:
    void completed(com.badlogic.gdx.scenes.scene2d.Action) -> completed
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.Stage:
    float width -> width
    float height -> height
    float centerX -> centerX
    float centerY -> centerY
    boolean stretch -> stretch
    com.badlogic.gdx.scenes.scene2d.Group root -> root
    boolean ownsBatch -> ownsBatch
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> batch
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.scenes.scene2d.Actor[] touchFocus -> touchFocus
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> keyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> scrollFocus
    com.badlogic.gdx.math.Vector2 point -> point
    com.badlogic.gdx.math.Vector2 coords -> coords
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void setViewport(float,float,boolean) -> setViewport
    float width() -> width
    float height() -> height
    int left() -> left
    float right() -> right
    float top() -> top
    float bottom() -> bottom
    float centerX() -> centerX
    float centerY() -> centerY
    boolean isStretched() -> isStretched
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    java.util.List getActors() -> getActors
    java.util.List getGroups() -> getGroups
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchMoved(int,int) -> touchMoved
    boolean scrolled(int) -> scrolled
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean keyTyped(java.lang.String) -> keyTyped
    void act(float) -> act
    void draw() -> draw
    void dispose() -> dispose
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    java.lang.String graphToString() -> graphToString
    void graphToString(java.lang.StringBuilder,com.badlogic.gdx.scenes.scene2d.Actor,int) -> graphToString
    com.badlogic.gdx.scenes.scene2d.Group getRoot() -> getRoot
    com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch() -> getSpriteBatch
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.scenes.scene2d.Actor getLastTouchedChild() -> getLastTouchedChild
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void toStageCoordinates(int,int,com.badlogic.gdx.math.Vector2) -> toStageCoordinates
    void clear() -> clear
    void removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void unfocusAll() -> unfocusAll
    void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> unfocus
    void unfocus(com.badlogic.gdx.scenes.scene2d.Actor,int) -> unfocus
    void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> getKeyboardFocus
    void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setScrollFocus
    com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> getScrollFocus
    void setTouchFocus(com.badlogic.gdx.scenes.scene2d.Actor,int) -> setTouchFocus
    com.badlogic.gdx.scenes.scene2d.Actor getTouchFocus(int) -> getTouchFocus
com.badlogic.gdx.scenes.scene2d.TemporalAction -> com.badlogic.gdx.scenes.scene2d.TemporalAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool -> com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool:
    com.badlogic.gdx.scenes.scene2d.Action obtain() -> obtain
    java.lang.Object obtain() -> obtain
com.badlogic.gdx.scenes.scene2d.actions.Delay -> com.badlogic.gdx.scenes.scene2d.actions.Delay:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    float taken -> taken
    float duration -> duration
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    com.badlogic.gdx.scenes.scene2d.actions.Delay $(com.badlogic.gdx.scenes.scene2d.Action,float) -> $
    com.badlogic.gdx.scenes.scene2d.actions.Delay $(float) -> $
    void reset() -> reset
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    boolean isDone() -> isDone
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
com.badlogic.gdx.scenes.scene2d.actions.Delay$1 -> com.badlogic.gdx.scenes.scene2d.actions.Delay$1:
    com.badlogic.gdx.scenes.scene2d.actions.Delay newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.FadeIn -> com.badlogic.gdx.scenes.scene2d.actions.FadeIn:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float startAlpha -> startAlpha
    float deltaAlpha -> deltaAlpha
    com.badlogic.gdx.scenes.scene2d.actions.FadeIn $(float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.FadeIn$1 -> com.badlogic.gdx.scenes.scene2d.actions.FadeIn$1:
    com.badlogic.gdx.scenes.scene2d.actions.FadeIn newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.FadeOut -> com.badlogic.gdx.scenes.scene2d.actions.FadeOut:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float startAlpha -> startAlpha
    float deltaAlpha -> deltaAlpha
    com.badlogic.gdx.scenes.scene2d.actions.FadeOut $(float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.FadeOut$1 -> com.badlogic.gdx.scenes.scene2d.actions.FadeOut$1:
    com.badlogic.gdx.scenes.scene2d.actions.FadeOut newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.FadeTo -> com.badlogic.gdx.scenes.scene2d.actions.FadeTo:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float toAlpha -> toAlpha
    float startAlpha -> startAlpha
    float deltaAlpha -> deltaAlpha
    com.badlogic.gdx.scenes.scene2d.actions.FadeTo $(float,float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.FadeTo$1 -> com.badlogic.gdx.scenes.scene2d.actions.FadeTo$1:
    com.badlogic.gdx.scenes.scene2d.actions.FadeTo newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.Forever -> com.badlogic.gdx.scenes.scene2d.actions.Forever:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    com.badlogic.gdx.scenes.scene2d.actions.Forever $(com.badlogic.gdx.scenes.scene2d.Action) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    boolean isDone() -> isDone
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
com.badlogic.gdx.scenes.scene2d.actions.Forever$1 -> com.badlogic.gdx.scenes.scene2d.actions.Forever$1:
    com.badlogic.gdx.scenes.scene2d.actions.Forever newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.MoveBy -> com.badlogic.gdx.scenes.scene2d.actions.MoveBy:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float initialX -> initialX
    float initialY -> initialY
    float x -> x
    float y -> y
    float startX -> startX
    float startY -> startY
    float deltaX -> deltaX
    float deltaY -> deltaY
    com.badlogic.gdx.scenes.scene2d.actions.MoveBy $(float,float,float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.MoveBy$1 -> com.badlogic.gdx.scenes.scene2d.actions.MoveBy$1:
    com.badlogic.gdx.scenes.scene2d.actions.MoveBy newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.MoveTo -> com.badlogic.gdx.scenes.scene2d.actions.MoveTo:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float x -> x
    float y -> y
    float startX -> startX
    float startY -> startY
    float deltaX -> deltaX
    float deltaY -> deltaY
    com.badlogic.gdx.scenes.scene2d.actions.MoveTo $(float,float,float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.MoveTo$1 -> com.badlogic.gdx.scenes.scene2d.actions.MoveTo$1:
    com.badlogic.gdx.scenes.scene2d.actions.MoveTo newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.Parallel -> com.badlogic.gdx.scenes.scene2d.actions.Parallel:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    boolean[] finished -> finished
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    com.badlogic.gdx.scenes.scene2d.actions.Parallel $(com.badlogic.gdx.scenes.scene2d.Action[]) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    boolean isDone() -> isDone
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
com.badlogic.gdx.scenes.scene2d.actions.Parallel$1 -> com.badlogic.gdx.scenes.scene2d.actions.Parallel$1:
    com.badlogic.gdx.scenes.scene2d.actions.Parallel newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.Remove -> com.badlogic.gdx.scenes.scene2d.actions.Remove:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    boolean removed -> removed
    com.badlogic.gdx.scenes.scene2d.actions.Remove $() -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    boolean isDone() -> isDone
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
com.badlogic.gdx.scenes.scene2d.actions.Remove$1 -> com.badlogic.gdx.scenes.scene2d.actions.Remove$1:
    com.badlogic.gdx.scenes.scene2d.actions.Remove newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.Repeat -> com.badlogic.gdx.scenes.scene2d.actions.Repeat:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    int times -> times
    int finishedTimes -> finishedTimes
    com.badlogic.gdx.scenes.scene2d.actions.Repeat $(com.badlogic.gdx.scenes.scene2d.Action,int) -> $
    void reset() -> reset
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    boolean isDone() -> isDone
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
com.badlogic.gdx.scenes.scene2d.actions.Repeat$1 -> com.badlogic.gdx.scenes.scene2d.actions.Repeat$1:
    com.badlogic.gdx.scenes.scene2d.actions.Repeat newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.RotateBy -> com.badlogic.gdx.scenes.scene2d.actions.RotateBy:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float rotation -> rotation
    float startRotation -> startRotation
    float deltaRotation -> deltaRotation
    com.badlogic.gdx.scenes.scene2d.actions.RotateBy $(float,float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.RotateBy$1 -> com.badlogic.gdx.scenes.scene2d.actions.RotateBy$1:
    com.badlogic.gdx.scenes.scene2d.actions.RotateBy newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.RotateTo -> com.badlogic.gdx.scenes.scene2d.actions.RotateTo:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float rotation -> rotation
    float startRotation -> startRotation
    float deltaRotation -> deltaRotation
    com.badlogic.gdx.scenes.scene2d.actions.RotateTo $(float,float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.RotateTo$1 -> com.badlogic.gdx.scenes.scene2d.actions.RotateTo$1:
    com.badlogic.gdx.scenes.scene2d.actions.RotateTo newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.ScaleTo -> com.badlogic.gdx.scenes.scene2d.actions.ScaleTo:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    float scaleX -> scaleX
    float scaleY -> scaleY
    float startScaleX -> startScaleX
    float startScaleY -> startScaleY
    float deltaScaleX -> deltaScaleX
    float deltaScaleY -> deltaScaleY
    com.badlogic.gdx.scenes.scene2d.actions.ScaleTo $(float,float,float) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
com.badlogic.gdx.scenes.scene2d.actions.ScaleTo$1 -> com.badlogic.gdx.scenes.scene2d.actions.ScaleTo$1:
    com.badlogic.gdx.scenes.scene2d.actions.ScaleTo newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.actions.Sequence -> com.badlogic.gdx.scenes.scene2d.actions.Sequence:
    com.badlogic.gdx.scenes.scene2d.actions.ActionResetingPool pool -> pool
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    int currAction -> currAction
    com.badlogic.gdx.scenes.scene2d.actions.Sequence $(com.badlogic.gdx.scenes.scene2d.Action[]) -> $
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void act(float) -> act
    boolean isDone() -> isDone
    void finish() -> finish
    com.badlogic.gdx.scenes.scene2d.Action copy() -> copy
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
com.badlogic.gdx.scenes.scene2d.actions.Sequence$1 -> com.badlogic.gdx.scenes.scene2d.actions.Sequence$1:
    com.badlogic.gdx.scenes.scene2d.actions.Sequence newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator -> com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator:
    float DEFAULT_FACTOR -> DEFAULT_FACTOR
    com.badlogic.gdx.utils.Pool pool -> pool
    float factor -> factor
    double doubledFactor -> doubledFactor
    com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator $(float) -> $
    com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator $() -> $
    void finished() -> finished
    float getInterpolation(float) -> getInterpolation
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator$1 -> com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator$1:
    com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateDecelerateInterpolator newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator -> com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator:
    float DEFAULT_FACTOR -> DEFAULT_FACTOR
    com.badlogic.gdx.utils.Pool pool -> pool
    float factor -> factor
    double doubledFactor -> doubledFactor
    com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator $(float) -> $
    com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator $() -> $
    void finished() -> finished
    float getInterpolation(float) -> getInterpolation
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator$1 -> com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator$1:
    com.badlogic.gdx.scenes.scene2d.interpolators.AccelerateInterpolator newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator -> com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator:
    float DEFAULT_TENSION -> DEFAULT_TENSION
    com.badlogic.gdx.utils.Pool pool -> pool
    float tension -> tension
    com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator $(float) -> $
    com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator $() -> $
    void finished() -> finished
    float getInterpolation(float) -> getInterpolation
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator$1 -> com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator$1:
    com.badlogic.gdx.scenes.scene2d.interpolators.AnticipateInterpolator newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator -> com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator:
    float DEFAULT_FACTOR -> DEFAULT_FACTOR
    com.badlogic.gdx.utils.Pool pool -> pool
    float factor -> factor
    double doubledFactor -> doubledFactor
    com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator $(float) -> $
    com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator $() -> $
    void finished() -> finished
    float getInterpolation(float) -> getInterpolation
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator$1 -> com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator$1:
    com.badlogic.gdx.scenes.scene2d.interpolators.DecelerateInterpolator newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.interpolators.LinearInterpolator -> com.badlogic.gdx.scenes.scene2d.interpolators.LinearInterpolator:
    com.badlogic.gdx.utils.Pool pool -> pool
    com.badlogic.gdx.scenes.scene2d.interpolators.LinearInterpolator $() -> $
    void finished() -> finished
    float getInterpolation(float) -> getInterpolation
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.interpolators.LinearInterpolator$1 -> com.badlogic.gdx.scenes.scene2d.interpolators.LinearInterpolator$1:
    com.badlogic.gdx.scenes.scene2d.interpolators.LinearInterpolator newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator -> com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator:
    float DEFAULT_FACTOR -> DEFAULT_FACTOR
    com.badlogic.gdx.utils.Pool pool -> pool
    float factor -> factor
    double doubledFactor -> doubledFactor
    com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator $(float) -> $
    com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator $() -> $
    void finished() -> finished
    float getInterpolation(float) -> getInterpolation
    com.badlogic.gdx.scenes.scene2d.Interpolator copy() -> copy
com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator$1 -> com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator$1:
    com.badlogic.gdx.scenes.scene2d.interpolators.OvershootInterpolator newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.ui.Align -> com.badlogic.gdx.scenes.scene2d.ui.Align:
    int CENTER -> CENTER
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int LEFT -> LEFT
    int RIGHT -> RIGHT
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    com.badlogic.gdx.scenes.scene2d.ui.ClickListener listener -> listener
    boolean isChecked -> isChecked
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    void initialize() -> initialize
    void setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    void setClickListener(com.badlogic.gdx.scenes.scene2d.ui.ClickListener) -> setClickListener
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    void click(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> click
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch down -> down
    com.badlogic.gdx.graphics.g2d.NinePatch up -> up
    com.badlogic.gdx.graphics.g2d.NinePatch checked -> checked
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    com.badlogic.gdx.scenes.scene2d.ui.ClickListener listener -> listener
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    void setChecked(java.lang.String) -> setChecked
    boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    void uncheckAll() -> uncheckAll
    com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    com.badlogic.gdx.utils.Array getButtons() -> getButtons
    void setMinCheckCount(int) -> setMinCheckCount
    void setMaxCheckCount(int) -> setMaxCheckCount
    void setClickListener(com.badlogic.gdx.scenes.scene2d.ui.ClickListener) -> setClickListener
    void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.graphics.g2d.TextureRegion checkboxOn -> checkboxOn
    com.badlogic.gdx.graphics.g2d.TextureRegion checkboxOff -> checkboxOff
com.badlogic.gdx.scenes.scene2d.ui.ClickListener -> com.badlogic.gdx.scenes.scene2d.ui.ClickListener:
    void click(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> click
com.badlogic.gdx.scenes.scene2d.ui.FlickScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.FlickScrollPane:
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.input.GestureDetector gestureDetector -> gestureDetector
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    float amountX -> amountX
    float amountY -> amountY
    float maxX -> maxX
    float maxY -> maxY
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    com.badlogic.gdx.scenes.scene2d.Actor touchFocusedChild -> touchFocusedChild
    boolean overscroll -> overscroll
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    com.badlogic.gdx.math.Interpolation overscrollInterpolation -> overscrollInterpolation
    boolean emptySpaceOnlyScroll -> emptySpaceOnlyScroll
    boolean forceOverscrollX -> forceOverscrollX
    boolean forceOverscrollY -> forceOverscrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    void clamp() -> clamp
    void act(float) -> act
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void cancelTouchFocusedChild() -> cancelTouchFocusedChild
    void touchDragged(float,float,int) -> touchDragged
    void setScrollX(float) -> setScrollX
    float getScrollX() -> getScrollX
    void setScrollY(float) -> setScrollY
    float getScrollY() -> getScrollY
    float getScrollPercentX() -> getScrollPercentX
    void setScrollPercentX(float) -> setScrollPercentX
    float getScrollPercentY() -> getScrollPercentY
    void setScrollPercentY(float) -> setScrollPercentY
    float getMaxX() -> getMaxX
    float getMaxY() -> getMaxY
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void removeActorRecursive(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActorRecursive
    boolean isPanning() -> isPanning
    boolean isFlinging() -> isFlinging
    void setVelocityX(float) -> setVelocityX
    float getVelocityX() -> getVelocityX
    void setVelocityY(float) -> setVelocityY
    float getVelocityY() -> getVelocityY
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void setOverscroll(boolean) -> setOverscroll
    void setupOverscroll(float,float,float) -> setupOverscroll
    void setForceOverscroll(boolean,boolean) -> setForceOverscroll
    void setFlingTime(float) -> setFlingTime
    void setEmptySpaceOnlyScroll(boolean) -> setEmptySpaceOnlyScroll
    void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    void setClamp(boolean) -> setClamp
com.badlogic.gdx.scenes.scene2d.ui.FlickScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.FlickScrollPane$1:
    com.badlogic.gdx.scenes.scene2d.ui.FlickScrollPane this$0 -> this$0
    boolean pan(int,int,int,int) -> pan
    boolean fling(float,float) -> fling
    boolean touchDown(int,int,int) -> touchDown
    boolean tap(int,int,int) -> tap
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    boolean longPress(int,int) -> longPress
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> patch
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.ui.ClickListener clickListener -> clickListener
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> setPatch
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> getPatch
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    void setAlign(int) -> setAlign
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    void setClickListener(com.badlogic.gdx.scenes.scene2d.ui.ClickListener) -> setClickListener
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    float getImageWidth() -> getImageWidth
    float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.graphics.g2d.TextureRegion regionUp -> regionUp
    com.badlogic.gdx.graphics.g2d.TextureRegion regionDown -> regionDown
    com.badlogic.gdx.graphics.g2d.TextureRegion regionChecked -> regionChecked
    com.badlogic.gdx.graphics.g2d.NinePatch patchUp -> patchUp
    com.badlogic.gdx.graphics.g2d.NinePatch patchDown -> patchDown
    com.badlogic.gdx.graphics.g2d.NinePatch patchChecked -> patchChecked
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    java.lang.CharSequence text -> text
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    int labelAlign -> labelAlign
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> getTextBounds
    void setWrap(boolean) -> setWrap
    void setAlignment(int) -> setAlignment
    void setAlignment(int,int) -> setAlignment
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void computeBounds() -> computeBounds
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    java.lang.String[] items -> items
    int selected -> selected
    com.badlogic.gdx.scenes.scene2d.ui.SelectionListener listener -> listener
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    java.lang.String getSelection() -> getSelection
    int setSelection(java.lang.String) -> setSelection
    void setItems(java.lang.Object[]) -> setItems
    java.lang.String[] getItems() -> getItems
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setSelectionListener(com.badlogic.gdx.scenes.scene2d.ui.SelectionListener) -> setSelectionListener
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.graphics.g2d.NinePatch selectedPatch -> selectedPatch
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    float amountX -> amountX
    float amountY -> amountY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float handlePosition -> handlePosition
    boolean disableX -> disableX
    boolean disableY -> disableY
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void removeActorRecursive(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActorRecursive
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void setScrollX(float) -> setScrollX
    float getScrollX() -> getScrollX
    void setScrollY(float) -> setScrollY
    float getScrollY() -> getScrollY
    float getScrollPercentX() -> getScrollPercentX
    void setScrollPercentX(float) -> setScrollPercentX
    float getScrollPercentY() -> getScrollPercentY
    void setScrollPercentY(float) -> setScrollPercentY
    float getMaxX() -> getMaxX
    float getMaxY() -> getMaxY
    void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch background -> background
    com.badlogic.gdx.graphics.g2d.NinePatch hScroll -> hScroll
    com.badlogic.gdx.graphics.g2d.NinePatch hScrollKnob -> hScrollKnob
    com.badlogic.gdx.graphics.g2d.NinePatch vScroll -> vScroll
    com.badlogic.gdx.graphics.g2d.NinePatch vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    java.lang.String[] items -> items
    int selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.math.Vector2 screenCoords -> screenCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList list -> list
    com.badlogic.gdx.scenes.scene2d.ui.SelectionListener listener -> listener
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.math.Vector2 stageCoords -> stageCoords
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    void setItems(java.lang.Object[]) -> setItems
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void setSelectionListener(com.badlogic.gdx.scenes.scene2d.ui.SelectionListener) -> setSelectionListener
    void setSelection(int) -> setSelection
    void setSelection(java.lang.String) -> setSelection
    int getSelectionIndex() -> getSelectionIndex
    java.lang.String getSelection() -> getSelection
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void markToRemove(boolean) -> markToRemove
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch background -> background
    com.badlogic.gdx.graphics.g2d.NinePatch listBackground -> listBackground
    com.badlogic.gdx.graphics.g2d.NinePatch listSelection -> listSelection
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    float itemSpacing -> itemSpacing
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList:
    com.badlogic.gdx.math.Vector2 oldScreenCoords -> oldScreenCoords
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    int selected -> selected
    boolean ownsTouch -> ownsTouch
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    boolean touchMoved(float,float) -> touchMoved
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectionListener -> com.badlogic.gdx.scenes.scene2d.ui.SelectionListener:
    void selected(com.badlogic.gdx.scenes.scene2d.Actor,int,java.lang.String) -> selected
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.utils.ObjectMap styles -> styles
    com.badlogic.gdx.graphics.Texture texture -> texture
    void load(com.badlogic.gdx.files.FileHandle) -> load
    void addResource(java.lang.String,java.lang.Object) -> addResource
    java.lang.Object getResource(java.lang.String,java.lang.Class) -> getResource
    boolean hasResource(java.lang.String,java.lang.Class) -> hasResource
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    void addStyle(java.lang.String,java.lang.Object) -> addStyle
    java.lang.Object getStyle(java.lang.Class) -> getStyle
    java.lang.Object getStyle(java.lang.String,java.lang.Class) -> getStyle
    boolean hasStyle(java.lang.String,java.lang.Class) -> hasStyle
    java.lang.String findStyleName(java.lang.Object) -> findStyleName
    void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    com.badlogic.gdx.graphics.g2d.NinePatch newTintedPatch(java.lang.String,java.lang.String) -> newTintedPatch
    com.badlogic.gdx.graphics.g2d.NinePatch newTintedPatch(java.lang.String,com.badlogic.gdx.graphics.Color) -> newTintedPatch
    com.badlogic.gdx.graphics.g2d.NinePatch newTintedRegion(java.lang.String,java.lang.String) -> newTintedRegion
    com.badlogic.gdx.graphics.g2d.NinePatch newTintedRegion(java.lang.String,com.badlogic.gdx.graphics.Color) -> newTintedRegion
    java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void dispose() -> dispose
    void save(com.badlogic.gdx.files.FileHandle) -> save
    com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    void write(com.badlogic.gdx.utils.Json,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.Class) -> write
    com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void readTypeMap(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.ObjectMap,boolean) -> readTypeMap
    void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.ObjectMap,boolean) -> readNamedObjects
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
com.badlogic.gdx.scenes.scene2d.ui.Skin$1AliasWriter -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1AliasWriter:
    com.badlogic.gdx.utils.ObjectMap map -> map
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    void write(com.badlogic.gdx.utils.Json,com.badlogic.gdx.graphics.g2d.TextureRegion,java.lang.Class) -> write
    com.badlogic.gdx.graphics.g2d.TextureRegion read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    void write(com.badlogic.gdx.utils.Json,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.Class) -> write
    com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    void write(com.badlogic.gdx.utils.Json,com.badlogic.gdx.graphics.g2d.NinePatch,java.lang.Class) -> write
    com.badlogic.gdx.graphics.g2d.NinePatch read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    void write(com.badlogic.gdx.utils.Json,com.badlogic.gdx.graphics.Color,java.lang.Class) -> write
    com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
com.badlogic.gdx.scenes.scene2d.ui.Skin$6 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$6:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedNinePatch -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedNinePatch:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle style -> style
    float min -> min
    float max -> max
    float steps -> steps
    float value -> value
    float sliderPos -> sliderPos
    com.badlogic.gdx.scenes.scene2d.ui.Slider$ValueChangedListener listener -> listener
    boolean isDragging -> isDragging
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    void calculatePositionAndValue(float) -> calculatePositionAndValue
    boolean isDragging() -> isDragging
    void setValueChangedListener(com.badlogic.gdx.scenes.scene2d.ui.Slider$ValueChangedListener) -> setValueChangedListener
    float getValue() -> getValue
    void setValue(float) -> setValue
    void setRange(float,float) -> setRange
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch slider -> slider
    com.badlogic.gdx.graphics.g2d.TextureRegion knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Slider$ValueChangedListener -> com.badlogic.gdx.scenes.scene2d.ui.Slider$ValueChangedListener:
    void changed(com.badlogic.gdx.scenes.scene2d.ui.Slider,float) -> changed
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    boolean touchDrag -> touchDrag
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setVertical(boolean) -> setVertical
    void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    void setSplitAmount(float) -> setSplitAmount
    float getSplit() -> getSplit
    void setMinSplitAmount(float) -> setMinSplitAmount
    void setMaxSplitAmount(float) -> setMaxSplitAmount
    void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void removeActorRecursive(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActorRecursive
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String text -> text
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    int cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.ui.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    com.badlogic.gdx.math.Rectangle fieldBounds -> fieldBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    com.badlogic.gdx.math.Rectangle scissor -> scissor
    float renderOffset -> renderOffset
    float textOffset -> textOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> glyphAdvances
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    boolean cursorOn -> cursorOn
    float blinkTime -> blinkTime
    long lastBlink -> lastBlink
    boolean hasSelection -> hasSelection
    int selectionStart -> selectionStart
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    char passwordCharacter -> passwordCharacter
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    void setPasswordCharacter(char) -> setPasswordCharacter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    void layout() -> layout
    void calculateOffsets() -> calculateOffsets
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void updateDisplayText() -> updateDisplayText
    void blink() -> blink
    boolean touchDown(float,float,int) -> touchDown
    boolean keyDown(int) -> keyDown
    void copy() -> copy
    void paste() -> paste
    void delete() -> delete
    boolean keyTyped(char) -> keyTyped
    void next(boolean) -> next
    com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(java.util.List,com.badlogic.gdx.scenes.scene2d.ui.TextField,boolean) -> findNextTextField
    void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    java.lang.String getMessageText() -> getMessageText
    void setMessageText(java.lang.String) -> setMessageText
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setSelection(int,int) -> setSelection
    void clearSelection() -> clearSelection
    void setCursorPosition(int) -> setCursorPosition
    int getCursorPosition() -> getCursorPosition
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    void setClipboard(com.badlogic.gdx.scenes.scene2d.ui.utils.Clipboard) -> setClipboard
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setPasswordMode(boolean) -> setPasswordMode
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch background -> background
    com.badlogic.gdx.graphics.g2d.NinePatch cursor -> cursor
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.g2d.TextureRegion selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void invalidate() -> invalidate
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidateHierarchy() -> invalidateHierarchy
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void layout() -> layout
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void touchDragged(float,float,int) -> touchDragged
    void toScreenCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toScreenCoordinates
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void invalidate() -> invalidate
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidateHierarchy() -> invalidateHierarchy
    void childrenChanged() -> childrenChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    java.lang.String title -> title
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> titleCache
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    com.badlogic.gdx.math.Vector2 dragOffset -> dragOffset
    boolean dragging -> dragging
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    int getTitleBarHeight() -> getTitleBarHeight
    void layout() -> layout
    void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    boolean touchDown(float,float,int) -> touchDown
    void touchDragged(float,float,int) -> touchDragged
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setMovable(boolean) -> setMovable
    void setModal(boolean) -> setModal
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.graphics.g2d.NinePatch background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit -> com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit:
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit instance -> instance
    boolean drawDebug -> drawDebug
    com.badlogic.gdx.scenes.scene2d.Actor wrap(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout,java.lang.Object) -> wrap
    com.badlogic.gdx.scenes.scene2d.Actor newWidget(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout,java.lang.String) -> newWidget
    com.badlogic.gdx.scenes.scene2d.Actor newInstance(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout,java.lang.String) -> newInstance
    void setProperty(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout,com.badlogic.gdx.scenes.scene2d.Actor,java.lang.String,java.util.List) -> setProperty
    java.lang.Object convertType(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String) -> convertType
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table newTable(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table) -> newTable
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout getLayout(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table) -> getLayout
    com.badlogic.gdx.scenes.scene2d.Actor newStack() -> newStack
    void addChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,java.lang.String) -> addChild
    void removeChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> removeChild
    int getMinWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinWidth
    int getMinHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinHeight
    int getPrefWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefWidth
    int getPrefHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefHeight
    int getMaxWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxWidth
    int getMaxHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxHeight
    void clearDebugRectangles(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout) -> clearDebugRectangles
    void addDebugRectangle(com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout,int,int,int,int,int) -> addDebugRectangle
    int getMinHeight(java.lang.Object) -> getMinHeight
    int getMaxHeight(java.lang.Object) -> getMaxHeight
    java.lang.Object convertType(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String) -> convertType
    java.lang.Object newTable(java.lang.Object) -> newTable
    int getPrefHeight(java.lang.Object) -> getPrefHeight
    void setProperty(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.String,java.util.List) -> setProperty
    void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,int,int,int,int,int) -> addDebugRectangle
    java.lang.Object newInstance(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> newInstance
    void addChild(java.lang.Object,java.lang.Object,java.lang.String) -> addChild
    com.esotericsoftware.tablelayout.BaseTableLayout getLayout(java.lang.Object) -> getLayout
    int getMaxWidth(java.lang.Object) -> getMaxWidth
    java.lang.Object wrap(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object) -> wrap
    java.lang.Object newWidget(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> newWidget
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    int getPrefWidth(java.lang.Object) -> getPrefWidth
    int getMinWidth(java.lang.Object) -> getMinWidth
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    java.lang.Object newStack() -> newStack
com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit$1 -> com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit$1:
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit this$0 -> this$0
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float) -> hit
com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.tablelayout.LibgdxToolkit$DebugRect:
    int type -> type
com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table -> com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table:
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout layout -> layout
    com.badlogic.gdx.graphics.g2d.NinePatch backgroundPatch -> backgroundPatch
    com.badlogic.gdx.math.Rectangle tableBounds -> tableBounds
    com.badlogic.gdx.math.Rectangle scissors -> scissors
    com.badlogic.gdx.scenes.scene2d.ui.ClickListener listener -> listener
    boolean clip -> clip
    boolean isPressed -> isPressed
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    void calculateScissors(com.badlogic.gdx.math.Matrix4) -> calculateScissors
    void invalidate() -> invalidate
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setBackground(com.badlogic.gdx.graphics.g2d.NinePatch) -> setBackground
    com.badlogic.gdx.graphics.g2d.NinePatch getBackgroundPatch() -> getBackgroundPatch
    void setClip(boolean) -> setClip
    void setClickListener(com.badlogic.gdx.scenes.scene2d.ui.ClickListener) -> setClickListener
    com.badlogic.gdx.scenes.scene2d.ui.ClickListener getClickListener() -> getClickListener
    boolean touchDown(float,float,int) -> touchDown
    void touchUp(float,float,int) -> touchUp
    void click(float,float) -> click
    int getRow(float) -> getRow
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout getTableLayout() -> getTableLayout
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Actor register(java.lang.String,com.badlogic.gdx.scenes.scene2d.Actor) -> register
    com.esotericsoftware.tablelayout.Cell add(java.lang.String) -> add
    com.esotericsoftware.tablelayout.Cell add() -> add
    com.esotericsoftware.tablelayout.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table newTable() -> newTable
    com.esotericsoftware.tablelayout.Cell row() -> row
    void parse(com.badlogic.gdx.files.FileHandle) -> parse
    void parse(java.lang.String) -> parse
    com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    void layout() -> layout
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getWidget(java.lang.String) -> getWidget
    java.util.List getWidgets() -> getWidgets
    java.util.List getWidgets(java.lang.String) -> getWidgets
    com.esotericsoftware.tablelayout.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    com.esotericsoftware.tablelayout.Cell getCell(java.lang.String) -> getCell
    java.util.List getAllCells() -> getAllCells
    java.util.List getAllCells(java.lang.String) -> getAllCells
    java.util.List getCells() -> getCells
    void setWidget(java.lang.String,com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table size(java.lang.String,java.lang.String) -> size
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table width(java.lang.String) -> width
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table height(java.lang.String) -> height
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table size(int,int) -> size
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table width(int) -> width
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table height(int) -> height
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table pad(java.lang.String) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table pad(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padTop(java.lang.String) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padLeft(java.lang.String) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padBottom(java.lang.String) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padRight(java.lang.String) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table pad(int) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table pad(int,int,int,int) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padTop(int) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padLeft(int) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padBottom(int) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table padRight(int) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table align(java.lang.String) -> align
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table right() -> right
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table debug() -> debug
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table debug(int) -> debug
    com.badlogic.gdx.scenes.scene2d.ui.tablelayout.Table debug(java.lang.String) -> debug
    int getDebug() -> getDebug
    java.lang.String getHeight() -> getHeight
    java.lang.String getPadTop() -> getPadTop
    java.lang.String getPadLeft() -> getPadLeft
    java.lang.String getPadBottom() -> getPadBottom
    java.lang.String getPadRight() -> getPadRight
    int getAlign() -> getAlign
    void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage) -> drawDebug
    void drawDebug(java.util.List,com.badlogic.gdx.graphics.g2d.SpriteBatch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout -> com.badlogic.gdx.scenes.scene2d.ui.tablelayout.TableLayout:
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer -> debugRenderer
    com.badlogic.gdx.scenes.scene2d.Actor register(com.badlogic.gdx.scenes.scene2d.Actor) -> register
    com.badlogic.gdx.scenes.scene2d.Actor getWidget(java.lang.String) -> getWidget
    void layout() -> layout
    void invalidateHierarchy() -> invalidateHierarchy
    void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toStageCoordinates
    void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> drawDebug
    java.lang.Object getWidget(java.lang.String) -> getWidget
com.badlogic.gdx.scenes.scene2d.ui.utils.AndroidClipboard -> com.badlogic.gdx.scenes.scene2d.ui.utils.AndroidClipboard:
    java.lang.String contents -> contents
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.scenes.scene2d.ui.utils.Clipboard -> com.badlogic.gdx.scenes.scene2d.ui.utils.Clipboard:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
    com.badlogic.gdx.scenes.scene2d.ui.utils.Clipboard getDefaultClipboard() -> getDefaultClipboard
com.badlogic.gdx.scenes.scene2d.ui.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.ui.utils.ScissorStack:
    com.badlogic.gdx.utils.Array scissors -> scissors
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Rectangle viewport -> viewport
    boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> pushScissors
    void popScissors() -> popScissors
    void fix(com.badlogic.gdx.math.Rectangle) -> fix
    void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Rectangle getViewport() -> getViewport
    void toWindowCoordinates(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector2) -> toWindowCoordinates
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.Array:
    java.lang.Object[] items -> items
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> iterator
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    boolean contains(java.lang.Object,boolean) -> contains
    int indexOf(java.lang.Object,boolean) -> indexOf
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    void clear() -> clear
    void shrink() -> shrink
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    java.lang.Object[] resize(int) -> resize
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    java.util.Iterator iterator() -> iterator
    void truncate(int) -> truncate
    java.lang.Object random() -> random
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.Array$ArrayIterable:
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> iterator
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.Array$ArrayIterator:
    com.badlogic.gdx.utils.Array array -> array
    int index -> index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.ArrayMap:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    boolean ordered -> ordered
    void put(java.lang.Object,java.lang.Object) -> put
    void addAll(com.badlogic.gdx.utils.ArrayMap) -> addAll
    void addAll(com.badlogic.gdx.utils.ArrayMap,int,int) -> addAll
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,boolean) -> get
    java.lang.Object getKey(java.lang.Object,boolean) -> getKey
    java.lang.Object getKeyAt(int) -> getKeyAt
    java.lang.Object getValueAt(int) -> getValueAt
    void setKey(int,java.lang.Object) -> setKey
    void setValue(int,java.lang.Object) -> setValue
    void insert(int,java.lang.Object,java.lang.Object) -> insert
    boolean containsKey(java.lang.Object,boolean) -> containsKey
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    int indexOfKey(java.lang.Object,boolean) -> indexOfKey
    int indexOfValue(java.lang.Object,boolean) -> indexOfValue
    java.lang.Object removeKey(java.lang.Object,boolean) -> removeKey
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    void removeIndex(int) -> removeIndex
    java.lang.Object peekKey() -> peekKey
    java.lang.Object peekValue() -> peekValue
    void clear() -> clear
    void shrink() -> shrink
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.AtomicQueue:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> writeIndex
    java.util.concurrent.atomic.AtomicInteger readIndex -> readIndex
    java.util.concurrent.atomic.AtomicReferenceArray queue -> queue
    int next(int) -> next
    boolean put(java.lang.Object) -> put
    java.lang.Object poll() -> poll
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.Base64Coder:
    java.lang.String systemLineSeparator -> systemLineSeparator
    char[] map1 -> map1
    byte[] map2 -> map2
    java.lang.String encodeString(java.lang.String) -> encodeString
    java.lang.String encodeLines(byte[]) -> encodeLines
    java.lang.String encodeLines(byte[],int,int,int,java.lang.String) -> encodeLines
    char[] encode(byte[]) -> encode
    char[] encode(byte[],int) -> encode
    char[] encode(byte[],int,int) -> encode
    java.lang.String decodeString(java.lang.String) -> decodeString
    byte[] decodeLines(java.lang.String) -> decodeLines
    byte[] decode(java.lang.String) -> decode
    byte[] decode(char[]) -> decode
    byte[] decode(char[],int,int) -> decode
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.BinaryHeap:
    int size -> size
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> nodes
    boolean isMaxHeap -> isMaxHeap
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node pop() -> pop
    void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> setValue
    void up(int) -> up
    void down(int) -> down
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.BinaryHeap$Node:
    float value -> value
    int index -> index
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.BooleanArray:
    boolean[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(boolean) -> add
    void addAll(com.badlogic.gdx.utils.BooleanArray) -> addAll
    void addAll(com.badlogic.gdx.utils.BooleanArray,int,int) -> addAll
    void addAll(boolean[]) -> addAll
    void addAll(boolean[],int,int) -> addAll
    boolean get(int) -> get
    void set(int,boolean) -> set
    void insert(int,boolean) -> insert
    boolean removeIndex(int) -> removeIndex
    boolean pop() -> pop
    boolean peek() -> peek
    void clear() -> clear
    void shrink() -> shrink
    boolean[] ensureCapacity(int) -> ensureCapacity
    boolean[] resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    boolean random() -> random
    boolean[] toArray() -> toArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> unsafeBuffers
    int allocatedUnsafe -> allocatedUnsafe
    void copy(float[],java.nio.Buffer,int,int) -> copy
    void copy(byte[],int,java.nio.Buffer,int) -> copy
    void copy(short[],int,java.nio.Buffer,int) -> copy
    void copy(char[],int,java.nio.Buffer,int) -> copy
    void copy(int[],int,java.nio.Buffer,int) -> copy
    void copy(long[],int,java.nio.Buffer,int) -> copy
    void copy(float[],int,java.nio.Buffer,int) -> copy
    void copy(double[],int,java.nio.Buffer,int) -> copy
    void copy(java.nio.Buffer,java.nio.Buffer,int) -> copy
    int positionInBytes(java.nio.Buffer) -> positionInBytes
    int bytesToElements(java.nio.Buffer,int) -> bytesToElements
    int elementsToBytes(java.nio.Buffer,int) -> elementsToBytes
    java.nio.FloatBuffer newFloatBuffer(int) -> newFloatBuffer
    java.nio.DoubleBuffer newDoubleBuffer(int) -> newDoubleBuffer
    java.nio.ByteBuffer newByteBuffer(int) -> newByteBuffer
    java.nio.ShortBuffer newShortBuffer(int) -> newShortBuffer
    java.nio.CharBuffer newCharBuffer(int) -> newCharBuffer
    java.nio.IntBuffer newIntBuffer(int) -> newIntBuffer
    java.nio.LongBuffer newLongBuffer(int) -> newLongBuffer
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> disposeUnsafeByteBuffer
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> newUnsafeByteBuffer
    int getAllocatedBytesUnsafe() -> getAllocatedBytesUnsafe
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.CharArray:
    char[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(char) -> add
    void addAll(com.badlogic.gdx.utils.CharArray) -> addAll
    void addAll(com.badlogic.gdx.utils.CharArray,int,int) -> addAll
    void addAll(char[]) -> addAll
    void addAll(char[],int,int) -> addAll
    char get(int) -> get
    void set(int,char) -> set
    void insert(int,char) -> insert
    boolean contains(char) -> contains
    int indexOf(char) -> indexOf
    boolean removeValue(char) -> removeValue
    char removeIndex(int) -> removeIndex
    char pop() -> pop
    char peek() -> peek
    void clear() -> clear
    void shrink() -> shrink
    char[] ensureCapacity(int) -> ensureCapacity
    char[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    char random() -> random
    char[] toArray() -> toArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.ComparableTimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],int,int) -> doSort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void binarySort(java.lang.Object[],int,int,int) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopLeft
    int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.Disposable:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.FloatArray:
    float[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(float) -> add
    void addAll(com.badlogic.gdx.utils.FloatArray) -> addAll
    void addAll(com.badlogic.gdx.utils.FloatArray,int,int) -> addAll
    void addAll(float[]) -> addAll
    void addAll(float[],int,int) -> addAll
    float get(int) -> get
    void set(int,float) -> set
    void insert(int,float) -> insert
    boolean contains(float) -> contains
    int indexOf(float) -> indexOf
    boolean removeValue(float) -> removeValue
    float removeIndex(int) -> removeIndex
    float pop() -> pop
    float peek() -> peek
    void clear() -> clear
    void shrink() -> shrink
    float[] ensureCapacity(int) -> ensureCapacity
    float[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    float random() -> random
    float[] toArray() -> toArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.GdxNativesLoader:
    boolean disableNativesLoading -> disableNativesLoading
    boolean nativesLoaded -> nativesLoaded
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean isMac -> isMac
    boolean is64Bit -> is64Bit
    java.io.File nativesDir -> nativesDir
    java.lang.String path -> path
    java.lang.String crc(java.lang.String) -> crc
    boolean loadLibrary(java.lang.String,java.lang.String) -> loadLibrary
    java.lang.String extractLibrary(java.lang.String,java.lang.String) -> extractLibrary
    void load() -> load
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.IdentityMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IdentityMap$Entries entries -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IdentityMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values() -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys() -> keys
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.IdentityMap$Entries:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> entry
    com.badlogic.gdx.utils.IdentityMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.IdentityMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.IdentityMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.IdentityMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IdentityMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.IdentityMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.IntArray:
    int[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    int get(int) -> get
    void set(int,int) -> set
    void insert(int,int) -> insert
    boolean contains(int) -> contains
    int indexOf(int) -> indexOf
    boolean removeValue(int) -> removeValue
    int removeIndex(int) -> removeIndex
    int pop() -> pop
    int peek() -> peek
    void clear() -> clear
    void shrink() -> shrink
    int[] ensureCapacity(int) -> ensureCapacity
    int[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    int random() -> random
    int[] toArray() -> toArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.IntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntMap$Entries entries -> entries
    com.badlogic.gdx.utils.IntMap$Values values -> values
    com.badlogic.gdx.utils.IntMap$Keys keys -> keys
    java.lang.Object put(int,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.IntMap) -> putAll
    void putResize(int,java.lang.Object) -> putResize
    void push(int,java.lang.Object,int,int,int,int,int,int) -> push
    void putStash(int,java.lang.Object) -> putStash
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    java.lang.Object getStash(int,java.lang.Object) -> getStash
    java.lang.Object remove(int) -> remove
    java.lang.Object removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(java.lang.Object,boolean,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntMap$Values values() -> values
    com.badlogic.gdx.utils.IntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.IntMap$Entries:
    com.badlogic.gdx.utils.IntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.IntMap$Entry:
    int key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.IntMap$Keys:
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.IntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.IntMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.Json:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    boolean ignoreUnknownFields -> ignoreUnknownFields
    void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.String getTag(java.lang.Class) -> getTag
    void setTypeName(java.lang.String) -> setTypeName
    void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    void setUsePrototypes(boolean) -> setUsePrototypes
    void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class) -> cacheFields
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    void writeFields(java.lang.Object) -> writeFields
    java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    void writeField(java.lang.Object,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    void writeValue(java.lang.String,java.lang.Object) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeObjectStart(java.lang.String) -> writeObjectStart
    void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectStart() -> writeObjectStart
    void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectEnd() -> writeObjectEnd
    void writeArrayStart(java.lang.String) -> writeArrayStart
    void writeArrayStart() -> writeArrayStart
    void writeArrayEnd() -> writeArrayEnd
    void writeType(java.lang.Class) -> writeType
    java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    void readField(java.lang.Object,java.lang.String,java.lang.Object) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object) -> readField
    void readFields(java.lang.Object,java.lang.Object) -> readFields
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Object) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
    java.lang.String convertToString(java.lang.Object) -> convertToString
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    void prettyPrint(java.lang.Object,java.lang.StringBuilder,int,int) -> prettyPrint
    boolean isFlat(com.badlogic.gdx.utils.ObjectMap) -> isFlat
    boolean isFlat(com.badlogic.gdx.utils.Array) -> isFlat
    void indent(int,java.lang.StringBuilder) -> indent
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.Json$FieldMetadata:
    java.lang.reflect.Field field -> field
    java.lang.Class elementType -> elementType
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.Json$Serializable:
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.OrderedMap) -> read
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.Json$Serializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.JsonReader:
    byte[] _json_actions -> _json_actions
    short[] _json_key_offsets -> _json_key_offsets
    char[] _json_trans_keys -> _json_trans_keys
    byte[] _json_single_lengths -> _json_single_lengths
    byte[] _json_range_lengths -> _json_range_lengths
    short[] _json_index_offsets -> _json_index_offsets
    byte[] _json_trans_targs -> _json_trans_targs
    byte[] _json_trans_actions -> _json_trans_actions
    byte[] _json_eof_actions -> _json_eof_actions
    int json_start -> json_start
    int json_first_final -> json_first_final
    int json_error -> json_error
    int json_en_object -> json_en_object
    int json_en_array -> json_en_array
    int json_en_main -> json_en_main
    com.badlogic.gdx.utils.Array elements -> elements
    java.lang.Object root -> root
    java.lang.Object current -> current
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.io.Reader) -> parse
    java.lang.Object parse(java.io.InputStream) -> parse
    java.lang.Object parse(com.badlogic.gdx.files.FileHandle) -> parse
    java.lang.Object parse(char[],int,int) -> parse
    byte[] init__json_actions_0() -> init__json_actions_0
    short[] init__json_key_offsets_0() -> init__json_key_offsets_0
    char[] init__json_trans_keys_0() -> init__json_trans_keys_0
    byte[] init__json_single_lengths_0() -> init__json_single_lengths_0
    byte[] init__json_range_lengths_0() -> init__json_range_lengths_0
    short[] init__json_index_offsets_0() -> init__json_index_offsets_0
    byte[] init__json_trans_targs_0() -> init__json_trans_targs_0
    byte[] init__json_trans_actions_0() -> init__json_trans_actions_0
    byte[] init__json_eof_actions_0() -> init__json_eof_actions_0
    void set(java.lang.String,java.lang.Object) -> set
    void startObject(java.lang.String) -> startObject
    void startArray(java.lang.String) -> startArray
    void pop() -> pop
    void string(java.lang.String,java.lang.String) -> string
    void number(java.lang.String,float) -> number
    void bool(java.lang.String,boolean) -> bool
    java.lang.String unescape(java.lang.String) -> unescape
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.JsonWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.JsonWriter object() -> object
    com.badlogic.gdx.utils.JsonWriter array() -> array
    com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> set
    com.badlogic.gdx.utils.JsonWriter pop() -> pop
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean array -> array
    boolean needsComma -> needsComma
    com.badlogic.gdx.utils.JsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.JsonWriter$OutputType:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> json
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> javascript
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> minimal
    java.util.regex.Pattern javascriptPattern -> javascriptPattern
    java.util.regex.Pattern minimalPattern -> minimalPattern
    int[] $SWITCH_TABLE$com$badlogic$gdx$utils$JsonWriter$OutputType -> $SWITCH_TABLE$com$badlogic$gdx$utils$JsonWriter$OutputType
    com.badlogic.gdx.utils.JsonWriter$OutputType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String quoteValue(java.lang.String) -> quoteValue
    java.lang.String quoteName(java.lang.String) -> quoteName
    com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$badlogic$gdx$utils$JsonWriter$OutputType() -> $SWITCH_TABLE$com$badlogic$gdx$utils$JsonWriter$OutputType
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.LittleEndianInputStream:
    java.io.DataInputStream din -> din
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.Logger:
    int NONE -> NONE
    int ERROR -> ERROR
    int INFO -> INFO
    int DEBUG -> DEBUG
    java.lang.String tag -> tag
    int level -> level
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Exception) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Exception) -> info
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.LongArray:
    long[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(long) -> add
    void addAll(com.badlogic.gdx.utils.LongArray) -> addAll
    void addAll(com.badlogic.gdx.utils.LongArray,int,int) -> addAll
    void addAll(long[]) -> addAll
    void addAll(long[],int,int) -> addAll
    long get(int) -> get
    void set(int,long) -> set
    void insert(int,long) -> insert
    boolean contains(long) -> contains
    int indexOf(long) -> indexOf
    boolean removeValue(long) -> removeValue
    long removeIndex(int) -> removeIndex
    long pop() -> pop
    long peek() -> peek
    void clear() -> clear
    void shrink() -> shrink
    long[] ensureCapacity(int) -> ensureCapacity
    long[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    long random() -> random
    long[] toArray() -> toArray
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    long[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.LongMap$Entries entries -> entries
    com.badlogic.gdx.utils.LongMap$Values values -> values
    com.badlogic.gdx.utils.LongMap$Keys keys -> keys
    java.lang.Object put(long,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.LongMap) -> putAll
    void putResize(long,java.lang.Object) -> putResize
    void push(long,java.lang.Object,int,long,int,long,int,long) -> push
    void putStash(long,java.lang.Object) -> putStash
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    java.lang.Object getStash(long,java.lang.Object) -> getStash
    java.lang.Object remove(long) -> remove
    java.lang.Object removeStash(long) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(long) -> containsKey
    boolean containsKeyStash(long) -> containsKeyStash
    long findKey(java.lang.Object,boolean,long) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.LongMap$Entries entries() -> entries
    com.badlogic.gdx.utils.LongMap$Values values() -> values
    com.badlogic.gdx.utils.LongMap$Keys keys() -> keys
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    long next() -> next
    com.badlogic.gdx.utils.LongArray toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.LongMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.LongMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.NumberUtils:
    int floatToIntBits(float) -> floatToIntBits
    int floatToRawIntBits(float) -> floatToRawIntBits
    int floatToIntColor(float) -> floatToIntColor
    float intToFloatColor(int) -> intToFloatColor
    float intBitsToFloat(int) -> intBitsToFloat
    long doubleToLongBits(double) -> doubleToLongBits
    double longBitsToDouble(long) -> longBitsToDouble
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.ObjectIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys -> keys
    void put(java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> putAll
    void putResize(java.lang.Object,int) -> putResize
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,int) -> putStash
    int get(java.lang.Object,int) -> get
    int getStash(java.lang.Object,int) -> getStash
    int remove(java.lang.Object,int) -> remove
    int removeStash(java.lang.Object,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ObjectIntMap$Entries:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.ObjectIntMap$Entry:
    java.lang.Object key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.ObjectIntMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.ObjectIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.ObjectMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectMap$Entries entries -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> put_internal
    void putAll(com.badlogic.gdx.utils.ObjectMap) -> putAll
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.ObjectMap$Entries:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ObjectMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ObjectMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ObjectMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void advance() -> advance
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.ObjectMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.OrderedMap:
    com.badlogic.gdx.utils.Array keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    com.badlogic.gdx.utils.Array orderedKeys() -> orderedKeys
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.OrderedMap$1:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.OrderedMap$2:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$3 -> com.badlogic.gdx.utils.OrderedMap$3:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.PauseableThread:
    java.lang.Runnable runnable -> runnable
    boolean paused -> paused
    boolean exit -> exit
    void run() -> run
    void onPause() -> onPause
    void onResume() -> onResume
    boolean isPaused() -> isPaused
    void stopThread() -> stopThread
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.Pool:
    int max -> max
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void free(com.badlogic.gdx.utils.Array) -> free
    void clear() -> clear
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.PooledLinkedList:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> head
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> tail
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> iter
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> curr
    int size -> size
    com.badlogic.gdx.utils.Pool pool -> pool
    void add(java.lang.Object) -> add
    void iter() -> iter
    java.lang.Object next() -> next
    void remove() -> remove
    void clear() -> clear
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.PooledLinkedList$1:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> this$0
    com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.PooledLinkedList$Item:
    java.lang.Object payload -> payload
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> next
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> prev
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.Scaling:
    com.badlogic.gdx.utils.Scaling fit -> fit
    com.badlogic.gdx.utils.Scaling fill -> fill
    com.badlogic.gdx.utils.Scaling fillX -> fillX
    com.badlogic.gdx.utils.Scaling fillY -> fillY
    com.badlogic.gdx.utils.Scaling stretch -> stretch
    com.badlogic.gdx.utils.Scaling stretchX -> stretchX
    com.badlogic.gdx.utils.Scaling stretchY -> stretchY
    com.badlogic.gdx.utils.Scaling none -> none
    com.badlogic.gdx.math.Vector2 temp -> temp
    int[] $SWITCH_TABLE$com$badlogic$gdx$utils$Scaling -> $SWITCH_TABLE$com$badlogic$gdx$utils$Scaling
    com.badlogic.gdx.utils.Scaling[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> apply
    com.badlogic.gdx.utils.Scaling[] values() -> values
    com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$badlogic$gdx$utils$Scaling() -> $SWITCH_TABLE$com$badlogic$gdx$utils$Scaling
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.ScreenUtils:
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> getFrameBufferTexture
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int) -> getFrameBufferTexture
    byte[] getFrameBufferPixels(boolean) -> getFrameBufferPixels
    byte[] getFrameBufferPixels(int,int,int,int,boolean) -> getFrameBufferPixels
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.SerializationException:
    java.lang.StringBuffer trace -> trace
    boolean causedBy(java.lang.Class) -> causedBy
    boolean causedBy(java.lang.Throwable,java.lang.Class) -> causedBy
    java.lang.String getMessage() -> getMessage
    void addTrace(java.lang.String) -> addTrace
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.SharedLibraryLoader:
    java.util.Set loadedLibraries -> loadedLibraries
    java.lang.String nativesJar -> nativesJar
    java.lang.String crc(java.lang.String) -> crc
    boolean loadLibrary(java.lang.String) -> loadLibrary
    java.lang.String extractLibrary(java.lang.String) -> extractLibrary
    java.io.InputStream getFromJar(java.lang.String,java.lang.String) -> getFromJar
    void load(java.lang.String) -> load
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.Sort:
    com.badlogic.gdx.utils.Sort instance -> instance
    com.badlogic.gdx.utils.TimSort timSort -> timSort
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> comparableTimSort
    void sort(com.badlogic.gdx.utils.Array) -> sort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator,int,int) -> sort
    com.badlogic.gdx.utils.Sort instance() -> instance
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.SortedIntList:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> nodePool
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> iterator
    int size -> size
    com.badlogic.gdx.utils.SortedIntList$Node first -> first
    java.lang.Object insert(int,java.lang.Object) -> insert
    java.lang.Object get(int) -> get
    void clear() -> clear
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.SortedIntList$Iterator:
    com.badlogic.gdx.utils.SortedIntList$Node position -> position
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> previousPosition
    com.badlogic.gdx.utils.SortedIntList this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.SortedIntList$Node next() -> next
    void remove() -> remove
    com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.SortedIntList$Node:
    com.badlogic.gdx.utils.SortedIntList$Node p -> p
    com.badlogic.gdx.utils.SortedIntList$Node n -> n
    java.lang.Object value -> value
    int index -> index
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.SortedIntList$NodePool:
    com.badlogic.gdx.utils.SortedIntList$Node newObject() -> newObject
    com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.TimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    java.util.Comparator c -> c
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> doSort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopLeft
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.XmlReader:
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.utils.XmlReader$Element current -> current
    java.lang.StringBuilder textBuffer -> textBuffer
    byte[] _xml_actions -> _xml_actions
    byte[] _xml_key_offsets -> _xml_key_offsets
    char[] _xml_trans_keys -> _xml_trans_keys
    byte[] _xml_single_lengths -> _xml_single_lengths
    byte[] _xml_range_lengths -> _xml_range_lengths
    short[] _xml_index_offsets -> _xml_index_offsets
    byte[] _xml_indicies -> _xml_indicies
    byte[] _xml_trans_targs -> _xml_trans_targs
    byte[] _xml_trans_actions -> _xml_trans_actions
    int xml_start -> xml_start
    int xml_first_final -> xml_first_final
    int xml_error -> xml_error
    int xml_en_elementBody -> xml_en_elementBody
    int xml_en_main -> xml_en_main
    com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int) -> parse
    byte[] init__xml_actions_0() -> init__xml_actions_0
    byte[] init__xml_key_offsets_0() -> init__xml_key_offsets_0
    char[] init__xml_trans_keys_0() -> init__xml_trans_keys_0
    byte[] init__xml_single_lengths_0() -> init__xml_single_lengths_0
    byte[] init__xml_range_lengths_0() -> init__xml_range_lengths_0
    short[] init__xml_index_offsets_0() -> init__xml_index_offsets_0
    byte[] init__xml_indicies_0() -> init__xml_indicies_0
    byte[] init__xml_trans_targs_0() -> init__xml_trans_targs_0
    byte[] init__xml_trans_actions_0() -> init__xml_trans_actions_0
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    java.lang.String entity(java.lang.String) -> entity
    void text(java.lang.String) -> text
    void close() -> close
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.XmlReader$Element:
    java.lang.String name -> name
    com.badlogic.gdx.utils.ObjectMap attributes -> attributes
    com.badlogic.gdx.utils.Array children -> children
    java.lang.String text -> text
    com.badlogic.gdx.utils.XmlReader$Element parent -> parent
    java.lang.String getName() -> getName
    com.badlogic.gdx.utils.ObjectMap getAttributes() -> getAttributes
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(java.lang.String,java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    int getChildCount() -> getChildCount
    com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> getChild
    void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> addChild
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    void removeChild(int) -> removeChild
    void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> removeChild
    void remove() -> remove
    com.badlogic.gdx.utils.XmlReader$Element getParent() -> getParent
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> getChildByName
    com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> getChildByNameRecursive
    com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> getChildrenByName
    com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> getChildrenByNameRecursively
    void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> getChildrenByNameRecursively
    float getFloatAttribute(java.lang.String) -> getFloatAttribute
    float getFloatAttribute(java.lang.String,float) -> getFloatAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    java.lang.String get(java.lang.String) -> get
    java.lang.String get(java.lang.String,java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.XmlWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    java.lang.String currentElement -> currentElement
    boolean indentNextClose -> indentNextClose
    int indent -> indent
    void indent() -> indent
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> element
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> element
    boolean startElementContent() -> startElementContent
    com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> attribute
    com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> text
    com.badlogic.gdx.utils.XmlWriter pop() -> pop
    void close() -> close
    void write(char[],int,int) -> write
    void flush() -> flush
com.coco.lock2.app.Pee.AppConfig -> a:
    com.coco.lock2.app.Pee.AppConfig mInstance -> g
    java.lang.String default_lockscreen_package -> h
    java.lang.String default_lockscreen_class -> i
    java.lang.String default_lockscreen_wrap -> j
    boolean zheshanVisible -> k
    boolean systemWallpaper -> l
    boolean lightColor -> m
    boolean volume -> n
    boolean needIcon -> o
    int unlockTime -> p
    int xinYiX -> q
    int xinYiY -> r
    int xinYiProportion -> s
    java.lang.String timeXy -> a
    int slidingScreenWidth -> b
    boolean useSystemIconStyle -> c
    int IconX -> t
    int IconY -> u
    int SimX -> v
    int SimY -> w
    int PromptX -> x
    int PromptY -> y
    int IconProportion -> z
    int dataX -> A
    int dataY -> B
    int timeX -> C
    int timeY -> D
    boolean xinYiDisplay -> E
    int pHoneIconIn -> F
    int sMsIconIn -> G
    int timefontsize -> H
    int datefontsize -> I
    java.lang.String[] PackageName -> d
    java.lang.String[] ClassName -> e
    java.lang.String[] ImageNames -> f
    java.lang.String bgPath -> J
    boolean Increaseweek -> K
    boolean systemWallpaper4_0 -> L
    int missingInformationY -> M
    int mSmsbl -> N
    boolean Accordingtocarrier -> O
    int Powerfontsize -> P
    int powerX -> Q
    int powerY -> R
    boolean missingInformationTimeDis -> S
    boolean AmFixed -> T
    boolean shielding -> U
    boolean usetimeimg -> V
    int weatherImgX -> W
    int weatherImgY -> X
    int weatherStrX -> Y
    int weatherStrY -> Z
    int cityX -> aa
    int cityY -> ab
    int weatherStrfontSize -> ac
    int cityfontSize -> ad
    int wddxX -> ae
    int wddxY -> af
    int wjdhX -> ag
    int wjdhY -> ah
    int wdxxfontsize -> ai
    boolean statusbarupdate -> aj
    com.coco.lock2.app.Pee.AppConfig getInstance(android.content.Context) -> getInstance
    boolean statusbarupdate() -> statusbarupdate
    int wddxX() -> wddxX
    int wddxY() -> wddxY
    int wjdhX() -> wjdhX
    int wjdhY() -> wjdhY
    int wdxxfontsize() -> wdxxfontsize
    int weatherImgX() -> weatherImgX
    int weatherImgY() -> weatherImgY
    int weatherStrX() -> weatherStrX
    int weatherStrY() -> weatherStrY
    int cityX() -> cityX
    int cityY() -> cityY
    int weatherStrfontSize() -> weatherStrfontSize
    int cityfontSize() -> cityfontSize
    boolean shielding() -> shielding
    boolean usetimeimg() -> usetimeimg
    boolean AmFixed() -> AmFixed
    boolean missingInformationTimeDis() -> missingInformationTimeDis
    int Powerfontsize() -> Powerfontsize
    int powerX() -> powerX
    int powerY() -> powerY
    boolean Accordingtocarrier() -> Accordingtocarrier
    int mSmsbl() -> mSmsbl
    int missingInformationY() -> missingInformationY
    boolean systemWallpaper4_0() -> systemWallpaper4_0
    boolean Increaseweek() -> Increaseweek
    int unlockTime() -> unlockTime
    int datefontsize() -> datefontsize
    int timefontsize() -> timefontsize
    java.lang.String bgPath() -> bgPath
    int pHoneIconIn() -> pHoneIconIn
    int sMsIconIn() -> sMsIconIn
    java.lang.String[] PackageName() -> PackageName
    java.lang.String[] ClassName() -> ClassName
    java.lang.String[] ImageNames() -> ImageNames
    boolean xinYiDisplay() -> xinYiDisplay
    int dataX() -> dataX
    int dataY() -> dataY
    int timeX() -> timeX
    int timeY() -> timeY
    boolean useSystemIconStyle() -> useSystemIconStyle
    int slidingScreenWidth() -> slidingScreenWidth
    int IconProportion() -> IconProportion
    int IconX() -> IconX
    int IconY() -> IconY
    int SimX() -> SimX
    int SimY() -> SimY
    int PromptX() -> PromptX
    int PromptY() -> PromptY
    int xinYiProportion() -> xinYiProportion
    int xinYiX() -> xinYiX
    int xinYiY() -> xinYiY
    java.lang.String timeXy() -> timeXy
    boolean needIcon() -> needIcon
    boolean volume() -> volume
    boolean lightColor() -> lightColor
    boolean getSystemWallpaper() -> getSystemWallpaper
    boolean getZheshanVisible() -> getZheshanVisible
    java.lang.String getDefaultLockscreenPackage() -> getDefaultLockscreenPackage
    java.lang.String getDefaultLockscreenClass() -> getDefaultLockscreenClass
    java.lang.String getDefaultLockscreenWrap() -> getDefaultLockscreenWrap
    java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> a
com.coco.lock2.app.Pee.Base -> b:
    java.lang.Runnable Refresh_handler -> a
    android.os.Handler mhandler -> b
    int delaytime -> c
    android.os.Handler getMhandler() -> getMhandler
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void InitUI(int,int) -> InitUI
    void onDraw(android.graphics.Canvas) -> onDraw
    void delayHandle() -> delayHandle
com.coco.lock2.app.Pee.Child -> c:
    int childstate -> n
    int refreshstate -> a
    android.content.Context mContext -> o
    int width -> p
    int height -> q
    float scale -> r
    boolean touched -> s
    boolean moved -> b
    boolean beginUnlock -> c
    int index -> d
    android.os.Handler mHandler -> e
    com.coco.lock2.app.Pee.Lock4Screen mView -> f
    float touchDownY -> t
    android.graphics.drawable.Drawable[] noteDrawables -> u
    int noteNum -> g
    int[] noteImageId -> h
    android.graphics.drawable.Drawable[] childDrawables -> v
    android.graphics.drawable.Drawable[] peeingDrawables -> w
    int[] childImageId -> i
    int[] childpeeingID -> j
    android.graphics.drawable.Drawable[] fireDrawables -> x
    android.graphics.drawable.Drawable[] extinguishDrawables -> y
    int fireIndex -> k
    int[] fireImageId -> l
    int[] ExtinguishImageId -> m
    java.lang.Runnable animRunnable -> z
    void setViewHeight(int) -> setViewHeight
    void setView(com.coco.lock2.app.Pee.Lock4Screen,android.os.Handler) -> setView
    void onDraw(android.graphics.Canvas) -> onDraw
    int getChildstate() -> getChildstate
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void freedDrawable(android.graphics.drawable.Drawable) -> a
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
com.coco.lock2.app.Pee.Child$1 -> d:
    com.coco.lock2.app.Pee.Child this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.InsideLockActivity -> com.coco.lock2.app.Pee.InsideLockActivity:
    com.coco.lock2.app.Pee.ViewWrap wrap -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onPause() -> onPause
com.coco.lock2.app.Pee.InsideLockActivity$1 -> e:
    com.coco.lock2.app.Pee.InsideLockActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.coco.lock2.app.Pee.Lock4Screen -> f:
    android.graphics.drawable.Drawable bgImg -> c
    android.content.Context mContext -> d
    com.coco.lock2.app.Pee.TimeShow time -> e
    com.coco.lock2.app.Pee.Child child -> f
    com.coco.lock2.app.Pee.Prompt prompt -> g
    boolean statusbarupdate -> h
    com.coco.lock2.app.Pee.AppConfig mAppConfig -> i
    int width -> j
    int height -> k
    boolean touched -> l
    android.os.Handler mHandler -> m
    boolean setBounds -> n
    void hidePrompt() -> hidePrompt
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
com.coco.lock2.app.Pee.ObjectGetter -> g:
    android.view.View mView -> a
    android.graphics.Paint mBitmapPaint -> b
    android.os.Handler mhandler -> c
    android.view.View getView() -> getView
    android.graphics.Paint getBitmapPaint() -> getBitmapPaint
    android.os.Handler getHandler() -> getHandler
    void Init(android.content.Context,android.view.View,android.os.Handler) -> Init
    android.graphics.Bitmap getBitmap(int) -> getBitmap
    android.graphics.Bitmap[] getBitmaps(int[]) -> getBitmaps
    android.graphics.Bitmap[] ImageEnlarge(android.graphics.Bitmap[],float) -> ImageEnlarge
com.coco.lock2.app.Pee.Prompt -> h:
    android.content.Context mContext -> d
    int width -> e
    int height -> f
    float scale -> g
    int index -> a
    android.graphics.drawable.Drawable[] arrows -> h
    boolean showflag -> i
    boolean touchflag -> j
    android.os.Handler mHandler -> b
    android.view.View mView -> c
    java.lang.Runnable animRunnable -> k
    void setView(android.view.View,android.os.Handler) -> setView
    void setViewHeight(int) -> setViewHeight
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean isShowflag() -> isShowflag
    void setShowflag(boolean) -> setShowflag
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
com.coco.lock2.app.Pee.Prompt$1 -> i:
    com.coco.lock2.app.Pee.Prompt this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.TimeShow -> j:
    java.sql.Date curDate -> a
    boolean mTimeFormat -> b
    android.content.Context mContext -> c
    android.graphics.drawable.Drawable[] timeDrawables -> d
    android.graphics.drawable.Drawable dotDrawable -> e
    android.graphics.drawable.Drawable[] dateDrawables -> f
    int width -> g
    int height -> h
    int[] dateIdZh -> i
    int[] dateIdEn -> j
    java.lang.String[] weekString -> k
    void createDrawable() -> a
    void drawLockImage(android.graphics.Canvas,int,int,android.graphics.drawable.Drawable) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void freedDrawable(android.graphics.drawable.Drawable) -> a
    void onDestroy() -> onDestroy
    boolean isZh() -> b
com.coco.lock2.app.Pee.ViewWrap -> k:
    com.coco.lock2.app.Pee.Lock4Screen lockView -> d
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    android.view.View getView() -> getView
    void setKernelCallback(android.os.Handler$Callback) -> setKernelCallback
    android.os.Handler$Callback getAppService() -> getAppService
    android.view.View createLockView() -> createLockView
com.coco.lock2.app.Pee.ViewWrap$1 -> l:
    com.coco.lock2.app.Pee.ViewWrap this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.common.BaseView -> m:
    java.lang.String LOG_TAG -> a
    com.coco.lock2.app.Pee.ViewWrap wrap -> b
    java.lang.Runnable mExitFunc -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setWrap(com.coco.lock2.app.Pee.ViewWrap) -> setWrap
    void setExitFunction(java.lang.Runnable) -> setExitFunction
    void exitLock() -> exitLock
    void onViewCreate() -> onViewCreate
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.cooee.control.center.module.R -> n:
com.cooee.control.center.module.R$string -> o:
    int activity_not_found -> a
    int google_play_not_install -> b
com.cooee.control.center.module.api.LockWrapApi -> p:
    android.os.Handler$Callback kernelCallback -> d
    com.cooee.control.center.module.base.LockViewContainer mLockView -> e
    android.view.View mCustomLockView -> f
    android.content.Context context -> a
    android.content.Context remoteContext -> b
    java.lang.String simInf -> c
    android.os.Handler$Callback appService -> g
    android.view.View createLockView() -> createLockView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    android.view.View getView() -> getView
    void setKernelCallback(android.os.Handler$Callback) -> setKernelCallback
    android.os.Handler$Callback getAppService() -> getAppService
    void unLock() -> unLock
    void resetLight() -> resetLight
    void onUnlock() -> onUnlock
com.cooee.control.center.module.api.LockWrapApi$1 -> q:
    com.cooee.control.center.module.api.LockWrapApi this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.cooee.control.center.module.base.AppInfo -> r:
    java.lang.String appName -> a
    android.content.Intent appIntent -> b
    android.graphics.drawable.Drawable appIcon -> c
com.cooee.control.center.module.base.BootCompletedReceiver -> com.cooee.control.center.module.base.BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.control.center.module.base.DeviceUtils -> s:
    int SDK_INT -> a
    java.lang.String DEVICE_MANUFACTURER -> b
    java.lang.String DEVICE_PRODUCT -> c
    java.lang.String DEVICE_MODEL -> d
    java.lang.String DEVICE_DISPLAY -> e
    java.util.UUID uuid -> f
    java.lang.String sNavBarOverride -> g
    int getStatusBarHeight(android.content.Context) -> getStatusBarHeight
    int getNavigationBarHeight(android.content.Context) -> getNavigationBarHeight
    boolean HasNavigationBar(android.content.Context) -> HasNavigationBar
    int getScreenPixelsHeight(android.content.Context) -> getScreenPixelsHeight
    int getRealScreenPixelsHeight(android.app.Activity) -> getRealScreenPixelsHeight
    int getScreenPixelsWidth(android.content.Context) -> getScreenPixelsWidth
    java.util.UUID getDeviceUUID(android.content.Context) -> getDeviceUUID
    boolean isHuaWeiDevices() -> isHuaWeiDevices
    boolean isXiaomiDevices() -> isXiaomiDevices
    boolean isDoovL1() -> isDoovL1
    boolean isHTC() -> isHTC
    boolean hasMeiZuSmartBar() -> hasMeiZuSmartBar
    void hideNavigationBar(android.view.View) -> hideNavigationBar
    boolean isSpecialDevicesForNavigationbar() -> isSpecialDevicesForNavigationbar
    boolean isSpecialDevicesForDefaultLauncherGuide() -> isSpecialDevicesForDefaultLauncherGuide
com.cooee.control.center.module.base.FileUtils -> t:
    void copyAssetDirToFiles(android.content.Context,java.lang.String) -> copyAssetDirToFiles
    void copyAssetFileToFiles(android.content.Context,java.lang.String) -> copyAssetFileToFiles
    void copyAssetDirToFiles(java.lang.String,android.content.Context,java.lang.String) -> copyAssetDirToFiles
    void copyAssetFileToFiles(java.lang.String,android.content.Context,java.lang.String) -> copyAssetFileToFiles
    int copySDDirToFiles(java.lang.String,java.lang.String) -> copySDDirToFiles
    int CopySdcardFile(java.lang.String,java.lang.String) -> CopySdcardFile
    void deleteFile(java.io.File) -> deleteFile
com.cooee.control.center.module.base.IBaseView -> u:
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
com.cooee.control.center.module.base.LockViewContainer -> v:
    java.lang.String htmlFilesDir -> a
    java.lang.String SDCARD_FILES_DIR -> b
    java.lang.String updateFile -> c
    android.content.Context mContext -> d
    android.content.Context mRemoteContext -> e
    org.apache.cordova.CordovaWrap mCordovaWrap -> f
    android.webkit.WebView mWebView -> g
    android.view.View mLockView -> h
    boolean mGdx -> i
    com.badlogic.gdx.InputAdapter mInputAdapter -> j
    android.os.Handler mHandler -> k
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
    void loadWebview() -> b
    void setupViews(android.view.View,boolean,com.badlogic.gdx.InputAdapter) -> setupViews
    boolean IsHaveInternet(android.content.Context) -> IsHaveInternet
    void access$0(com.cooee.control.center.module.base.LockViewContainer) -> a
    android.content.Context access$1(com.cooee.control.center.module.base.LockViewContainer) -> b
    android.content.Context access$2(com.cooee.control.center.module.base.LockViewContainer) -> c
    android.os.Handler access$3(com.cooee.control.center.module.base.LockViewContainer) -> d
    void access$4(com.cooee.control.center.module.base.LockViewContainer,java.lang.String) -> a
    java.lang.String access$5(com.cooee.control.center.module.base.LockViewContainer) -> e
    java.lang.String access$6() -> a
com.cooee.control.center.module.base.LockViewContainer$1 -> w:
    com.cooee.control.center.module.base.LockViewContainer this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cooee.control.center.module.base.LockViewContainer$2 -> x:
    com.cooee.control.center.module.base.LockViewContainer this$0 -> a
    void run() -> run
com.cooee.control.center.module.base.LockViewContainer$3 -> y:
    com.cooee.control.center.module.base.LockViewContainer this$0 -> a
    void run() -> run
com.cooee.control.center.module.base.ShortcutService -> com.cooee.control.center.module.base.ShortcutService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
com.cooee.control.center.module.base.ThreadUtil -> z:
    java.util.concurrent.ExecutorService cachedThreadPool -> a
    void execute(java.lang.Runnable) -> execute
com.cooee.control.center.module.base.Tools -> aa:
    java.util.ArrayList recentTasks(android.content.Context) -> recentTasks
    android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable) -> createIconBitmap
    java.lang.String bitmapToBase64(android.graphics.Bitmap) -> bitmapToBase64
    android.graphics.Bitmap base64ToBitmap(java.lang.String) -> base64ToBitmap
    java.util.HashMap setTime(android.content.Context,java.util.Date) -> setTime
com.cooee.control.center.module.update.UpdateManager -> ab:
    android.content.Context mContext -> a
    java.lang.String texUrl -> b
    boolean isUpdate() -> isUpdate
    java.lang.String getString(java.io.InputStream) -> a
com.cooee.control.center.module.update.UpdateService -> com.cooee.control.center.module.update.UpdateService:
    android.content.BroadcastReceiver mBroadcastReceiver -> a
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.cooee.control.center.module.update.UpdateService$1 -> ac:
    com.cooee.control.center.module.update.UpdateService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.control.center.module.update.UpdateTask -> ad:
    android.content.Context mContext -> a
    com.cooee.control.center.module.update.UpdateTask$XmlTask xmlTask -> c
    android.content.SharedPreferences sharedPrefer -> d
    android.content.SharedPreferences$Editor editor -> b
    boolean updateFailed -> e
    java.lang.String downUrl -> f
    java.lang.String zipName -> g
    void checkUpdate() -> checkUpdate
    boolean judgeUpdate(long) -> a
    void updateFile() -> a
    boolean downloadFile(java.lang.String) -> a
    void access$3$4a513032(java.io.File,java.lang.String) -> a
com.cooee.control.center.module.update.UpdateTask$1 -> ae:
    com.cooee.control.center.module.update.UpdateTask this$0 -> a
    void run() -> run
com.cooee.control.center.module.update.UpdateTask$XmlTask -> af:
    com.cooee.control.center.module.update.UpdateManager updateManager -> b
    com.cooee.control.center.module.update.UpdateTask this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cooee.cordova.plugins.AppsApi -> com.cooee.cordova.plugins.AppsApi:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_CHECK_AVAILABILITY -> ACTION_CHECK_AVAILABILITY
    java.lang.String ACTION_START_ACTIVITY -> ACTION_START_ACTIVITY
    java.lang.String ACTION_START_SHORTCUT -> ACTION_START_SHORTCUT
    java.lang.String ACTION_START_BROWSER_URL -> ACTION_START_BROWSER_URL
    java.lang.String ACTION_BIND_FAVORITE_APP -> ACTION_BIND_FAVORITE_APP
    org.apache.cordova.CallbackContext mCallbackContext -> mCallbackContext
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean appInstalled(java.lang.String) -> appInstalled
    void startApp(org.json.JSONArray) -> startApp
    void startShortcut(org.json.JSONArray) -> startShortcut
    void startShortcutImpl(org.json.JSONArray,android.content.Context) -> startShortcutImpl
    void startUrl(org.json.JSONArray) -> startUrl
    void startUrlImpl(org.json.JSONArray,android.content.Context) -> startUrlImpl
    void checkAvailability(java.lang.String,org.apache.cordova.CallbackContext) -> checkAvailability
    void bindWebFavoriteApp() -> bindWebFavoriteApp
    void sendJS(java.lang.String) -> sendJS
    void createSystemShortCut(android.content.Context,android.content.Intent,java.lang.String,android.graphics.Bitmap) -> createSystemShortCut
    boolean startActivitySafely(android.content.Context,android.content.Intent) -> startActivitySafely
    boolean isPlayStoreInstalled(android.content.Context) -> isPlayStoreInstalled
    void openGooglePlay(android.content.Context,android.content.Intent) -> openGooglePlay
    com.cooee.cordova.plugins.UnlockListener access$0() -> access$0
    org.apache.cordova.CallbackContext access$1(com.cooee.cordova.plugins.AppsApi) -> access$1
    void access$2(com.cooee.cordova.plugins.AppsApi,org.json.JSONArray,android.content.Context) -> access$2
    void access$3(com.cooee.cordova.plugins.AppsApi,org.json.JSONArray,android.content.Context) -> access$3
    void access$4(com.cooee.cordova.plugins.AppsApi,java.lang.String) -> access$4
com.cooee.cordova.plugins.AppsApi$1 -> ag:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$2 -> ah:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$3 -> ai:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$4 -> aj:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$5 -> ak:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$6 -> al:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$7 -> am:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    void run() -> run
com.cooee.cordova.plugins.AppsApi$8 -> an:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$9 -> ao:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.BluetoothStatus -> com.cooee.cordova.plugins.BluetoothStatus:
    org.apache.cordova.CordovaWebView mwebView -> mwebView
    org.apache.cordova.CordovaInterface mcordova -> mcordova
    java.lang.String LOG_TAG -> LOG_TAG
    android.bluetooth.BluetoothAdapter bluetoothAdapter -> bluetoothAdapter
    org.apache.cordova.CallbackContext callbackContext -> callbackContext
    android.content.Context mContext -> mContext
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void enableBT() -> enableBT
    void disableBT() -> disableBT
    boolean isBlueEnabled(org.apache.cordova.CallbackContext) -> isBlueEnabled
    void entryBluetoothSettings() -> entryBluetoothSettings
    void promptForBT() -> promptForBT
    void initPlugin() -> initPlugin
    void sendJS(java.lang.String) -> sendJS
    void access$0(com.cooee.cordova.plugins.BluetoothStatus,java.lang.String) -> access$0
    org.apache.cordova.CordovaWebView access$1() -> access$1
com.cooee.cordova.plugins.BluetoothStatus$1 -> ap:
    com.cooee.cordova.plugins.BluetoothStatus this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.cordova.plugins.BluetoothStatus$2 -> aq:
    com.cooee.cordova.plugins.BluetoothStatus this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.BluetoothStatus$3 -> ar:
    com.cooee.cordova.plugins.BluetoothStatus this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.EventStatistics -> com.cooee.cordova.plugins.EventStatistics:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_STATISTICS_EVENT -> ACTION_STATISTICS_EVENT
    org.apache.cordova.CallbackContext mCallbackContext -> mCallbackContext
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void onEvent(org.json.JSONArray) -> onEvent
    void onEventImpl(org.json.JSONArray,android.content.Context) -> onEventImpl
    void access$0(com.cooee.cordova.plugins.EventStatistics,org.json.JSONArray,android.content.Context) -> access$0
com.cooee.cordova.plugins.EventStatistics$1 -> as:
    com.cooee.cordova.plugins.EventStatistics this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.Flashlight -> com.cooee.cordova.plugins.Flashlight:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_AVAILABLE -> ACTION_AVAILABLE
    java.lang.String ACTION_SWITCH_ON -> ACTION_SWITCH_ON
    java.lang.String ACTION_SWITCH_OFF -> ACTION_SWITCH_OFF
    org.apache.cordova.CallbackContext mCallbackContext -> mCallbackContext
    java.lang.Boolean capable -> capable
    boolean releasing -> releasing
    android.hardware.Camera mCamera -> mCamera
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    boolean isCapable() -> isCapable
    void toggleTorch(boolean,org.apache.cordova.CallbackContext) -> toggleTorch
    void releaseCamera() -> releaseCamera
    android.hardware.Camera access$0(com.cooee.cordova.plugins.Flashlight) -> access$0
    void access$1(com.cooee.cordova.plugins.Flashlight,boolean) -> access$1
com.cooee.cordova.plugins.Flashlight$1 -> at:
    com.cooee.cordova.plugins.Flashlight this$0 -> a
    void run() -> run
com.cooee.cordova.plugins.TouchEventPrevent -> com.cooee.cordova.plugins.TouchEventPrevent:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_PREVENT_TOUCH_SELF -> ACTION_PREVENT_TOUCH_SELF
    boolean preventWebTouchEvent -> preventWebTouchEvent
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void preventEventSelf() -> preventEventSelf
com.cooee.cordova.plugins.UnlockListener -> com.cooee.cordova.plugins.UnlockListener:
    void onUnlock() -> onUnlock
com.cooee.cordova.plugins.WhitelistPlugin -> com.cooee.cordova.plugins.WhitelistPlugin:
    java.lang.String LOG_TAG -> LOG_TAG
    org.apache.cordova.Whitelist allowedNavigations -> allowedNavigations
    org.apache.cordova.Whitelist allowedIntents -> allowedIntents
    org.apache.cordova.Whitelist allowedRequests -> allowedRequests
    void pluginInitialize() -> pluginInitialize
    java.lang.Boolean shouldAllowNavigation(java.lang.String) -> shouldAllowNavigation
    java.lang.Boolean shouldAllowRequest(java.lang.String) -> shouldAllowRequest
    java.lang.Boolean shouldOpenExternalUrl(java.lang.String) -> shouldOpenExternalUrl
    org.apache.cordova.Whitelist getAllowedNavigations() -> getAllowedNavigations
    void setAllowedNavigations(org.apache.cordova.Whitelist) -> setAllowedNavigations
    org.apache.cordova.Whitelist getAllowedIntents() -> getAllowedIntents
    void setAllowedIntents(org.apache.cordova.Whitelist) -> setAllowedIntents
    org.apache.cordova.Whitelist getAllowedRequests() -> getAllowedRequests
    void setAllowedRequests(org.apache.cordova.Whitelist) -> setAllowedRequests
    org.apache.cordova.Whitelist access$0(com.cooee.cordova.plugins.WhitelistPlugin) -> access$0
    org.apache.cordova.Whitelist access$1(com.cooee.cordova.plugins.WhitelistPlugin) -> access$1
    org.apache.cordova.Whitelist access$2(com.cooee.cordova.plugins.WhitelistPlugin) -> access$2
com.cooee.cordova.plugins.WhitelistPlugin$CustomConfigXmlParser -> au:
    com.cooee.cordova.plugins.WhitelistPlugin this$0 -> a
    void handleStartTag(org.xmlpull.v1.XmlPullParser) -> handleStartTag
    void handleEndTag(org.xmlpull.v1.XmlPullParser) -> handleEndTag
com.cooee.cordova.plugins.WifiWizard -> com.cooee.cordova.plugins.WifiWizard:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String ADD_NETWORK -> ADD_NETWORK
    java.lang.String REMOVE_NETWORK -> REMOVE_NETWORK
    java.lang.String CONNECT_NETWORK -> CONNECT_NETWORK
    java.lang.String DISCONNECT_NETWORK -> DISCONNECT_NETWORK
    java.lang.String DISCONNECT -> DISCONNECT
    java.lang.String LIST_NETWORKS -> LIST_NETWORKS
    java.lang.String START_SCAN -> START_SCAN
    java.lang.String GET_SCAN_RESULTS -> GET_SCAN_RESULTS
    java.lang.String GET_CONNECTED_SSID -> GET_CONNECTED_SSID
    java.lang.String IS_WIFI_ENABLED -> IS_WIFI_ENABLED
    java.lang.String SET_WIFI_ENABLED -> SET_WIFI_ENABLED
    java.lang.String ACTION_ENTRY_WIFI_SETTINGS -> ACTION_ENTRY_WIFI_SETTINGS
    android.net.wifi.WifiManager wifiManager -> wifiManager
    org.apache.cordova.CallbackContext callbackContext -> callbackContext
    android.content.Context mContext -> mContext
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void onDestroy() -> onDestroy
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean addNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> addNetwork
    boolean removeNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> removeNetwork
    boolean connectNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> connectNetwork
    boolean disconnectNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> disconnectNetwork
    boolean disconnect(org.apache.cordova.CallbackContext) -> disconnect
    boolean listNetworks(org.apache.cordova.CallbackContext) -> listNetworks
    boolean getScanResults(org.apache.cordova.CallbackContext,org.json.JSONArray) -> getScanResults
    boolean startScan(org.apache.cordova.CallbackContext) -> startScan
    boolean getConnectedSSID(org.apache.cordova.CallbackContext) -> getConnectedSSID
    boolean isWifiEnabled(org.apache.cordova.CallbackContext) -> isWifiEnabled
    int ssidToNetworkId(java.lang.String) -> ssidToNetworkId
    boolean setWifiEnabled(org.apache.cordova.CallbackContext,org.json.JSONArray) -> setWifiEnabled
    void entryWifiSettings() -> entryWifiSettings
    boolean validateData(org.json.JSONArray) -> validateData
    void sendJS(java.lang.String) -> sendJS
    android.net.wifi.WifiManager access$0(com.cooee.cordova.plugins.WifiWizard) -> access$0
com.cooee.cordova.plugins.WifiWizard$1 -> av:
    com.cooee.cordova.plugins.WifiWizard this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.cordova.plugins.WifiWizard$2 -> aw:
    com.cooee.cordova.plugins.WifiWizard this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.WifiWizard$3 -> ax:
    com.cooee.cordova.plugins.WifiWizard this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.camera.CameraLauncher -> com.cooee.cordova.plugins.camera.CameraLauncher:
    int DATA_URL -> DATA_URL
    int FILE_URI -> FILE_URI
    int NATIVE_URI -> NATIVE_URI
    int PHOTOLIBRARY -> PHOTOLIBRARY
    int CAMERA -> CAMERA
    int SAVEDPHOTOALBUM -> SAVEDPHOTOALBUM
    int PICTURE -> PICTURE
    int VIDEO -> VIDEO
    int ALLMEDIA -> ALLMEDIA
    int JPEG -> JPEG
    int PNG -> PNG
    java.lang.String GET_PICTURE -> GET_PICTURE
    java.lang.String GET_VIDEO -> GET_VIDEO
    java.lang.String GET_All -> GET_All
    java.lang.String LOG_TAG -> LOG_TAG
    int CROP_CAMERA -> CROP_CAMERA
    int mQuality -> mQuality
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    android.net.Uri imageUri -> imageUri
    int encodingType -> encodingType
    int mediaType -> mediaType
    boolean saveToPhotoAlbum -> saveToPhotoAlbum
    boolean correctOrientation -> correctOrientation
    boolean orientationCorrected -> orientationCorrected
    boolean allowEdit -> allowEdit
    org.apache.cordova.CallbackContext callbackContext -> callbackContext
    int numPics -> numPics
    android.media.MediaScannerConnection conn -> conn
    android.net.Uri scanMe -> scanMe
    android.net.Uri croppedUri -> croppedUri
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    java.lang.String getTempDirectoryPath() -> getTempDirectoryPath
    void takePicture(int,int) -> takePicture
    java.io.File createCaptureFile(int) -> createCaptureFile
    void getImage(int,int,int) -> getImage
    void performCrop(android.net.Uri,int,android.content.Intent) -> performCrop
    void processResultFromCamera(int,android.content.Intent) -> processResultFromCamera
    java.lang.String getPicutresPath() -> getPicutresPath
    void refreshGallery(android.net.Uri) -> refreshGallery
    java.lang.String ouputModifiedBitmap(android.graphics.Bitmap,android.net.Uri) -> ouputModifiedBitmap
    void processResultFromGallery(int,android.content.Intent) -> processResultFromGallery
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int getImageOrientation(android.net.Uri) -> getImageOrientation
    android.graphics.Bitmap getRotatedBitmap(int,android.graphics.Bitmap,com.cooee.cordova.plugins.camera.ExifHelper) -> getRotatedBitmap
    void writeUncompressedImage(android.net.Uri) -> writeUncompressedImage
    android.net.Uri getUriFromMediaStore() -> getUriFromMediaStore
    android.graphics.Bitmap getScaledBitmap(java.lang.String) -> getScaledBitmap
    int[] calculateAspectRatio(int,int) -> calculateAspectRatio
    int calculateSampleSize(int,int,int,int) -> calculateSampleSize
    android.database.Cursor queryImgDB(android.net.Uri) -> queryImgDB
    void cleanup(int,android.net.Uri,android.net.Uri,android.graphics.Bitmap) -> cleanup
    void checkForDuplicateImage(int) -> checkForDuplicateImage
    android.net.Uri whichContentStore() -> whichContentStore
    void processPicture(android.graphics.Bitmap) -> processPicture
    void failPicture(java.lang.String) -> failPicture
    void scanForGallery(android.net.Uri) -> scanForGallery
    void onMediaScannerConnected() -> onMediaScannerConnected
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
com.cooee.cordova.plugins.camera.ExifHelper -> com.cooee.cordova.plugins.camera.ExifHelper:
    java.lang.String aperture -> aperture
    java.lang.String datetime -> datetime
    java.lang.String exposureTime -> exposureTime
    java.lang.String flash -> flash
    java.lang.String focalLength -> focalLength
    java.lang.String gpsAltitude -> gpsAltitude
    java.lang.String gpsAltitudeRef -> gpsAltitudeRef
    java.lang.String gpsDateStamp -> gpsDateStamp
    java.lang.String gpsLatitude -> gpsLatitude
    java.lang.String gpsLatitudeRef -> gpsLatitudeRef
    java.lang.String gpsLongitude -> gpsLongitude
    java.lang.String gpsLongitudeRef -> gpsLongitudeRef
    java.lang.String gpsProcessingMethod -> gpsProcessingMethod
    java.lang.String gpsTimestamp -> gpsTimestamp
    java.lang.String iso -> iso
    java.lang.String make -> make
    java.lang.String model -> model
    java.lang.String orientation -> orientation
    java.lang.String whiteBalance -> whiteBalance
    android.media.ExifInterface inFile -> inFile
    android.media.ExifInterface outFile -> outFile
    void createInFile(java.lang.String) -> createInFile
    void createOutFile(java.lang.String) -> createOutFile
    void readExifData() -> readExifData
    void writeExifData() -> writeExifData
    int getOrientation() -> getOrientation
    void resetOrientation() -> resetOrientation
com.cooee.cordova.plugins.camera.FileHelper -> com.cooee.cordova.plugins.camera.FileHelper:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String _DATA -> _DATA
    java.lang.String getRealPath(android.net.Uri,org.apache.cordova.CordovaInterface) -> getRealPath
    java.lang.String getRealPath(java.lang.String,org.apache.cordova.CordovaInterface) -> getRealPath
    java.lang.String getRealPathFromURI_API19(android.content.Context,android.net.Uri) -> getRealPathFromURI_API19
    java.lang.String getRealPathFromURI_API11to18(android.content.Context,android.net.Uri) -> getRealPathFromURI_API11to18
    java.lang.String getRealPathFromURI_BelowAPI11(android.content.Context,android.net.Uri) -> getRealPathFromURI_BelowAPI11
    java.io.InputStream getInputStreamFromUriString(java.lang.String,org.apache.cordova.CordovaInterface) -> getInputStreamFromUriString
    java.lang.String stripFileProtocol(java.lang.String) -> stripFileProtocol
    java.lang.String getMimeTypeForExtension(java.lang.String) -> getMimeTypeForExtension
    java.lang.String getMimeType(java.lang.String,org.apache.cordova.CordovaInterface) -> getMimeType
com.cooee.cordova.plugins.mobiledata.MobileDataWizard -> com.cooee.cordova.plugins.mobiledata.MobileDataWizard:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_IS_MOBILE_DATA_ENABLED -> ACTION_IS_MOBILE_DATA_ENABLED
    java.lang.String ACTION_SET_MOBILE_DATA_ENABLED -> ACTION_SET_MOBILE_DATA_ENABLED
    java.lang.String ACTION_ENTRY_MOBILE_DATA_SETTINGS -> ACTION_ENTRY_MOBILE_DATA_SETTINGS
    android.content.Context mContext -> mContext
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void onDestroy() -> onDestroy
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean isMobileDataEnabled(org.apache.cordova.CallbackContext) -> isMobileDataEnabled
    void entryMobileDataSettings() -> entryMobileDataSettings
    void setMobileDataEnabled(org.json.JSONArray) -> setMobileDataEnabled
    void sendJS(java.lang.String) -> sendJS
    android.net.ConnectivityManager access$0(com.cooee.cordova.plugins.mobiledata.MobileDataWizard) -> access$0
    android.content.Context access$1(com.cooee.cordova.plugins.mobiledata.MobileDataWizard) -> access$1
com.cooee.cordova.plugins.mobiledata.MobileDataWizard$1 -> ay:
    com.cooee.cordova.plugins.mobiledata.MobileDataWizard this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.cordova.plugins.mobiledata.MobileDataWizard$2 -> az:
    com.cooee.cordova.plugins.mobiledata.MobileDataWizard this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.mobiledata.MobileDataWizard$3 -> ba:
    com.cooee.cordova.plugins.mobiledata.MobileDataWizard this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.mobiledata.TelephonyInfo -> com.cooee.cordova.plugins.mobiledata.TelephonyInfo:
    com.cooee.cordova.plugins.mobiledata.TelephonyInfo telephonyInfo -> telephonyInfo
    java.lang.String imsiSIM1 -> imsiSIM1
    java.lang.String imsiSIM2 -> imsiSIM2
    boolean isSIM1Ready -> isSIM1Ready
    boolean isSIM2Ready -> isSIM2Ready
    com.cooee.cordova.plugins.mobiledata.TelephonyInfo getInstance(android.content.Context) -> getInstance
    java.lang.String getDeviceIdBySlot(android.content.Context,java.lang.String,int) -> getDeviceIdBySlot
    boolean getSIMStateBySlot(android.content.Context,java.lang.String,int) -> getSIMStateBySlot
    void printTelephonyManagerMethodNamesForThisDevice(android.content.Context) -> printTelephonyManagerMethodNamesForThisDevice
    java.lang.String getImsiSIM1() -> getImsiSIM1
    java.lang.String getImsiSIM2() -> getImsiSIM2
    boolean isSIM1Ready() -> isSIM1Ready
    boolean isSIM2Ready() -> isSIM2Ready
    boolean isDualSIM() -> isDualSIM
com.cooee.cordova.plugins.mobiledata.TelephonyInfo$GeminiMethodNotFoundException -> bb:
    long serialVersionUID -> serialVersionUID
com.cooee.lock.statistics.Assets -> bc:
    android.content.Context mContext -> b
    org.json.JSONObject config -> a
    void initAssets(android.content.Context) -> initAssets
    org.json.JSONObject getConfig(java.lang.String) -> getConfig
    java.lang.String readTextFile(java.io.InputStream) -> a
com.cooee.lock.statistics.Dbhelp -> bd:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean onSerch(android.database.sqlite.SQLiteDatabase,java.lang.String) -> onSerch
    void onCreateTable(android.database.sqlite.SQLiteDatabase,java.lang.String) -> onCreateTable
com.cooee.lock.statistics.StaticClass -> com.cooee.lock.statistics.StaticClass:
    java.lang.String appid -> a
    java.lang.String sn -> b
    java.lang.String launcherVersion -> c
    java.lang.String packagename -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.cooee.shell.moduleupdate.ConfigData -> be:
    java.lang.String updateInterval -> b
    java.lang.String airpushInterval -> c
    java.lang.String deviceModel -> d
    java.lang.String configVersion -> e
    com.cooee.shell.moduleupdate.b shellModule -> f
    com.cooee.shell.moduleupdate.b downloaderModule -> g
    com.cooee.shell.moduleupdate.b chargeModule -> h
    boolean isPullXmlErr -> a
    java.lang.String getUpdateInterval() -> getUpdateInterval
    java.lang.String getAirPushInterval() -> getAirPushInterval
    java.lang.String getConfigVersion() -> getConfigVersion
    void setConfigVersion(java.lang.String) -> setConfigVersion
    void setUpdateInterval(java.lang.String) -> setUpdateInterval
    void setAirpushInterval(java.lang.String) -> setAirpushInterval
    java.lang.String getDeviceModel() -> getDeviceModel
    void setDeviceModel(java.lang.String) -> setDeviceModel
    com.cooee.shell.moduleupdate.b getShellModule() -> getShellModule
    void setShellModule(com.cooee.shell.moduleupdate.b) -> setShellModule
    com.cooee.shell.moduleupdate.b getDownloaderModule() -> getDownloaderModule
    void setDownloaderModule(com.cooee.shell.moduleupdate.b) -> setDownloaderModule
    com.cooee.shell.moduleupdate.b getChargeModule() -> getChargeModule
    void setChargeModule(com.cooee.shell.moduleupdate.b) -> setChargeModule
com.cooee.shell.moduleupdate.ParseConfigXml -> bf:
    com.cooee.shell.moduleupdate.ConfigData PullXmlText(java.lang.String) -> PullXmlText
    void saveConfigXml(android.content.Context,com.cooee.shell.moduleupdate.ConfigData) -> saveConfigXml
    boolean createXml(java.lang.String,java.lang.String) -> createXml
    boolean createConfigXml(android.content.Context,com.cooee.shell.moduleupdate.ConfigData) -> createConfigXml
    com.cooee.shell.moduleupdate.ConfigData getConfigData(java.io.InputStream) -> getConfigData
com.cooee.shell.moduleupdate.RijndaelCrypt -> bg:
    java.lang.String TRANSFORMATION -> g
    java.lang.String ALGORITHM -> h
    javax.crypto.Cipher _cipher -> i
    javax.crypto.SecretKey _password -> j
    javax.crypto.spec.IvParameterSpec _IVParamSpec -> k
    byte[] IV_CG -> a
    byte[] IV_UF -> b
    byte[] IV_SJ -> c
    java.lang.String PWD_CG -> d
    java.lang.String PWD_UF -> e
    java.lang.String PWD_SJ -> f
    byte[] encryptToByteArray(byte[]) -> encryptToByteArray
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String decrypt(byte[],java.lang.String) -> decrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
com.cooee.shell.moduleupdate.b -> bh:
    java.lang.String a -> a
    int b -> b
    java.lang.StringBuffer c -> c
    java.lang.String d -> d
com.cooee.shell.pay.PayActivityHullV5 -> com.cooee.shell.pay.PayActivityHullV5:
    java.lang.Object a -> a
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onNewIntent(android.content.Intent) -> onNewIntent
com.cooee.shell.pay.PayServiceHullV5 -> com.cooee.shell.pay.PayServiceHullV5:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.cooee.shell.pay.f -> bi:
    android.content.Context a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    java.lang.Class d -> d
    java.lang.Object e -> e
    com.cooee.shell.pay.f f -> f
    com.cooee.shell.pay.f a(android.content.Context) -> a
    java.lang.Class a() -> a
    java.lang.Object b() -> b
    java.lang.Class c() -> c
com.cooee.shell.sdk.AppData -> bj:
    java.lang.String packageName -> a
    java.lang.String appName -> b
    java.lang.String versionCode -> c
    java.lang.String versionName -> d
    java.lang.String appP04 -> e
    boolean equals(com.cooee.shell.sdk.AppData) -> equals
    void setPackageName(java.lang.String) -> setPackageName
    void setAppName(java.lang.String) -> setAppName
    void setVersionCode(java.lang.String) -> setVersionCode
    void setVersionName(java.lang.String) -> setVersionName
    void setAppP04(java.lang.String) -> setAppP04
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    java.lang.String getVersionCode() -> getVersionCode
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getAppP04() -> getAppP04
com.cooee.shell.sdk.AppNameXml -> bk:
    void saveApplistXml(android.content.Context) -> saveApplistXml
    void a(java.util.ArrayList) -> a
    java.util.ArrayList getAppDataFromXml() -> getAppDataFromXml
    boolean a() -> a
    java.io.File b() -> b
    com.cooee.shell.sdk.AppData a(android.content.Context) -> a
com.cooee.shell.sdk.CooeeLog -> bl:
    int mLevel -> a
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.String) -> e
    boolean a(int) -> a
    int a() -> a
com.cooee.shell.sdk.CooeeSdk -> bm:
    android.os.Messenger sendMessenger -> a
    boolean DEBUG -> b
    boolean mIsInitCooeeSdk -> c
    boolean cooeeExistSDCard() -> cooeeExistSDCard
    java.lang.String cooeeGetKernelVersion() -> cooeeGetKernelVersion
    java.lang.String b(android.content.Context) -> b
    java.lang.String cooeeGetSmsSc(android.content.Context,int) -> cooeeGetSmsSc
    java.lang.String GetSimScFromSdcardById(android.content.Context,int) -> GetSimScFromSdcardById
    void SetSimScToSdcard(android.content.Context,int,java.lang.String) -> SetSimScToSdcard
    java.lang.String STGetSimScById(android.content.Context,int) -> STGetSimScById
    java.lang.String MTKGetSimScById(android.content.Context,int) -> MTKGetSimScById
    java.lang.String cooeeGetCustomVersion() -> cooeeGetCustomVersion
    long cooeeGetTotalCallTime(android.content.Context) -> cooeeGetTotalCallTime
    java.lang.String cooeeGetImsi(android.content.Context,int) -> cooeeGetImsi
    java.lang.String c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    java.lang.String cooeeGetAndroidID(android.content.Context) -> cooeeGetAndroidID
    java.lang.String cooeeGetImei(android.content.Context,int) -> cooeeGetImei
    java.lang.String cooeeGetIccid(android.content.Context,int) -> cooeeGetIccid
    java.lang.String cooeeGetPhoneNumber(android.content.Context,int) -> cooeeGetPhoneNumber
    java.lang.String cooeeGetCurNetworkType(android.content.Context) -> cooeeGetCurNetworkType
    java.lang.String cooeeGetMCCMNC(android.content.Context) -> cooeeGetMCCMNC
    java.lang.String cooeeGetLAC(android.content.Context) -> cooeeGetLAC
    java.lang.String cooeeGetCID(android.content.Context) -> cooeeGetCID
    int cooeeGetLcdHeight(android.content.Context) -> cooeeGetLcdHeight
    int cooeeGetLcdWidth(android.content.Context) -> cooeeGetLcdWidth
    java.lang.String cooeeGetBuildId() -> cooeeGetBuildId
    java.lang.String cooeeGetBuildDisplay() -> cooeeGetBuildDisplay
    java.lang.String cooeeGetBuildProduct() -> cooeeGetBuildProduct
    java.lang.String cooeeGetBuildDevice() -> cooeeGetBuildDevice
    java.lang.String cooeeGetBuildBoard() -> cooeeGetBuildBoard
    java.lang.String cooeeGetBuildManufacturer() -> cooeeGetBuildManufacturer
    java.lang.String cooeeGetBuildBrand() -> cooeeGetBuildBrand
    java.lang.String cooeeGetBuildModel() -> cooeeGetBuildModel
    java.lang.String cooeeGetBuildBootloader() -> cooeeGetBuildBootloader
    java.lang.String cooeeGetBuildBaseband() -> cooeeGetBuildBaseband
    java.lang.String cooeeGetBuildHardware() -> cooeeGetBuildHardware
    java.lang.String cooeeGetSerialno() -> cooeeGetSerialno
    java.lang.String cooeeGetBuildFingerprint() -> cooeeGetBuildFingerprint
    java.lang.String cooeeGetBuildVersionRelease() -> cooeeGetBuildVersionRelease
    int cooeeGetVersionSdkInt() -> cooeeGetVersionSdkInt
    java.lang.String cooeeGetBuildTags() -> cooeeGetBuildTags
    java.lang.String cooeeGetBuildType() -> cooeeGetBuildType
    java.lang.String cooeeGetVersionIncremental() -> cooeeGetVersionIncremental
    long cooeeGetCurRunTime() -> cooeeGetCurRunTime
    long cooeeGetTotalRunTime() -> cooeeGetTotalRunTime
    int cooeeGetSmsNum(android.content.Context) -> cooeeGetSmsNum
    long cooeeGetTotalRom() -> cooeeGetTotalRom
    long cooeeGetAvailRom() -> cooeeGetAvailRom
    long cooeeGetTotalMem() -> cooeeGetTotalMem
    long cooeeGetAvailMem(android.content.Context) -> cooeeGetAvailMem
    long cooeeGetDefaultSimId(android.content.Context) -> cooeeGetDefaultSimId
    void cooeeSetDefaultSimId(android.content.Context) -> cooeeSetDefaultSimId
    java.lang.String cooeeGetCooeeId(android.content.Context) -> cooeeGetCooeeId
    java.lang.String cooeeGetProjectInfo(android.content.Context) -> cooeeGetProjectInfo
    java.lang.String cooeeGetProjectXmlStr(android.content.Context) -> cooeeGetProjectXmlStr
    byte[] getPostBufToByte(android.content.Context,java.lang.String) -> getPostBufToByte
    byte[] getPostBufToByte(android.content.Context,java.lang.String,java.lang.String,byte[]) -> getPostBufToByte
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Class,java.lang.Object) -> a
    void initCooeeSdk(android.content.Context) -> initCooeeSdk
    void startShellServiceByBootReceiver(android.content.Context) -> startShellServiceByBootReceiver
    boolean shellServiceIsStart(java.util.List,java.lang.String) -> shellServiceIsStart
    java.lang.String getRunningServicePackageName(android.content.Context,java.lang.String) -> getRunningServicePackageName
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    void gotoGameActivity(android.content.Context) -> gotoGameActivity
    void appExitNotifyCooeeSdk(android.content.Context,int) -> appExitNotifyCooeeSdk
    void appExitNotifyCooeeSdkForResult(android.app.Activity,int) -> appExitNotifyCooeeSdkForResult
    void a(android.content.Context) -> a
com.cooee.shell.sdk.ExceptionLog -> bn:
    void writeShellExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String) -> writeShellExceptionToXml
    void writePayExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String) -> writePayExceptionToXml
    void writeExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String,java.lang.String) -> writeExceptionToXml
    java.lang.String getExceptionXmlStr() -> getExceptionXmlStr
    void delExceptionXml() -> delExceptionXml
    boolean hasExceptionXml() -> hasExceptionXml
    void writeExceptionTime(int) -> writeExceptionTime
    int getExceptionTime() -> getExceptionTime
    void writeExceptionToFile(java.lang.Throwable) -> writeExceptionToFile
    void writeShellUpdateExceptionFile(android.content.Context,java.lang.String) -> writeShellUpdateExceptionFile
    java.lang.String getShellUpdateExceptionStr(android.content.Context) -> getShellUpdateExceptionStr
    void delShellUpdateExceptionFile(android.content.Context) -> delShellUpdateExceptionFile
com.cooee.shell.sdk.JarFileUtils -> bo:
    void copyAllJarsAndCheckVersion(android.content.Context) -> copyAllJarsAndCheckVersion
    boolean copyPayJarAndCheckVersion(android.content.Context) -> copyPayJarAndCheckVersion
    boolean copyShellJarAndCheckVersion(android.content.Context) -> copyShellJarAndCheckVersion
    boolean copyJarAndCheckVersion(android.content.Context,java.lang.String) -> copyJarAndCheckVersion
    boolean copyFileToFile(java.io.File,java.io.File) -> copyFileToFile
    boolean copyShellJarFrommAssetsToPrivate(android.content.Context) -> copyShellJarFrommAssetsToPrivate
    boolean copyPayJarFrommAssetsToPrivate(android.content.Context) -> copyPayJarFrommAssetsToPrivate
    boolean copyFileFromAssetsToPrivate(android.content.Context,java.lang.String,java.io.File) -> copyFileFromAssetsToPrivate
    boolean copyAssetsToFile(android.content.Context,java.lang.String,java.io.File) -> copyAssetsToFile
    int compareFileVersion(android.content.Context,java.io.File,java.io.File) -> compareFileVersion
    void deleteDexFile(java.lang.String) -> deleteDexFile
    boolean isFileLegal(java.io.File) -> isFileLegal
    boolean createNewFile(java.io.File) -> createNewFile
    void createFileNeedDir(java.io.File) -> createFileNeedDir
    java.io.File getPayPrivateFile(android.content.Context) -> getPayPrivateFile
    java.io.File getShellPrivateFile(android.content.Context) -> getShellPrivateFile
    java.io.File getSdcardFile(java.lang.String) -> getSdcardFile
    java.io.File getPrivateFile(android.content.Context,java.lang.String) -> getPrivateFile
    java.lang.String getJarVersion(android.content.Context,java.lang.String) -> getJarVersion
    java.lang.String getPrivateJarVersion(android.content.Context,java.lang.String) -> getPrivateJarVersion
    java.lang.String getPrivateShellJarVersion(android.content.Context) -> getPrivateShellJarVersion
    java.lang.String getPrivatePayJarVersion(android.content.Context) -> getPrivatePayJarVersion
    java.lang.String getPrivateDownloadJarVersion(android.content.Context) -> getPrivateDownloadJarVersion
com.cooee.shell.sdk.SdkClassUtils -> bp:
    java.lang.String getShellServiceHullClassName() -> getShellServiceHullClassName
    java.lang.String getPayServiceHullClassName() -> getPayServiceHullClassName
    java.lang.String getShellActivityHullClassName() -> getShellActivityHullClassName
    java.lang.String getPayActivityHullClassName() -> getPayActivityHullClassName
    java.lang.String getDownloadActivityHullClassName() -> getDownloadActivityHullClassName
    java.lang.String getShellReceiverHullClassName() -> getShellReceiverHullClassName
com.cooee.shell.sdk.SdkPathUtils -> bq:
    java.lang.String GET_SHELL_MODULE() -> GET_SHELL_MODULE
    java.lang.String GET_PAY_MODULE() -> GET_PAY_MODULE
    java.lang.String GET_SDK_DIR() -> GET_SDK_DIR
    java.lang.String GET_MODULE_DIR() -> GET_MODULE_DIR
    java.lang.String GET_SHELL_DIR() -> GET_SHELL_DIR
    java.lang.String GET_PAY_DIR() -> GET_PAY_DIR
    java.lang.String GET_DOWNLOAD_DIR() -> GET_DOWNLOAD_DIR
    java.lang.String getSdkSdcardDir() -> getSdkSdcardDir
    java.lang.String getModuleSdcardDir() -> getModuleSdcardDir
    java.lang.String getModulePrivateDir(android.content.Context) -> getModulePrivateDir
    java.lang.String getModuleDir(android.content.Context) -> getModuleDir
    java.lang.String getShellJarSdcardPath() -> getShellJarSdcardPath
    java.lang.String getShellJarPrivatePath(android.content.Context) -> getShellJarPrivatePath
    java.lang.String getShellJarPath(android.content.Context) -> getShellJarPath
    java.lang.String getPayJarSdcardPath() -> getPayJarSdcardPath
    java.lang.String getPayJarPrivatePath(android.content.Context) -> getPayJarPrivatePath
    java.lang.String getPayJarPath(android.content.Context) -> getPayJarPath
    java.lang.String getShellPrivateDir(android.content.Context) -> getShellPrivateDir
    java.lang.String getShellSdcardDir() -> getShellSdcardDir
    java.lang.String getShellDir(android.content.Context) -> getShellDir
    java.lang.String getPayPrivateDir(android.content.Context) -> getPayPrivateDir
    java.lang.String getPaySdcardDir() -> getPaySdcardDir
    java.lang.String getPayDir(android.content.Context) -> getPayDir
    void createJarSdcardDir() -> createJarSdcardDir
    void createJarPrivateDir(android.content.Context) -> createJarPrivateDir
    void createJarDir(android.content.Context) -> createJarDir
com.cooee.shell.sdk.a -> br:
    android.content.Context a -> a
    void run() -> run
com.cooee.shell.sdk.b -> bs:
    byte[] a(android.content.Context,java.lang.String) -> a
    int a(android.content.Context,java.lang.String,byte[]) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
    byte[] a(java.lang.String) -> a
com.cooee.shell.sdk.c -> bt:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.cooee.shell.shell.SdkActivityHullV5 -> com.cooee.shell.shell.SdkActivityHullV5:
    java.lang.String STRING_NAME -> a
    int a -> b
    java.lang.Class b -> c
    java.lang.Object c -> d
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.Exception) -> a
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.cooee.shell.shell.SdkReceiverHullV5 -> com.cooee.shell.shell.SdkReceiverHullV5:
    java.lang.Object a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
com.cooee.shell.shell.SdkServiceHullV5 -> com.cooee.shell.shell.SdkServiceHullV5:
    java.lang.Class a -> a
    java.lang.Object b -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.cooee.statistics.CustomerHttpClientNew -> com.cooee.statistics.CustomerHttpClientNew:
    java.lang.String CHARSET -> CHARSET
    org.apache.http.client.HttpClient customerHttpClient -> customerHttpClient
    android.content.Context context -> context
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    java.lang.String[] post(java.lang.String,java.lang.String,android.content.Context) -> post
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
com.cooee.statistics.StaticClassNew -> com.cooee.statistics.StaticClassNew:
    int DATANUM -> DATANUM
    int DELAY -> DELAY
com.cooee.statistics.StatisticsBaseNew -> com.cooee.statistics.StatisticsBaseNew:
    boolean enable_Statistics_LOG -> enable_Statistics_LOG
    android.content.Context mContext -> mContext
    java.lang.String LOG_URL -> LOG_URL
    java.lang.String LOG_URL_TEST -> LOG_URL_TEST
    java.lang.String DEFAULT_KEY -> DEFAULT_KEY
    java.lang.String DEFAULT_ERRTIME -> DEFAULT_ERRTIME
    java.lang.String ERRTIME -> ERRTIME
    java.lang.String ERRCOUNT -> ERRCOUNT
    java.lang.String SUCCESSTIME -> SUCCESSTIME
    java.lang.String errtime -> errtime
    java.util.ArrayList idSet -> idSet
    java.lang.String TAG -> TAG
    java.lang.String PATH_ENABLE_LOG -> PATH_ENABLE_LOG
    android.content.SharedPreferences preferences -> preferences
    java.lang.String ACTION_REGISTER -> ACTION_REGISTER
    java.lang.String ACTION_DAILY_ATTENDANCE -> ACTION_DAILY_ATTENDANCE
    java.lang.String ACTION_USE -> ACTION_USE
    java.lang.String ACTION_START_UP -> ACTION_START_UP
    java.lang.String ACTION_CONFIG_UPDATE -> ACTION_CONFIG_UPDATE
    java.lang.String ACTION_START_DOWNLOAD -> ACTION_START_DOWNLOAD
    java.lang.String ACTION_INSTALL -> ACTION_INSTALL
    java.lang.String ACTION_DEFAULT_THEME_REGISTER -> ACTION_DEFAULT_THEME_REGISTER
    java.lang.String ACTION_DEFAULT_THEME_USE -> ACTION_DEFAULT_THEME_USE
    java.lang.String ACTION_DEFAULT_THEME_CHANGE -> ACTION_DEFAULT_THEME_CHANGE
    java.lang.String ACTION_OPEN_CONTROL_CENTER -> ACTION_OPEN_CONTROL_CENTER
    java.lang.String ACTION_CLICK_HEART_APP -> ACTION_CLICK_HEART_APP
    java.lang.String PREFERENCE_KEY -> PREFERENCE_KEY
    java.lang.String NEXT_0011_TIME_KEY -> NEXT_0011_TIME_KEY
    boolean have_action_0011 -> have_action_0011
    java.lang.String IMSI -> IMSI
    java.lang.String default_theme_register -> default_theme_register
    java.lang.String default_theme_change -> default_theme_change
    java.lang.String register_id -> register_id
    android.app.Service service -> service
    android.os.HandlerThread handlerThread -> handlerThread
    android.os.Handler mHandler -> mHandler
    java.lang.Object threadSync -> threadSync
    java.lang.Runnable UploadRun -> UploadRun
    char[] hexDigits -> hexDigits
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void packageOnEvent(android.app.Service,java.lang.String,java.lang.String) -> packageOnEvent
    boolean ErrTimeTransfinite(com.cooee.statistics.StatisticsBaseNew$TYPE) -> ErrTimeTransfinite
    boolean SuccessTimeTransfinite() -> SuccessTimeTransfinite
    void checkThread() -> checkThread
    void exitThread() -> exitThread
    void setApplicationContext(android.content.Context) -> setApplicationContext
    java.lang.String getSDPath() -> getSDPath
    void packageSetAppContext(android.content.Context) -> packageSetAppContext
    android.content.Context getApplicationContext() -> getApplicationContext
    boolean exitErrTime() -> exitErrTime
    void clearErrTimeAndCount() -> clearErrTimeAndCount
    void recordErrTime() -> recordErrTime
    void recordSuccessTime() -> recordSuccessTime
    void recordErrCount(int) -> recordErrCount
    void delAllData() -> delAllData
    int getErrTimes() -> getErrTimes
    boolean IsHaveInternet(android.content.Context) -> IsHaveInternet
    java.lang.String getLogInformation() -> getLogInformation
    java.lang.String getCurTime() -> getCurTime
    java.lang.String getParams(java.lang.String,boolean) -> getParams
    java.lang.String getMyUUID(android.content.Context) -> getMyUUID
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
    java.lang.String bufferToHex(byte[],int,int) -> bufferToHex
    void appendHexPair(byte,java.lang.StringBuffer) -> appendHexPair
    java.lang.String getParams0017NoMd5(java.lang.String) -> getParams0017NoMd5
    java.lang.String getParams0017List(java.lang.String,java.lang.String) -> getParams0017List
    java.lang.String getParams0017WithMd5(java.lang.String,java.lang.String) -> getParams0017WithMd5
    boolean isNeedLog(java.lang.String) -> isNeedLog
    void setNextLog0011Time() -> setNextLog0011Time
    java.lang.String md5Picture(android.content.Context,java.lang.String) -> md5Picture
    android.os.Handler access$0() -> access$0
    java.lang.Runnable access$1() -> access$1
    android.content.Context access$2() -> access$2
    boolean access$3(android.content.Context) -> access$3
    void access$4() -> access$4
    java.lang.String access$5() -> access$5
    boolean access$6() -> access$6
    void access$7() -> access$7
    java.lang.String access$8() -> access$8
    java.lang.String access$9() -> access$9
    java.util.ArrayList access$10() -> access$10
    void access$11(java.lang.String) -> access$11
    java.lang.String access$12() -> access$12
    void access$13(java.lang.String) -> access$13
    java.lang.String access$14() -> access$14
    void access$15(java.lang.String) -> access$15
    void access$16() -> access$16
    void access$17() -> access$17
    void access$18() -> access$18
    int access$19() -> access$19
    void access$20(int) -> access$20
    void access$21() -> access$21
com.cooee.statistics.StatisticsBaseNew$1 -> bu:
    void run() -> run
com.cooee.statistics.StatisticsBaseNew$TYPE -> bv:
    com.cooee.statistics.StatisticsBaseNew$TYPE RETRYINTERVAL -> RETRYINTERVAL
    com.cooee.statistics.StatisticsBaseNew$TYPE ONEDAYINTERVAL -> ONEDAYINTERVAL
    com.cooee.statistics.StatisticsBaseNew$TYPE[] ENUM$VALUES -> ENUM$VALUES
    com.cooee.statistics.StatisticsBaseNew$TYPE[] values() -> values
    com.cooee.statistics.StatisticsBaseNew$TYPE valueOf(java.lang.String) -> valueOf
com.cooee.statistics.StatisticsExpandNew -> com.cooee.statistics.StatisticsExpandNew:
    java.lang.String CONFIG_FILE_NAME -> CONFIG_FILE_NAME
    java.lang.String readTextFile(java.io.InputStream) -> readTextFile
    com.cooee.statistics.StatisticsExpandNew$AppidAndSn procSNandAppid(android.content.Context,int,java.lang.String) -> procSNandAppid
    void register(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> register
    void dailyAttendance(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> dailyAttendance
    void use(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> use
    void onEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> onEvent
    void startUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> startUp
    void configUpdate(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> configUpdate
    void startDownload(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> startDownload
    void install(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> install
    void register_default_theme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> register_default_theme
    void useDefaultTheme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> useDefaultTheme
    void setStatiisticsLogEnable(boolean) -> setStatiisticsLogEnable
    java.lang.String md5Picture(android.content.Context,java.lang.String) -> md5Picture
com.cooee.statistics.StatisticsExpandNew$AppidAndSn -> bw:
    java.lang.String sn -> a
    java.lang.String appid -> b
    java.lang.String getSn() -> getSn
    void setSn(java.lang.String) -> setSn
    java.lang.String getAppid() -> getAppid
    void setAppid(java.lang.String) -> setAppid
com.cooee.statistics.StatisticsServiceNew -> com.cooee.statistics.StatisticsServiceNew:
    java.lang.String EXTRA_EVENT_ID -> EXTRA_EVENT_ID
    java.lang.String EXTRA_PARAMS -> EXTRA_PARAMS
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void handleCommand(android.content.Intent) -> handleCommand
com.cooee.statistics.databaseNew.ConfigDBNew -> com.cooee.statistics.databaseNew.ConfigDBNew:
    java.lang.String KEY_NAME -> KEY_NAME
    java.lang.String KEY_VALUE -> KEY_VALUE
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    java.lang.String DEFAULT_ERRTIME -> DEFAULT_ERRTIME
    java.lang.String ERRTIME -> ERRTIME
    java.lang.String ERRCOUNT -> ERRCOUNT
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    void initconfdb() -> initconfdb
    com.cooee.statistics.databaseNew.ConfigDBNew open() -> open
    void close() -> close
    long insertTitle(java.lang.String,java.lang.String) -> insertTitle
    boolean deleteTitle(java.lang.String) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    java.lang.String getTitle(java.lang.String) -> getTitle
    boolean updateTitle(java.lang.String,java.lang.String) -> updateTitle
com.cooee.statistics.databaseNew.DatabaseHelperNew -> com.cooee.statistics.databaseNew.DatabaseHelperNew:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.cooee.statistics.databaseNew.JournalDBNew -> com.cooee.statistics.databaseNew.JournalDBNew:
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_LOGTEXT -> KEY_LOGTEXT
    java.lang.String KEY_UPLOADTIME -> KEY_UPLOADTIME
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    com.cooee.statistics.databaseNew.JournalDBNew open() -> open
    void close() -> close
    long insertTitle(java.lang.String) -> insertTitle
    long insertAllInfo(java.lang.String,java.lang.String) -> insertAllInfo
    boolean deleteTitle(long) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    boolean updateTitle(long,java.lang.String) -> updateTitle
    boolean updateAllInfo(long,java.lang.String,java.lang.String) -> updateAllInfo
    java.lang.String getCurTime() -> getCurTime
com.esotericsoftware.tablelayout.BaseTableLayout -> bx:
    int CENTER -> CENTER
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int SCALE_FIT -> SCALE_FIT
    int SCALE_FILL -> SCALE_FILL
    int SCALE_STRETCH -> SCALE_STRETCH
    java.lang.String MIN -> MIN
    java.lang.String PREF -> PREF
    java.lang.String MAX -> MAX
    int DEBUG_NONE -> DEBUG_NONE
    int DEBUG_ALL -> DEBUG_ALL
    int DEBUG_TABLE -> DEBUG_TABLE
    int DEBUG_CELL -> DEBUG_CELL
    int DEBUG_WIDGET -> DEBUG_WIDGET
    com.esotericsoftware.tablelayout.Toolkit toolkit -> toolkit
    java.lang.Object table -> table
    java.util.HashMap nameToWidget -> nameToWidget
    java.util.HashMap widgetToCell -> widgetToCell
    int columns -> columns
    int rows -> rows
    java.util.ArrayList cells -> cells
    com.esotericsoftware.tablelayout.Cell cellDefaults -> cellDefaults
    java.util.ArrayList columnDefaults -> columnDefaults
    com.esotericsoftware.tablelayout.Cell rowDefaults -> rowDefaults
    int layoutX -> layoutX
    int layoutY -> layoutY
    int layoutWidth -> layoutWidth
    int layoutHeight -> layoutHeight
    boolean sizeInvalid -> sizeInvalid
    int[] columnMinWidth -> columnMinWidth
    int[] rowMinHeight -> rowMinHeight
    int[] columnPrefWidth -> columnPrefWidth
    int[] rowPrefHeight -> rowPrefHeight
    int tableMinWidth -> tableMinWidth
    int tableMinHeight -> tableMinHeight
    int tablePrefWidth -> tablePrefWidth
    int tablePrefHeight -> tablePrefHeight
    int[] columnWidth -> columnWidth
    int[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    int[] columnWeightedWidth -> columnWeightedWidth
    int[] rowWeightedHeight -> rowWeightedHeight
    java.lang.String width -> width
    java.lang.String height -> height
    java.lang.String padTop -> padTop
    java.lang.String padLeft -> padLeft
    java.lang.String padBottom -> padBottom
    java.lang.String padRight -> padRight
    int align -> align
    int debug -> debug
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void setLayoutSize(int,int,int,int) -> setLayoutSize
    java.lang.Object register(java.lang.String,java.lang.Object) -> register
    void parse(java.lang.String) -> parse
    com.esotericsoftware.tablelayout.Cell add(java.lang.Object) -> add
    com.esotericsoftware.tablelayout.Cell stack(java.lang.Object[]) -> stack
    com.esotericsoftware.tablelayout.Cell row() -> row
    void endRow() -> endRow
    com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    void reset() -> reset
    void clear() -> clear
    java.lang.Object getWidget(java.lang.String) -> getWidget
    java.util.List getWidgets() -> getWidgets
    java.util.List getWidgets(java.lang.String) -> getWidgets
    com.esotericsoftware.tablelayout.Cell getCell(java.lang.Object) -> getCell
    com.esotericsoftware.tablelayout.Cell getCell(java.lang.String) -> getCell
    java.util.List getAllCells() -> getAllCells
    java.util.List getAllCells(java.lang.String) -> getAllCells
    java.util.List getCells() -> getCells
    void setWidget(java.lang.String,java.lang.Object) -> setWidget
    void setParent(com.esotericsoftware.tablelayout.BaseTableLayout) -> setParent
    void setToolkit(com.esotericsoftware.tablelayout.Toolkit) -> setToolkit
    java.lang.Object getTable() -> getTable
    void setTable(java.lang.Object) -> setTable
    int getLayoutX() -> getLayoutX
    int getLayoutY() -> getLayoutY
    int getLayoutWidth() -> getLayoutWidth
    int getLayoutHeight() -> getLayoutHeight
    int getMinWidth() -> getMinWidth
    int getMinHeight() -> getMinHeight
    int getPrefWidth() -> getPrefWidth
    int getPrefHeight() -> getPrefHeight
    com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    com.esotericsoftware.tablelayout.Toolkit getToolkit() -> getToolkit
    com.esotericsoftware.tablelayout.BaseTableLayout size(java.lang.String,java.lang.String) -> size
    com.esotericsoftware.tablelayout.BaseTableLayout width(java.lang.String) -> width
    com.esotericsoftware.tablelayout.BaseTableLayout height(java.lang.String) -> height
    com.esotericsoftware.tablelayout.BaseTableLayout size(int,int) -> size
    com.esotericsoftware.tablelayout.BaseTableLayout width(int) -> width
    com.esotericsoftware.tablelayout.BaseTableLayout height(int) -> height
    com.esotericsoftware.tablelayout.BaseTableLayout pad(java.lang.String) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout pad(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout padTop(java.lang.String) -> padTop
    com.esotericsoftware.tablelayout.BaseTableLayout padLeft(java.lang.String) -> padLeft
    com.esotericsoftware.tablelayout.BaseTableLayout padBottom(java.lang.String) -> padBottom
    com.esotericsoftware.tablelayout.BaseTableLayout padRight(java.lang.String) -> padRight
    com.esotericsoftware.tablelayout.BaseTableLayout pad(int) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout pad(int,int,int,int) -> pad
    com.esotericsoftware.tablelayout.BaseTableLayout padTop(int) -> padTop
    com.esotericsoftware.tablelayout.BaseTableLayout padLeft(int) -> padLeft
    com.esotericsoftware.tablelayout.BaseTableLayout padBottom(int) -> padBottom
    com.esotericsoftware.tablelayout.BaseTableLayout padRight(int) -> padRight
    com.esotericsoftware.tablelayout.BaseTableLayout align(int) -> align
    com.esotericsoftware.tablelayout.BaseTableLayout align(java.lang.String) -> align
    com.esotericsoftware.tablelayout.BaseTableLayout center() -> center
    com.esotericsoftware.tablelayout.BaseTableLayout top() -> top
    com.esotericsoftware.tablelayout.BaseTableLayout left() -> left
    com.esotericsoftware.tablelayout.BaseTableLayout bottom() -> bottom
    com.esotericsoftware.tablelayout.BaseTableLayout right() -> right
    com.esotericsoftware.tablelayout.BaseTableLayout debug() -> debug
    com.esotericsoftware.tablelayout.BaseTableLayout debug(int) -> debug
    com.esotericsoftware.tablelayout.BaseTableLayout debug(java.lang.String) -> debug
    int getDebug() -> getDebug
    java.lang.String getWidth() -> getWidth
    java.lang.String getHeight() -> getHeight
    java.lang.String getPadTop() -> getPadTop
    java.lang.String getPadLeft() -> getPadLeft
    java.lang.String getPadBottom() -> getPadBottom
    java.lang.String getPadRight() -> getPadRight
    int getAlign() -> getAlign
    int getRow(float) -> getRow
    int[] ensureSize(int[],int) -> ensureSize
    float[] ensureSize(float[],int) -> ensureSize
    void computeSize() -> computeSize
    void layout() -> layout
com.esotericsoftware.tablelayout.Cell -> by:
    java.lang.String minWidth -> a
    java.lang.String minHeight -> b
    java.lang.String prefWidth -> c
    java.lang.String prefHeight -> d
    java.lang.String maxWidth -> e
    java.lang.String maxHeight -> f
    java.lang.String spaceTop -> g
    java.lang.String spaceLeft -> h
    java.lang.String spaceBottom -> i
    java.lang.String spaceRight -> j
    java.lang.String padTop -> k
    java.lang.String padLeft -> l
    java.lang.String padBottom -> m
    java.lang.String padRight -> n
    java.lang.Float fillX -> o
    java.lang.Float fillY -> p
    java.lang.Integer align -> q
    java.lang.Integer expandX -> r
    java.lang.Integer expandY -> s
    java.lang.Boolean ignore -> t
    java.lang.Integer colspan -> u
    java.lang.Boolean uniformX -> v
    java.lang.Boolean uniformY -> w
    java.lang.String name -> x
    java.lang.Integer scaling -> y
    java.lang.Object widget -> z
    int widgetX -> A
    int widgetY -> B
    int widgetWidth -> C
    int widgetHeight -> D
    com.esotericsoftware.tablelayout.BaseTableLayout layout -> M
    boolean endRow -> E
    int column -> F
    int row -> G
    int cellAboveIndex -> H
    int computedPadTop -> I
    int computedPadLeft -> J
    int computedPadBottom -> K
    int computedPadRight -> L
    void set(com.esotericsoftware.tablelayout.Cell) -> a
    com.esotericsoftware.tablelayout.Cell setWidget(java.lang.Object) -> setWidget
    java.lang.String getName() -> getName
    java.lang.Object getWidget() -> getWidget
    com.esotericsoftware.tablelayout.Cell size(java.lang.String) -> size
    com.esotericsoftware.tablelayout.Cell size(java.lang.String,java.lang.String) -> size
    com.esotericsoftware.tablelayout.Cell size(int) -> size
    com.esotericsoftware.tablelayout.Cell size(int,int) -> size
    com.esotericsoftware.tablelayout.Cell width(java.lang.String) -> width
    com.esotericsoftware.tablelayout.Cell width(int) -> width
    com.esotericsoftware.tablelayout.Cell height(java.lang.String) -> height
    com.esotericsoftware.tablelayout.Cell height(int) -> height
    com.esotericsoftware.tablelayout.Cell minSize(java.lang.String) -> minSize
    com.esotericsoftware.tablelayout.Cell minSize(java.lang.String,java.lang.String) -> minSize
    com.esotericsoftware.tablelayout.Cell minWidth(java.lang.String) -> minWidth
    com.esotericsoftware.tablelayout.Cell minHeight(java.lang.String) -> minHeight
    com.esotericsoftware.tablelayout.Cell minSize(int) -> minSize
    com.esotericsoftware.tablelayout.Cell minSize(int,int) -> minSize
    com.esotericsoftware.tablelayout.Cell minWidth(int) -> minWidth
    com.esotericsoftware.tablelayout.Cell minHeight(int) -> minHeight
    com.esotericsoftware.tablelayout.Cell prefSize(java.lang.String) -> prefSize
    com.esotericsoftware.tablelayout.Cell prefSize(java.lang.String,java.lang.String) -> prefSize
    com.esotericsoftware.tablelayout.Cell prefWidth(java.lang.String) -> prefWidth
    com.esotericsoftware.tablelayout.Cell prefHeight(java.lang.String) -> prefHeight
    com.esotericsoftware.tablelayout.Cell prefSize(int,int) -> prefSize
    com.esotericsoftware.tablelayout.Cell prefSize(int) -> prefSize
    com.esotericsoftware.tablelayout.Cell prefWidth(int) -> prefWidth
    com.esotericsoftware.tablelayout.Cell prefHeight(int) -> prefHeight
    com.esotericsoftware.tablelayout.Cell maxSize(java.lang.String) -> maxSize
    com.esotericsoftware.tablelayout.Cell maxSize(java.lang.String,java.lang.String) -> maxSize
    com.esotericsoftware.tablelayout.Cell maxWidth(java.lang.String) -> maxWidth
    com.esotericsoftware.tablelayout.Cell maxHeight(java.lang.String) -> maxHeight
    com.esotericsoftware.tablelayout.Cell maxSize(int) -> maxSize
    com.esotericsoftware.tablelayout.Cell maxSize(int,int) -> maxSize
    com.esotericsoftware.tablelayout.Cell maxWidth(int) -> maxWidth
    com.esotericsoftware.tablelayout.Cell maxHeight(int) -> maxHeight
    com.esotericsoftware.tablelayout.Cell space(java.lang.String) -> space
    com.esotericsoftware.tablelayout.Cell space(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> space
    com.esotericsoftware.tablelayout.Cell spaceTop(java.lang.String) -> spaceTop
    com.esotericsoftware.tablelayout.Cell spaceLeft(java.lang.String) -> spaceLeft
    com.esotericsoftware.tablelayout.Cell spaceBottom(java.lang.String) -> spaceBottom
    com.esotericsoftware.tablelayout.Cell spaceRight(java.lang.String) -> spaceRight
    com.esotericsoftware.tablelayout.Cell space(int) -> space
    com.esotericsoftware.tablelayout.Cell space(int,int,int,int) -> space
    com.esotericsoftware.tablelayout.Cell spaceTop(int) -> spaceTop
    com.esotericsoftware.tablelayout.Cell spaceLeft(int) -> spaceLeft
    com.esotericsoftware.tablelayout.Cell spaceBottom(int) -> spaceBottom
    com.esotericsoftware.tablelayout.Cell spaceRight(int) -> spaceRight
    com.esotericsoftware.tablelayout.Cell pad(java.lang.String) -> pad
    com.esotericsoftware.tablelayout.Cell pad(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pad
    com.esotericsoftware.tablelayout.Cell padTop(java.lang.String) -> padTop
    com.esotericsoftware.tablelayout.Cell padLeft(java.lang.String) -> padLeft
    com.esotericsoftware.tablelayout.Cell padBottom(java.lang.String) -> padBottom
    com.esotericsoftware.tablelayout.Cell padRight(java.lang.String) -> padRight
    com.esotericsoftware.tablelayout.Cell pad(int) -> pad
    com.esotericsoftware.tablelayout.Cell pad(int,int,int,int) -> pad
    com.esotericsoftware.tablelayout.Cell padTop(int) -> padTop
    com.esotericsoftware.tablelayout.Cell padLeft(int) -> padLeft
    com.esotericsoftware.tablelayout.Cell padBottom(int) -> padBottom
    com.esotericsoftware.tablelayout.Cell padRight(int) -> padRight
    com.esotericsoftware.tablelayout.Cell fill() -> fill
    com.esotericsoftware.tablelayout.Cell fillX() -> fillX
    com.esotericsoftware.tablelayout.Cell fillY() -> fillY
    com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float) -> fill
    com.esotericsoftware.tablelayout.Cell fill(boolean,boolean) -> fill
    com.esotericsoftware.tablelayout.Cell align(java.lang.Integer) -> align
    com.esotericsoftware.tablelayout.Cell align(java.lang.String) -> align
    com.esotericsoftware.tablelayout.Cell center() -> center
    com.esotericsoftware.tablelayout.Cell top() -> top
    com.esotericsoftware.tablelayout.Cell left() -> left
    com.esotericsoftware.tablelayout.Cell bottom() -> bottom
    com.esotericsoftware.tablelayout.Cell right() -> right
    com.esotericsoftware.tablelayout.Cell expand() -> expand
    com.esotericsoftware.tablelayout.Cell expandX() -> expandX
    com.esotericsoftware.tablelayout.Cell expandY() -> expandY
    com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer) -> expand
    com.esotericsoftware.tablelayout.Cell expand(boolean,boolean) -> expand
    com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean) -> ignore
    com.esotericsoftware.tablelayout.Cell ignore() -> ignore
    boolean getIgnore() -> getIgnore
    com.esotericsoftware.tablelayout.Cell colspan(java.lang.Integer) -> colspan
    com.esotericsoftware.tablelayout.Cell uniform() -> uniform
    com.esotericsoftware.tablelayout.Cell uniformX() -> uniformX
    com.esotericsoftware.tablelayout.Cell uniformY() -> uniformY
    com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean) -> uniform
    void scaling(java.lang.String) -> scaling
    void scaling(java.lang.Integer) -> scaling
    int getWidgetX() -> getWidgetX
    int getWidgetY() -> getWidgetY
    int getWidgetWidth() -> getWidgetWidth
    int getWidgetHeight() -> getWidgetHeight
    int getColumn() -> getColumn
    int getRow() -> getRow
    java.lang.String getMinWidth() -> getMinWidth
    java.lang.String getMinHeight() -> getMinHeight
    java.lang.String getPrefWidth() -> getPrefWidth
    java.lang.String getPrefHeight() -> getPrefHeight
    java.lang.String getMaxWidth() -> getMaxWidth
    java.lang.String getMaxHeight() -> getMaxHeight
    java.lang.String getSpaceTop() -> getSpaceTop
    java.lang.String getSpaceLeft() -> getSpaceLeft
    java.lang.String getSpaceBottom() -> getSpaceBottom
    java.lang.String getSpaceRight() -> getSpaceRight
    java.lang.String getPadTop() -> getPadTop
    java.lang.String getPadLeft() -> getPadLeft
    java.lang.String getPadBottom() -> getPadBottom
    java.lang.String getPadRight() -> getPadRight
    java.lang.Float getFillX() -> getFillX
    java.lang.Float getFillY() -> getFillY
    java.lang.Integer getAlign() -> getAlign
    java.lang.Integer getExpandX() -> getExpandX
    java.lang.Integer getExpandY() -> getExpandY
    java.lang.Integer getColspan() -> getColspan
    java.lang.Boolean getUniformX() -> getUniformX
    java.lang.Boolean getUniformY() -> getUniformY
    java.lang.Integer getScaling() -> getScaling
    boolean isEndRow() -> isEndRow
    int getComputedPadTop() -> getComputedPadTop
    int getComputedPadLeft() -> getComputedPadLeft
    int getComputedPadBottom() -> getComputedPadBottom
    int getComputedPadRight() -> getComputedPadRight
    com.esotericsoftware.tablelayout.Cell defaults(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
com.esotericsoftware.tablelayout.ParseException -> bz:
    int line -> line
    int column -> column
com.esotericsoftware.tablelayout.TableLayoutParser -> ca:
    byte[] _tableLayout_actions -> a
    short[] _tableLayout_key_offsets -> b
    char[] _tableLayout_trans_keys -> c
    byte[] _tableLayout_single_lengths -> d
    byte[] _tableLayout_range_lengths -> e
    short[] _tableLayout_index_offsets -> f
    short[] _tableLayout_indicies -> g
    short[] _tableLayout_trans_targs -> h
    short[] _tableLayout_trans_actions -> i
    void parse(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> parse
    byte[] init__tableLayout_actions_0() -> a
    char[] init__tableLayout_trans_keys_0() -> b
    short[] init__tableLayout_indicies_0() -> c
    short[] init__tableLayout_trans_targs_0() -> d
    short[] init__tableLayout_trans_actions_0() -> e
com.esotericsoftware.tablelayout.Toolkit -> cb:
    java.util.ArrayList classPrefixes -> classPrefixes
    void addChild(java.lang.Object,java.lang.Object,java.lang.String) -> addChild
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    int getMinWidth(java.lang.Object) -> getMinWidth
    int getMinHeight(java.lang.Object) -> getMinHeight
    int getPrefWidth(java.lang.Object) -> getPrefWidth
    int getPrefHeight(java.lang.Object) -> getPrefHeight
    int getMaxWidth(java.lang.Object) -> getMaxWidth
    int getMaxHeight(java.lang.Object) -> getMaxHeight
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,int,int,int,int,int) -> addDebugRectangle
    java.lang.Object newStack() -> newStack
    com.esotericsoftware.tablelayout.BaseTableLayout getLayout(java.lang.Object) -> getLayout
    java.lang.Object newTable(java.lang.Object) -> newTable
    void setWidget(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.Cell,java.lang.Object) -> setWidget
    int getWidgetWidth(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.String) -> getWidgetWidth
    int getWidgetHeight(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.String) -> getWidgetHeight
    java.lang.String validateSize(java.lang.String) -> validateSize
    java.lang.Object newWidget(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> newWidget
    java.lang.Object newInstance(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> newInstance
    java.lang.Object wrap(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object) -> wrap
    void setProperty(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.String,java.util.List) -> setProperty
    void setTableProperty(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String,java.util.List) -> setTableProperty
    void setCellProperty(com.esotericsoftware.tablelayout.Cell,java.lang.String,java.util.List) -> setCellProperty
    int width(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> width
    int width(float) -> width
    int height(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.String) -> height
    int height(float) -> height
    void invokeMethod(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.String,java.util.List) -> invokeMethod
    java.lang.Object convertType(com.esotericsoftware.tablelayout.BaseTableLayout,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String) -> convertType
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    void addClassPrefix(java.lang.String) -> addClassPrefix
com.iLoong.launcher.MList.ApkMangerActivity -> com.iLoong.launcher.MList.ApkMangerActivity:
    com.iLoong.launcher.MList.MeApkDownloadManager MeapkDlMgr -> MeapkDlMgr
    int entryId -> entryId
    boolean isStartByNotiy -> isStartByNotiy
    java.lang.String moudleName -> moudleName
    android.support.v4.view.ViewPager gridPager -> gridPager
    android.view.View viewDownload -> viewDownload
    android.view.View viewInstall -> viewInstall
    java.lang.Boolean isShowDownloadView -> isShowDownloadView
    java.lang.Boolean isShowInstallView -> isShowInstallView
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadListViewAdapter downloadAdapter -> downloadAdapter
    com.iLoong.launcher.MList.ApkMangerActivity$InstallListViewAdapter installAdapter -> installAdapter
    android.widget.Button butCannelback -> butCannelback
    android.widget.TextView tvTitleInfo -> tvTitleInfo
    android.widget.FrameLayout flDownloadNUllDate -> flDownloadNUllDate
    android.widget.FrameLayout flDownlaodListDate -> flDownlaodListDate
    android.widget.FrameLayout flInstallNUllDate -> flInstallNUllDate
    android.widget.FrameLayout flInstallListDate -> flInstallListDate
    android.widget.ListView lvInstallListView -> lvInstallListView
    android.widget.ListView lvDownloadListView -> lvDownloadListView
    java.util.List DownloadApkList -> DownloadApkList
    java.util.List InstallApkList -> InstallApkList
    long longTime -> longTime
    java.util.List SucessCallbackList -> SucessCallbackList
    java.util.List FailedCallbackList -> FailedCallbackList
    com.iLoong.launcher.MList.MyR R -> R
    java.lang.Class[] mActivityClass -> mActivityClass
    boolean[] visible -> visible
    int index -> index
    com.iLoong.launcher.MList.ApkMangerActivity instance -> instance
    int CurEntryID -> CurEntryID
    android.os.Handler DownloadUpdateHander -> DownloadUpdateHander
    com.iLoong.launcher.MList.DownloadApkItem LongClickListenerDownloadItem -> LongClickListenerDownloadItem
    com.iLoong.launcher.MList.InstallApkItemEx LongClickListenerInstallItem -> LongClickListenerInstallItem
    android.app.Dialog LongClickListenerDialog -> LongClickListenerDialog
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    java.lang.String getVersion(java.lang.String,android.content.Context) -> getVersion
    void InitInstallList() -> InitInstallList
    void InitDownloadList() -> InitDownloadList
    void onStart() -> onStart
    void onRestart() -> onRestart
    boolean StartActivityByPackageName(java.lang.String,android.content.Context) -> StartActivityByPackageName
    void UpdateDownloadFrame() -> UpdateDownloadFrame
    void UpdateInstallFrame() -> UpdateInstallFrame
    void InitDownLoadListView() -> InitDownLoadListView
    void InitInstallListView() -> InitInstallListView
    void DownloadApkNeedDownload() -> DownloadApkNeedDownload
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void initView() -> initView
    void access$0(com.iLoong.launcher.MList.ApkMangerActivity) -> access$0
    void access$1(com.iLoong.launcher.MList.ApkMangerActivity) -> access$1
    boolean access$2(com.iLoong.launcher.MList.ApkMangerActivity,java.lang.String,android.content.Context) -> access$2
    void access$3(com.iLoong.launcher.MList.ApkMangerActivity) -> access$3
    android.support.v4.view.ViewPager access$4(com.iLoong.launcher.MList.ApkMangerActivity) -> access$4
com.iLoong.launcher.MList.ApkMangerActivity$1 -> cc:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iLoong.launcher.MList.ApkMangerActivity$2 -> cd:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$3 -> ce:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
com.iLoong.launcher.MList.ApkMangerActivity$4 -> cf:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    android.widget.RadioButton val$rbutDownload -> b
    android.widget.RadioButton val$rbutInstall -> c
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.iLoong.launcher.MList.ApkMangerActivity$5 -> cg:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$6 -> ch:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack -> ci:
    com.iLoong.launcher.MList.DownloadApkItem CurItem -> a
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void onDoing(java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onRestart(java.lang.String) -> onRestart
    void onStop(java.lang.String) -> onStop
com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBackMsgData -> cj:
    com.iLoong.launcher.MList.DownloadApkItem CurItem -> a
    cool.sdk.download.manager.dl_info DlInfo -> b
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> c
    com.iLoong.launcher.MList.DownloadApkItem getCurItem() -> getCurItem
    cool.sdk.download.manager.dl_info getDlInfo() -> getDlInfo
com.iLoong.launcher.MList.ApkMangerActivity$DownloadControlButClicklister -> ck:
    com.iLoong.launcher.MList.DownloadApkItem CurItem -> a
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadListViewAdapter -> cl:
    java.util.List DownloadApkList -> a
    android.view.LayoutInflater mInflater -> c
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void Update(java.util.List) -> Update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.iLoong.launcher.MList.ApkMangerActivity$DownloadListViewHolder -> cm:
    android.widget.ImageView ivAppIcon -> a
    android.widget.TextView tvAppName -> b
    android.widget.ProgressBar progressBarApp -> c
    android.widget.TextView tvAppSize -> d
    android.widget.TextView TvAppDownloadControl -> e
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> f
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener -> cn:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.iLoong.launcher.MList.ApkMangerActivity access$0(com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener) -> a
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener$1 -> co:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener$2 -> cp:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener$3 -> cq:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadType -> com.iLoong.launcher.MList.ApkMangerActivity$DownloadType:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType ON_SUCESS -> ON_SUCESS
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType ON_FAILED -> ON_FAILED
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType ON_DOING -> ON_DOING
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType[] ENUM$VALUES -> ENUM$VALUES
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType[] values() -> values
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType valueOf(java.lang.String) -> valueOf
com.iLoong.launcher.MList.ApkMangerActivity$GridPagerAdapter -> cr:
    java.lang.String LOG_TAG -> b
    android.view.View viewFrist -> c
    android.view.View viewSecond -> d
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    int getItemPosition(java.lang.Object) -> getItemPosition
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
com.iLoong.launcher.MList.ApkMangerActivity$InstallControlButClicklister -> cs:
    com.iLoong.launcher.MList.InstallApkItemEx CurItem -> a
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$InstallListViewAdapter -> ct:
    java.util.List InstallApkList -> a
    android.view.LayoutInflater mInflater -> c
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void Update(java.util.List) -> Update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.iLoong.launcher.MList.ApkMangerActivity$InstallListViewHolder -> cu:
    android.widget.ImageView ivAppIcon -> a
    android.widget.TextView tvAppName -> b
    android.widget.TextView tvAppVersion -> c
    android.widget.TextView tvAppSize -> d
    android.widget.TextView TvAppInstallControl -> e
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> f
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener -> cv:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.iLoong.launcher.MList.ApkMangerActivity access$0(com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener) -> a
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener$1 -> cw:
    com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener$2 -> cx:
    com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener$3 -> cy:
    com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.BrowerOperation -> com.iLoong.launcher.MList.BrowerOperation:
com.iLoong.launcher.MList.DownloadApkItem -> com.iLoong.launcher.MList.DownloadApkItem:
    java.lang.String PackageName -> PackageName
    android.graphics.drawable.Drawable IconImgSrc -> IconImgSrc
    java.lang.String AppName -> AppName
    java.lang.Long CurSize -> CurSize
    java.lang.Long TotalSize -> TotalSize
    int DownLoadState -> DownLoadState
    com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack downloadCallback -> downloadCallback
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    android.graphics.drawable.Drawable getIconImgSrc() -> getIconImgSrc
    void setIconImgSrc(android.graphics.drawable.Drawable) -> setIconImgSrc
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.Long getCurSize() -> getCurSize
    void setCurSize(java.lang.Long) -> setCurSize
    java.lang.Long getTotalSize() -> getTotalSize
    void setTotalSize(java.lang.Long) -> setTotalSize
    int getDownLoadState() -> getDownLoadState
    void setDownLoadState(int) -> setDownLoadState
    com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack getDownloadCallback() -> getDownloadCallback
    void setDownloadCallback(com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack) -> setDownloadCallback
com.iLoong.launcher.MList.InstallApkItemEx -> com.iLoong.launcher.MList.InstallApkItemEx:
    java.lang.String PackageName -> PackageName
    android.graphics.drawable.Drawable IconImgSrc -> IconImgSrc
    java.lang.String AppName -> AppName
    java.lang.Long appSize -> appSize
    java.lang.String AppVersion -> AppVersion
    int InstallState -> InstallState
    int getInstallState() -> getInstallState
    void setInstallState(int) -> setInstallState
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    android.graphics.drawable.Drawable getIconImgSrc() -> getIconImgSrc
    void setIconImgSrc(android.graphics.drawable.Drawable) -> setIconImgSrc
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getAppVersion() -> getAppVersion
    void setAppVersion(java.lang.String) -> setAppVersion
    java.lang.Long getAppSize() -> getAppSize
    void setAppSize(java.lang.Long) -> setAppSize
com.iLoong.launcher.MList.JSClass -> com.iLoong.launcher.MList.JSClass:
    android.webkit.WebView webView -> webView
    android.content.Context context -> context
    com.iLoong.launcher.MList.MeApkDownloadManager MeApkDlMgr -> MeApkDlMgr
    java.lang.String failingUrl -> failingUrl
    java.util.Map infoMap -> infoMap
    android.app.ProgressDialog builder -> builder
    java.lang.String moudleName -> moudleName
    int mDLManagerID -> mDLManagerID
    int mEntryId -> mEntryId
    android.os.Handler MainActivityHandler -> MainActivityHandler
    com.iLoong.launcher.MList.MyR R -> R
    com.iLoong.launcher.MList.MeApkDLShowType curShowType -> curShowType
    com.iLoong.launcher.MList.MeApkDownloadCallBack WebMainApkDownloadCallBack -> WebMainApkDownloadCallBack
    void initPackageInfo(android.content.Context) -> initPackageInfo
    java.lang.String getVersion(java.lang.String,android.content.Context) -> getVersion
    void appInstallInfoChange(android.content.Context,java.lang.String,int) -> appInstallInfoChange
    int checkAppIsInstall(java.lang.String) -> checkAppIsInstall
    android.content.pm.PackageInfo getAppPackageInfo(java.lang.String) -> getAppPackageInfo
    boolean invokeJSMethod(java.lang.String,java.lang.Object[]) -> invokeJSMethod
    int getVersionCode(java.lang.String,android.content.Context) -> getVersionCode
    int AppQueryState(java.lang.String) -> AppQueryState
    void subWebviewBack() -> subWebviewBack
    void OpenSubWebview(java.lang.String) -> OpenSubWebview
    int DownLoadingApkCount() -> DownLoadingApkCount
    void setDialog() -> setDialog
    void canelDialog() -> canelDialog
    boolean IsForegroundRunning(android.content.Context) -> IsForegroundRunning
    void DownloadApkNeedDownload() -> DownloadApkNeedDownload
    int DownloadApk(java.lang.String,java.lang.String) -> DownloadApk
    void DownloadStop(java.lang.String) -> DownloadStop
    java.lang.String DownloadQueryInfo(java.lang.String) -> DownloadQueryInfo
    java.lang.String AppQueryInfo(java.lang.String) -> AppQueryInfo
    java.lang.String AppQueryAll() -> AppQueryAll
    boolean loadUrl(java.lang.String) -> loadUrl
    void alert(java.lang.String) -> alert
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.Boolean IsNetworkAvailableLocal(android.content.Context) -> IsNetworkAvailableLocal
    int IsNetworkAvailable() -> IsNetworkAvailable
    java.lang.Boolean IsStorageCanUsed() -> IsStorageCanUsed
    void AppStart(java.lang.String) -> AppStart
    int AppInstall(java.lang.String) -> AppInstall
    void SetBackgroundWithWallpaper() -> SetBackgroundWithWallpaper
    java.lang.String GetSysLanguage() -> GetSysLanguage
    void DlMgrOpen() -> DlMgrOpen
    void Refresh_Retry() -> Refresh_Retry
    void Set_Network() -> Set_Network
    int googlePalyIsInstall() -> googlePalyIsInstall
    void LoadUrlByBrowser(java.lang.String) -> LoadUrlByBrowser
    void LoadUrlByBrowserByGP(java.lang.String) -> LoadUrlByBrowserByGP
    boolean startAppStoreDownload(java.lang.String) -> startAppStoreDownload
    java.util.List getAllInstallBrowser(android.content.pm.PackageManager) -> getAllInstallBrowser
    void choiceBrowserToVisitUrl(android.content.Context,java.lang.String,android.content.pm.PackageManager) -> choiceBrowserToVisitUrl
    android.content.pm.ResolveInfo getUserDefinitionBrowers(android.content.pm.PackageManager) -> getUserDefinitionBrowers
    void doDefaultBrowser(android.content.Context,java.lang.String) -> doDefaultBrowser
    void gotoUrl(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PackageManager) -> gotoUrl
    java.lang.String h01() -> h01
    int h02() -> h02
    java.lang.String h03() -> h03
    java.lang.String h04() -> h04
    java.lang.String h05() -> h05
    java.lang.String h06() -> h06
    java.lang.String h07() -> h07
    java.lang.String h08() -> h08
    java.lang.String h09() -> h09
    java.lang.String h10() -> h10
    java.lang.String h11() -> h11
    int h12() -> h12
    int h13() -> h13
    java.lang.String h14() -> h14
    java.lang.String h16() -> h16
    java.lang.String h18() -> h18
    java.lang.String h19() -> h19
    java.lang.String a00() -> a00
    java.lang.String a01() -> a01
    java.lang.String a02() -> a02
    java.lang.String a03() -> a03
    java.lang.String a04() -> a04
    java.lang.String a05() -> a05
    java.lang.String a06() -> a06
    java.lang.String a07() -> a07
    java.lang.String a08() -> a08
    java.lang.String a09() -> a09
    java.lang.String a10() -> a10
    java.lang.String a11() -> a11
    java.lang.String a12() -> a12
    java.lang.String a13() -> a13
    java.lang.String a14() -> a14
    java.lang.String a15() -> a15
    java.lang.String a16() -> a16
    java.lang.String a17() -> a17
    java.lang.String a18() -> a18
    java.lang.String a19() -> a19
    java.lang.String a20() -> a20
    java.lang.String a21() -> a21
com.iLoong.launcher.MList.JSClass$1 -> cz:
    com.iLoong.launcher.MList.JSClass this$0 -> a
    void onSuccess(java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onStop(java.lang.String) -> onStop
    void onRestart(java.lang.String) -> onRestart
com.iLoong.launcher.MList.JSClass$2 -> da:
    com.iLoong.launcher.MList.JSClass this$0 -> a
    java.lang.String val$pkgName -> b
    java.lang.String val$json -> c
    void run() -> run
    com.iLoong.launcher.MList.JSClass access$0(com.iLoong.launcher.MList.JSClass$2) -> a
com.iLoong.launcher.MList.JSClass$2$1 -> db:
    com.iLoong.launcher.MList.JSClass$2 this$1 -> a
    java.lang.String val$pkgName -> b
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
com.iLoong.launcher.MList.JSClass$2$2 -> dc:
    com.iLoong.launcher.MList.JSClass$2 this$1 -> a
    java.lang.String val$pkgName -> b
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
com.iLoong.launcher.MList.JSClass$3 -> dd:
    com.iLoong.launcher.MList.JSClass this$0 -> a
    java.lang.String val$pkgName -> b
    void run() -> run
com.iLoong.launcher.MList.KillProcessTimerTask -> com.iLoong.launcher.MList.KillProcessTimerTask:
    android.content.Context mContext -> mContext
    void run() -> run
com.iLoong.launcher.MList.LoadURL -> com.iLoong.launcher.MList.LoadURL:
    com.iLoong.launcher.MList.PhoneInfoma phoneInfoma -> phoneInfoma
    int MicrVersion -> MicrVersion
    java.lang.String loadUrl(android.content.Context) -> loadUrl
    java.lang.String BaseDetalFolder64Str(android.content.Context,java.lang.String) -> BaseDetalFolder64Str
    java.lang.String Base64Str(android.content.Context,int) -> Base64Str
    java.lang.String hexStr2Str(java.lang.String) -> hexStr2Str
    void initPhoneInfoma(android.content.Context) -> initPhoneInfoma
com.iLoong.launcher.MList.MELOG -> com.iLoong.launcher.MList.MELOG:
    boolean bEnableLog -> bEnableLog
    boolean bIsCheckOpenLog -> bIsCheckOpenLog
    void setEnableLog(boolean) -> setEnableLog
    boolean isOpenLog() -> isOpenLog
    int v(java.lang.String,java.lang.String) -> v
    int d(java.lang.String,java.lang.String) -> d
    int i(java.lang.String,java.lang.String) -> i
    int w(java.lang.String,java.lang.String) -> w
    int e(java.lang.String,java.lang.String) -> e
com.iLoong.launcher.MList.MELOG$1 -> de:
    void run() -> run
com.iLoong.launcher.MList.MEServiceActivity -> com.iLoong.launcher.MList.MEServiceActivity:
    boolean[] visible -> visible
    int index -> index
    int MEShowType -> MEShowType
    android.app.Dialog ad -> ad
    int[] $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType -> $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onMeApkOnPkgUninstall(android.content.Intent) -> onMeApkOnPkgUninstall
    void onMeApkOnPkgInstalled(android.content.Intent) -> onMeApkOnPkgInstalled
    void onMePushShowType(android.content.Intent) -> onMePushShowType
    void onMEApkOnDownloading(android.content.Intent) -> onMEApkOnDownloading
    void onMEApkOnSucessEx(android.content.Intent) -> onMEApkOnSucessEx
    void onMEApkOnSucess(android.content.Intent) -> onMEApkOnSucess
    void onMEApkReStartByEntryID(android.content.Intent) -> onMEApkReStartByEntryID
    void onMEApkReStartAll(android.content.Intent) -> onMEApkReStartAll
    void onMEApkOnNotifyReStart(android.content.Intent) -> onMEApkOnNotifyReStart
    void onMEShowType(android.content.Intent) -> onMEShowType
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int[] $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType() -> $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg -> df:
    android.content.Context mContext -> a
    boolean IsShowCanel -> b
    com.iLoong.launcher.MList.MyR MeR -> c
    android.view.View cancel -> d
    android.view.View update -> e
    android.view.View$OnClickListener listener -> f
    com.iLoong.launcher.MList.MEServiceActivity this$0 -> g
    void onCreate(android.os.Bundle) -> onCreate
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.iLoong.launcher.MList.MEServiceActivity access$0(com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg) -> a
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1 -> dg:
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg this$1 -> a
    void onClick(android.view.View) -> onClick
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg access$0(com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1) -> a
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1$1 -> dh:
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1 this$2 -> a
    void run() -> run
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$2 -> di:
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.iLoong.launcher.MList.MainActivity -> com.iLoong.launcher.MList.MainActivity:
    boolean isNeedClearHistory -> isNeedClearHistory
    java.lang.String reloadUrl -> reloadUrl
    boolean flag -> flag
    boolean flagError -> flagError
    com.iLoong.launcher.MList.JSClass mainJsClass -> mainJsClass
    com.iLoong.launcher.MList.JSClass subJsCalss -> subJsCalss
    android.webkit.WebView mainWebView -> mainWebView
    android.webkit.WebView subWebView -> subWebView
    android.view.View MainFrameWebview -> MainFrameWebview
    android.view.View SubFrameWebview -> SubFrameWebview
    boolean isenable1 -> isenable1
    boolean isenable2 -> isenable2
    boolean isenable3 -> isenable3
    boolean isenable4 -> isenable4
    int app_id -> app_id
    com.iLoong.launcher.MList.MainActivity instance -> instance
    byte[] UPath -> UPath
    boolean isExit -> isExit
    java.lang.String url -> url
    java.lang.String strAction -> strAction
    com.iLoong.launcher.MList.MyR R -> R
    int openSubWebView -> openSubWebView
    int subWebViewBackSoftKey -> subWebViewBackSoftKey
    int mainWebViewBackSoftKey -> mainWebViewBackSoftKey
    int setBackgroundWithWallpaper -> setBackgroundWithWallpaper
    android.os.Handler mHandler -> mHandler
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    void LoadMiroEntryUrl(java.lang.String,boolean) -> LoadMiroEntryUrl
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean SubWebViewOnBackListener() -> SubWebViewOnBackListener
    boolean MainWebViewOnBackListener() -> MainWebViewOnBackListener
    void bindJsClass(com.iLoong.launcher.MList.JSClass,android.webkit.WebView) -> bindJsClass
    void setConfigCallback(android.view.WindowManager) -> setConfigCallback
    void access$0(boolean) -> access$0
    boolean access$1(com.iLoong.launcher.MList.MainActivity) -> access$1
    boolean access$2(com.iLoong.launcher.MList.MainActivity) -> access$2
    boolean access$3() -> access$3
com.iLoong.launcher.MList.MainActivity$1 -> dj:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iLoong.launcher.MList.MainActivity$2 -> dk:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
com.iLoong.launcher.MList.MainActivity$3 -> dl:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
com.iLoong.launcher.MList.MainActivity$4 -> dm:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    com.iLoong.launcher.MList.JSClass val$jsClass -> b
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.iLoong.launcher.MList.MainActivity$5 -> dn:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.iLoong.launcher.MList.Main_FirstActivity -> com.iLoong.launcher.MList.Main_FirstActivity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.Main_FourthActicity -> com.iLoong.launcher.MList.Main_FourthActicity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.Main_SecondActivity -> com.iLoong.launcher.MList.Main_SecondActivity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.Main_ThreeActivity -> com.iLoong.launcher.MList.Main_ThreeActivity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.MceInfo -> com.iLoong.launcher.MList.MceInfo:
    java.lang.String h01 -> h01
    int h02 -> h02
    java.lang.String h03 -> h03
    java.lang.String h04 -> h04
    java.lang.String h05 -> h05
    java.lang.String h06 -> h06
    java.lang.String h07 -> h07
    java.lang.String h08 -> h08
    java.lang.String h09 -> h09
    java.lang.String h10 -> h10
    java.lang.String h11 -> h11
    int h12 -> h12
    int h13 -> h13
    java.lang.String h14 -> h14
    java.lang.String h16 -> h16
    java.lang.String h18 -> h18
    java.lang.String h19 -> h19
    com.iLoong.launcher.MList.MceInfo mceInfo -> mceInfo
    com.iLoong.launcher.MList.MceInfo instance(android.content.Context) -> instance
    java.lang.String localeGetSysLanguage(android.content.Context) -> localeGetSysLanguage
    java.lang.String getH01() -> getH01
    int getH02() -> getH02
    java.lang.String getH03() -> getH03
    java.lang.String getH04() -> getH04
    java.lang.String getH05() -> getH05
    java.lang.String getH06() -> getH06
    java.lang.String getH07() -> getH07
    java.lang.String getH08() -> getH08
    java.lang.String getH09() -> getH09
    java.lang.String getH10() -> getH10
    java.lang.String getH11() -> getH11
    int getH12() -> getH12
    int getH13() -> getH13
    java.lang.String getH14() -> getH14
    java.lang.String getH16() -> getH16
    java.lang.String getH18() -> getH18
    java.lang.String getH19() -> getH19
com.iLoong.launcher.MList.MeActiveCallback -> com.iLoong.launcher.MList.MeActiveCallback:
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
com.iLoong.launcher.MList.MeApkDLShowType -> com.iLoong.launcher.MList.MeApkDLShowType:
    com.iLoong.launcher.MList.MeApkDLShowType None -> None
    com.iLoong.launcher.MList.MeApkDLShowType WebviewMain -> WebviewMain
    com.iLoong.launcher.MList.MeApkDLShowType WebviewSub -> WebviewSub
    com.iLoong.launcher.MList.MeApkDLShowType DownloadManagerActivity -> DownloadManagerActivity
    com.iLoong.launcher.MList.MeApkDLShowType Notification -> Notification
    com.iLoong.launcher.MList.MeApkDLShowType NeedReStartDownload -> NeedReStartDownload
    com.iLoong.launcher.MList.MeApkDLShowType[] ENUM$VALUES -> ENUM$VALUES
    com.iLoong.launcher.MList.MeApkDLShowType[] values() -> values
    com.iLoong.launcher.MList.MeApkDLShowType valueOf(java.lang.String) -> valueOf
com.iLoong.launcher.MList.MeApkDlMgrBuilder -> com.iLoong.launcher.MList.MeApkDlMgrBuilder:
    java.util.Map MeApkDownloadManagerMap -> MeApkDownloadManagerMap
    com.iLoong.launcher.MList.MeApkDownloadManager Build(android.content.Context,java.lang.String,int) -> Build
    com.iLoong.launcher.MList.MeApkDownloadManager GetMeApkDownloadManager(int) -> GetMeApkDownloadManager
    java.util.Map GetAllMeApkDownloadManager() -> GetAllMeApkDownloadManager
com.iLoong.launcher.MList.MeApkDlNotifyManager -> com.iLoong.launcher.MList.MeApkDlNotifyManager:
    com.iLoong.launcher.MList.MeApkDlNotifyManager instance -> instance
    int meEntryNotifyID -> meEntryNotifyID
    int meApkNotifyID -> meApkNotifyID
    com.iLoong.launcher.MList.MyR MeR -> MeR
    android.content.Context context -> context
    com.iLoong.launcher.MList.MeApkDlNotifyManager getInstance(android.content.Context) -> getInstance
    com.iLoong.launcher.MList.MeApkDownloadManager GetMeApkMgr(int) -> GetMeApkMgr
    java.lang.String getApkIconPathByPkgname(com.iLoong.launcher.MList.MeApkDownloadManager,java.lang.String) -> getApkIconPathByPkgname
    android.graphics.Bitmap getApkIconByPkgname(com.iLoong.launcher.MList.MeApkDownloadManager,java.lang.String,android.content.res.Resources,int) -> getApkIconByPkgname
    android.graphics.Bitmap getApkIconByPath(java.lang.String) -> getApkIconByPath
    boolean StartActivityByPackageName(java.lang.String,android.content.Context) -> StartActivityByPackageName
    void showOnMeApkDlStartNotify(int,java.lang.String,int) -> showOnMeApkDlStartNotify
    void CanelOnMeApkDlStartNotify(int) -> CanelOnMeApkDlStartNotify
    void onMeApkDlStart(int,java.lang.String,java.lang.String) -> onMeApkDlStart
    void onMeApkInstalled(int,java.lang.String,java.lang.String) -> onMeApkInstalled
    void onMeApkUninstallCanel(java.lang.String) -> onMeApkUninstallCanel
    void onMeApkDlSucess(int,java.lang.String,java.lang.String,cool.sdk.download.manager.dl_info) -> onMeApkDlSucess
    void onMeApkDlSucessEx(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onMeApkDlSucessEx
    void onMeApkDlDel(int,java.lang.String,java.lang.String) -> onMeApkDlDel
    void onMeApkDlStop(int,java.lang.String,java.lang.String) -> onMeApkDlStop
    void onMeApkDlFailed(int,java.lang.String,java.lang.String,cool.sdk.download.manager.dl_info) -> onMeApkDlFailed
com.iLoong.launcher.MList.MeApkDlNotifyManager$1 -> do:
    com.iLoong.launcher.MList.MeApkDlNotifyManager this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MeApkDownloadCallBack -> com.iLoong.launcher.MList.MeApkDownloadCallBack:
    com.iLoong.launcher.MList.MeApkDLShowType ShowType -> ShowType
    void onDoing(java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onRestart(java.lang.String) -> onRestart
    void onStop(java.lang.String) -> onStop
com.iLoong.launcher.MList.MeApkDownloadManager -> com.iLoong.launcher.MList.MeApkDownloadManager:
    cool.sdk.download.CoolDLMgr iconDlMgr -> iconDlMgr
    cool.sdk.download.CoolDLMgr apkDlMgr -> apkDlMgr
    int entryId -> entryId
    java.util.Map MeApkDownloadTaskMap -> MeApkDownloadTaskMap
    java.util.Map MeAddActiveCallBackMap -> MeAddActiveCallBackMap
    android.content.Context context -> context
    java.lang.String moudleName -> moudleName
    cool.sdk.download.CoolDLMgr GetSdkApkDlMgr() -> GetSdkApkDlMgr
    cool.sdk.download.CoolDLMgr GetSdkIconMgr() -> GetSdkIconMgr
    cool.sdk.download.manager.dl_info GetInfoByPkgName(java.lang.String) -> GetInfoByPkgName
    void StartDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> StartDownload
    void ReStartDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> ReStartDownload
    void AddCallback(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> AddCallback
    void StopDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> StopDownload
    void DelDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> DelDownload
    void ApkInstalled(java.lang.String) -> ApkInstalled
    void ApkUninstall(java.lang.String) -> ApkUninstall
    int getVersionCode(java.lang.String,android.content.Context) -> getVersionCode
    int GetUninstallApkCount() -> GetUninstallApkCount
    int GetDownLoadingApkCount() -> GetDownLoadingApkCount
    int access$0(com.iLoong.launcher.MList.MeApkDownloadManager) -> access$0
    cool.sdk.download.CoolDLMgr access$1(com.iLoong.launcher.MList.MeApkDownloadManager) -> access$1
com.iLoong.launcher.MList.MeApkDownloadManager$MeApkDownloadTask -> dp:
    cool.sdk.download.manager.dl_task CurSDKDLTask -> a
    com.iLoong.launcher.MList.MeCoolDLCallback CurCallback -> b
    com.iLoong.launcher.MList.MeApkDownloadManager this$0 -> c
    void MeApkReStartDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> MeApkReStartDownload
    void SetTaskCallback(com.iLoong.launcher.MList.MeApkDLShowType,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> SetTaskCallback
    void MeApkStopDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> MeApkStopDownload
com.iLoong.launcher.MList.MeCoolDLCallback -> dq:
    java.util.Map MeApkDlCallbackMap -> a
    android.content.Context context -> b
    int entryID -> c
    java.lang.String apkMoudleName -> d
    void AddMECallBack(com.iLoong.launcher.MList.MeApkDLShowType,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> AddMECallBack
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onstart(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> onstart
    void onRestart(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> onRestart
    void onStop(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> onStop
com.iLoong.launcher.MList.MeDLProtectionService -> com.iLoong.launcher.MList.MeDLProtectionService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.iLoong.launcher.MList.MeDLProtectionService$1 -> dr:
    com.iLoong.launcher.MList.MeDLProtectionService this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MeGeneralMethod -> com.iLoong.launcher.MList.MeGeneralMethod:
    boolean InstallApk(android.content.Context,java.lang.String) -> InstallApk
    boolean IsForegroundRunning(android.content.Context) -> IsForegroundRunning
    boolean IsDownloadTaskRunning(android.content.Context) -> IsDownloadTaskRunning
    boolean IsWifiConnected(android.content.Context) -> IsWifiConnected
com.iLoong.launcher.MList.MeServiceType -> com.iLoong.launcher.MList.MeServiceType:
    com.iLoong.launcher.MList.MeServiceType NONE -> NONE
    com.iLoong.launcher.MList.MeServiceType MEShowType -> MEShowType
    com.iLoong.launcher.MList.MeServiceType MEApkOnDownloading -> MEApkOnDownloading
    com.iLoong.launcher.MList.MeServiceType MeApkOnPkgInstalled -> MeApkOnPkgInstalled
    com.iLoong.launcher.MList.MeServiceType MeApkOnPkgUninstall -> MeApkOnPkgUninstall
    com.iLoong.launcher.MList.MeServiceType MEApkOnNotifyReStart -> MEApkOnNotifyReStart
    com.iLoong.launcher.MList.MeServiceType MEApkReStartByEntryID -> MEApkReStartByEntryID
    com.iLoong.launcher.MList.MeServiceType MEApkReStartAll -> MEApkReStartAll
    com.iLoong.launcher.MList.MeServiceType MEApkOnNotifyInstall -> MEApkOnNotifyInstall
    com.iLoong.launcher.MList.MeServiceType MEApkOnSucess -> MEApkOnSucess
    com.iLoong.launcher.MList.MeServiceType MEApkOnSucessEx -> MEApkOnSucessEx
    com.iLoong.launcher.MList.MeServiceType MEApkOnFailed -> MEApkOnFailed
    com.iLoong.launcher.MList.MeServiceType MEApkOnStop -> MEApkOnStop
    com.iLoong.launcher.MList.MeServiceType MeApkOnInstalled -> MeApkOnInstalled
    com.iLoong.launcher.MList.MeServiceType MePushShowType -> MePushShowType
    com.iLoong.launcher.MList.MeServiceType[] ENUM$VALUES -> ENUM$VALUES
    com.iLoong.launcher.MList.MeServiceType[] values() -> values
    com.iLoong.launcher.MList.MeServiceType valueOf(java.lang.String) -> valueOf
com.iLoong.launcher.MList.MyListView -> com.iLoong.launcher.MList.MyListView:
    void onMeasure(int,int) -> onMeasure
com.iLoong.launcher.MList.MyR -> com.iLoong.launcher.MList.MyR:
    com.iLoong.launcher.MList.MyR R -> R
    com.iLoong.launcher.MList.MyR$color_t color -> color
    com.iLoong.launcher.MList.MyR$dimen_t dimen -> dimen
    com.iLoong.launcher.MList.MyR$drawable_t drawable -> drawable
    com.iLoong.launcher.MList.MyR$id_t id -> id
    com.iLoong.launcher.MList.MyR$layout_t layout -> layout
    com.iLoong.launcher.MList.MyR$string_t string -> string
    boolean InflateMyR(android.content.Context,java.lang.Class,java.lang.Object,java.lang.String) -> InflateMyR
    com.iLoong.launcher.MList.MyR getMyR(android.content.Context) -> getMyR
com.iLoong.launcher.MList.MyR$color_t -> com.iLoong.launcher.MList.MyR$color_t:
    int cool_ml_blue_total_tab_top_line1 -> cool_ml_blue_total_tab_top_line1
    int cool_ml_page_header_back_color -> cool_ml_page_header_back_color
    int cool_ml_page_header_bottom_line -> cool_ml_page_header_bottom_line
    int cool_ml_white_skin_title_color -> cool_ml_white_skin_title_color
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$dimen_t -> com.iLoong.launcher.MList.MyR$dimen_t:
    int cool_ml_ToolBar_height -> cool_ml_ToolBar_height
    int cool_ml_page_header_back_padding -> cool_ml_page_header_back_padding
    int cool_ml_page_header_back_top_padding -> cool_ml_page_header_back_top_padding
    int cool_ml_page_header_back_width -> cool_ml_page_header_back_width
    int cool_ml_textsize_b -> cool_ml_textsize_b
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$drawable_t -> com.iLoong.launcher.MList.MyR$drawable_t:
    int cool_ml_alert_list_bg -> cool_ml_alert_list_bg
    int cool_ml_bg_item_bottom_normal -> cool_ml_bg_item_bottom_normal
    int cool_ml_bg_item_top_normal -> cool_ml_bg_item_top_normal
    int cool_ml_bottom_pressed -> cool_ml_bottom_pressed
    int cool_ml_corner_list_bg -> cool_ml_corner_list_bg
    int cool_ml_cutline -> cool_ml_cutline
    int cool_ml_discalmer_bg -> cool_ml_discalmer_bg
    int cool_ml_discalmer_del -> cool_ml_discalmer_del
    int cool_ml_discalmer_icon -> cool_ml_discalmer_icon
    int cool_ml_divider -> cool_ml_divider
    int cool_ml_download_install -> cool_ml_download_install
    int cool_ml_icon_btn_list_download -> cool_ml_icon_btn_list_download
    int cool_ml_icon_btn_list_download_pause -> cool_ml_icon_btn_list_download_pause
    int cool_ml_icon_btn_list_install -> cool_ml_icon_btn_list_install
    int cool_ml_icon_btn_list_pause -> cool_ml_icon_btn_list_pause
    int cool_ml_icon_btn_list_run -> cool_ml_icon_btn_list_run
    int cool_ml_icon_btn_list_waiting_download -> cool_ml_icon_btn_list_waiting_download
    int cool_ml_icon_listview_bg -> cool_ml_icon_listview_bg
    int cool_ml_know -> cool_ml_know
    int cool_ml_know_small -> cool_ml_know_small
    int cool_ml_ku_store -> cool_ml_ku_store
    int cool_ml_ku_store_small -> cool_ml_ku_store_small
    int cool_ml_list_item_color -> cool_ml_list_item_color
    int cool_ml_no_data -> cool_ml_no_data
    int cool_ml_normal_list_selector -> cool_ml_normal_list_selector
    int cool_ml_notify -> cool_ml_notify
    int cool_ml_notify_small -> cool_ml_notify_small
    int cool_ml_page_header_back_press -> cool_ml_page_header_back_press
    int cool_ml_pageselect_button_underline -> cool_ml_pageselect_button_underline
    int cool_ml_progress_bg -> cool_ml_progress_bg
    int cool_ml_software -> cool_ml_software
    int cool_ml_software_small -> cool_ml_software_small
    int cool_ml_toolbar_download_btn -> cool_ml_toolbar_download_btn
    int cool_ml_toolbar_downloading_btn -> cool_ml_toolbar_downloading_btn
    int cool_ml_toolbar_downloading_btn_pressed -> cool_ml_toolbar_downloading_btn_pressed
    int cool_ml_toolbar_search_btn_pressed -> cool_ml_toolbar_search_btn_pressed
    int cool_ml_underline_press -> cool_ml_underline_press
    int cool_ml_underline_unpress -> cool_ml_underline_unpress
    int cool_ml_webview_loading_press -> cool_ml_webview_loading_press
    int cool_ml_white_skin_top_line_img -> cool_ml_white_skin_top_line_img
    int cool_ml_white_total_tab_bg -> cool_ml_white_total_tab_bg
    int cool_ml_wonderful_game -> cool_ml_wonderful_game
    int cool_ml_wonderful_game_small -> cool_ml_wonderful_game_small
    int cool_ml_you_may_love -> cool_ml_you_may_love
    int cool_ml_you_may_love_small -> cool_ml_you_may_love_small
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$id_t -> com.iLoong.launcher.MList.MyR$id_t:
    int cool_ml_InstallListTextView1 -> cool_ml_InstallListTextView1
    int cool_ml_InstallListTextView2 -> cool_ml_InstallListTextView2
    int cool_ml_appListTextView1 -> cool_ml_appListTextView1
    int cool_ml_appListTextView2 -> cool_ml_appListTextView2
    int cool_ml_back_text -> cool_ml_back_text
    int cool_ml_discalmer_del -> cool_ml_discalmer_del
    int cool_ml_disclaimer_update -> cool_ml_disclaimer_update
    int cool_ml_flDownloadList -> cool_ml_flDownloadList
    int cool_ml_flDownloadNULLData -> cool_ml_flDownloadNULLData
    int cool_ml_flInsatllList -> cool_ml_flInsatllList
    int cool_ml_flInsatllNULLData -> cool_ml_flInsatllNULLData
    int cool_ml_header_nav_layout_bottom_line -> cool_ml_header_nav_layout_bottom_line
    int cool_ml_ivProcessImg -> cool_ml_ivProcessImg
    int cool_ml_linearLayout1 -> cool_ml_linearLayout1
    int cool_ml_liner01 -> cool_ml_liner01
    int cool_ml_lvDownload -> cool_ml_lvDownload
    int cool_ml_lvInstall -> cool_ml_lvInstall
    int cool_ml_mainwebviewframe -> cool_ml_mainwebviewframe
    int cool_ml_manager_appIco -> cool_ml_manager_appIco
    int cool_ml_manager_appIco1 -> cool_ml_manager_appIco1
    int cool_ml_manager_appName -> cool_ml_manager_appName
    int cool_ml_manager_appName1 -> cool_ml_manager_appName1
    int cool_ml_manager_appSize -> cool_ml_manager_appSize
    int cool_ml_manager_appSize1 -> cool_ml_manager_appSize1
    int cool_ml_manager_appVersion1 -> cool_ml_manager_appVersion1
    int cool_ml_manager_button -> cool_ml_manager_button
    int cool_ml_manager_button1 -> cool_ml_manager_button1
    int cool_ml_manager_progressBar -> cool_ml_manager_progressBar
    int cool_ml_nav_layout_top_img -> cool_ml_nav_layout_top_img
    int cool_ml_nav_layout_top_line1 -> cool_ml_nav_layout_top_line1
    int cool_ml_notification_image -> cool_ml_notification_image
    int cool_ml_notification_text -> cool_ml_notification_text
    int cool_ml_notification_title -> cool_ml_notification_title
    int cool_ml_page_header -> cool_ml_page_header
    int cool_ml_rbutDownloadPage -> cool_ml_rbutDownloadPage
    int cool_ml_rbutInstallPage -> cool_ml_rbutInstallPage
    int cool_ml_rela01 -> cool_ml_rela01
    int cool_ml_rela02 -> cool_ml_rela02
    int cool_ml_subwebviewframe -> cool_ml_subwebviewframe
    int cool_ml_themeGridPager -> cool_ml_themeGridPager
    int cool_ml_title_text -> cool_ml_title_text
    int cool_ml_toolbar_downcount -> cool_ml_toolbar_downcount
    int cool_ml_toolbar_download_Layout -> cool_ml_toolbar_download_Layout
    int cool_ml_toolbar_download_img -> cool_ml_toolbar_download_img
    int cool_ml_toolbar_search_img -> cool_ml_toolbar_search_img
    int cool_ml_webView1 -> cool_ml_webView1
    int cool_ml_webView2 -> cool_ml_webView2
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$layout_t -> com.iLoong.launcher.MList.MyR$layout_t:
    int cool_ml_activity_main -> cool_ml_activity_main
    int cool_ml_apk_download_view -> cool_ml_apk_download_view
    int cool_ml_apk_install_view -> cool_ml_apk_install_view
    int cool_ml_apk_manager -> cool_ml_apk_manager
    int cool_ml_disclaimer_dialog -> cool_ml_disclaimer_dialog
    int cool_ml_dwonload_notification -> cool_ml_dwonload_notification
    int cool_ml_manager_download_listview -> cool_ml_manager_download_listview
    int cool_ml_manager_install_listview -> cool_ml_manager_install_listview
    int cool_ml_onlongclick_listview -> cool_ml_onlongclick_listview
    int cool_ml_onlongclick_listview_install -> cool_ml_onlongclick_listview_install
    int cool_ml_page_header -> cool_ml_page_header
    int cool_ml_webview_loading_dlg -> cool_ml_webview_loading_dlg
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$string_t -> com.iLoong.launcher.MList.MyR$string_t:
    int cool_ml_MeIcon_cannot_uninstall -> cool_ml_MeIcon_cannot_uninstall
    int cool_ml_MeIcon_uninstall -> cool_ml_MeIcon_uninstall
    int cool_ml_MeIcon_uninstalling -> cool_ml_MeIcon_uninstalling
    int cool_ml_app_name1 -> cool_ml_app_name1
    int cool_ml_app_name2 -> cool_ml_app_name2
    int cool_ml_app_name3 -> cool_ml_app_name3
    int cool_ml_app_name4 -> cool_ml_app_name4
    int cool_ml_confirm_canel -> cool_ml_confirm_canel
    int cool_ml_confirm_content -> cool_ml_confirm_content
    int cool_ml_confirm_ok -> cool_ml_confirm_ok
    int cool_ml_cooee_download_jixu -> cool_ml_cooee_download_jixu
    int cool_ml_cooee_download_quxiao -> cool_ml_cooee_download_quxiao
    int cool_ml_cooee_install_jixu -> cool_ml_cooee_install_jixu
    int cool_ml_cooee_install_quxiao -> cool_ml_cooee_install_quxiao
    int cool_ml_disclaimer_desc -> cool_ml_disclaimer_desc
    int cool_ml_disclaimer_title -> cool_ml_disclaimer_title
    int cool_ml_disclaimer_update -> cool_ml_disclaimer_update
    int cool_ml_dl_failed -> cool_ml_dl_failed
    int cool_ml_dl_failed_text -> cool_ml_dl_failed_text
    int cool_ml_dl_ing -> cool_ml_dl_ing
    int cool_ml_dl_ing_text -> cool_ml_dl_ing_text
    int cool_ml_dl_installed -> cool_ml_dl_installed
    int cool_ml_dl_installed_text -> cool_ml_dl_installed_text
    int cool_ml_dl_stop -> cool_ml_dl_stop
    int cool_ml_dl_stop_text -> cool_ml_dl_stop_text
    int cool_ml_dl_sucess -> cool_ml_dl_sucess
    int cool_ml_dl_sucess_text -> cool_ml_dl_sucess_text
    int cool_ml_donwload_manager -> cool_ml_donwload_manager
    int cool_ml_donwloadorinstall_manager -> cool_ml_donwloadorinstall_manager
    int cool_ml_download_failed -> cool_ml_download_failed
    int cool_ml_download_jixu -> cool_ml_download_jixu
    int cool_ml_download_quxiao -> cool_ml_download_quxiao
    int cool_ml_dummy_button -> cool_ml_dummy_button
    int cool_ml_dummy_content -> cool_ml_dummy_content
    int cool_ml_install_file_not_exsit -> cool_ml_install_file_not_exsit
    int cool_ml_install_jixu -> cool_ml_install_jixu
    int cool_ml_install_manager -> cool_ml_install_manager
    int cool_ml_install_quxiao -> cool_ml_install_quxiao
    int cool_ml_loading_1 -> cool_ml_loading_1
    int cool_ml_more_content -> cool_ml_more_content
    int cool_ml_network_not_available -> cool_ml_network_not_available
    int cool_ml_new_content -> cool_ml_new_content
    int cool_ml_storage_not_available -> cool_ml_storage_not_available
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyReceiver -> com.iLoong.launcher.MList.MyReceiver:
    android.content.Context mContent -> mContent
    java.lang.String pkgName -> pkgName
    boolean IsMeForeground(android.content.Context) -> IsMeForeground
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iLoong.launcher.MList.MyReceiver$1 -> ds:
    com.iLoong.launcher.MList.MyReceiver this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MyReceiver$2 -> dt:
    com.iLoong.launcher.MList.MyReceiver this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MyReceiver$3 -> du:
    com.iLoong.launcher.MList.MyReceiver this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.PathUtil -> com.iLoong.launcher.MList.PathUtil:
    java.lang.String myPath -> myPath
    java.lang.String myUrl -> myUrl
    java.lang.String getPathHtmlSdcard() -> getPathHtmlSdcard
    java.lang.String getPathDBSdcard(android.content.Context) -> getPathDBSdcard
    java.lang.String getPathHtmlDownloadUrl() -> getPathHtmlDownloadUrl
    java.lang.String getPathDownloadFolder() -> getPathDownloadFolder
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
com.iLoong.launcher.MList.PhoneInfo -> com.iLoong.launcher.MList.PhoneInfo:
    java.lang.String a00 -> a00
    java.lang.String a01 -> a01
    java.lang.String a02 -> a02
    java.lang.String a03 -> a03
    java.lang.String a04 -> a04
    java.lang.String a05 -> a05
    java.lang.String a06 -> a06
    java.lang.String a07 -> a07
    java.lang.String a08 -> a08
    java.lang.String a09 -> a09
    java.lang.String a10 -> a10
    java.lang.String a11 -> a11
    java.lang.String a12 -> a12
    java.lang.String a13 -> a13
    java.lang.String a14 -> a14
    java.lang.String a15 -> a15
    java.lang.String a16 -> a16
    java.lang.String a17 -> a17
    java.lang.String a19 -> a19
    java.lang.String a18 -> a18
    java.lang.String a20 -> a20
    java.lang.String a21 -> a21
    int width -> width
    int hight -> hight
    com.iLoong.launcher.MList.PhoneInfo phoneInfo -> phoneInfo
    com.iLoong.launcher.MList.PhoneInfo instance(android.content.Context) -> instance
    void initPhoneInfo(android.content.Context) -> initPhoneInfo
    java.lang.String getA00() -> getA00
    java.lang.String getA01() -> getA01
    java.lang.String getA02() -> getA02
    java.lang.String getA03() -> getA03
    java.lang.String getA04() -> getA04
    java.lang.String getA05() -> getA05
    java.lang.String getA06() -> getA06
    java.lang.String getA07() -> getA07
    java.lang.String getA08() -> getA08
    java.lang.String getA09() -> getA09
    java.lang.String getA10() -> getA10
    java.lang.String getA11() -> getA11
    java.lang.String getA12() -> getA12
    java.lang.String getA13() -> getA13
    java.lang.String getA14() -> getA14
    java.lang.String getA15() -> getA15
    java.lang.String getA16() -> getA16
    java.lang.String getA17() -> getA17
    java.lang.String getA18() -> getA18
    java.lang.String getA19() -> getA19
    java.lang.String getA20() -> getA20
    int getWidth() -> getWidth
    int getHight() -> getHight
    java.lang.String getA21() -> getA21
com.iLoong.launcher.MList.PhoneInfoma -> dv:
    java.lang.String h1 -> a
    int h2 -> b
    java.lang.String h3 -> c
    java.lang.String h4 -> d
    java.lang.String h5 -> e
    java.lang.String h6 -> f
    java.lang.String h7 -> g
    java.lang.String h8 -> h
    java.lang.String h9 -> i
    java.lang.String h10 -> j
    java.lang.String h11 -> k
    int h12 -> l
com.iLoong.launcher.MList.RijndaelCrypt -> com.iLoong.launcher.MList.RijndaelCrypt:
    java.lang.String TAG -> TAG
    java.lang.String TRANSFORMATION -> TRANSFORMATION
    java.lang.String ALGORITHM -> ALGORITHM
    javax.crypto.Cipher _cipher -> _cipher
    javax.crypto.SecretKey _password -> _password
    javax.crypto.spec.IvParameterSpec _IVParamSpec -> _IVParamSpec
    byte[] IV -> IV
    java.lang.String PWD -> PWD
    byte[] encryptToByteArray(byte[]) -> encryptToByteArray
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String decrypt(byte[]) -> decrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
    void test() -> test
com.iLoong.launcher.MList.SimpleCrypto -> com.iLoong.launcher.MList.SimpleCrypto:
    java.lang.String HEX -> HEX
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] getRawKey(byte[]) -> getRawKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    byte[] decrypt(byte[],byte[]) -> decrypt
    java.lang.String toHex(java.lang.String) -> toHex
    java.lang.String fromHex(java.lang.String) -> fromHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String toHex(byte[]) -> toHex
    void appendHex(java.lang.StringBuffer,byte) -> appendHex
com.iLoong.launcher.MList.Utility -> com.iLoong.launcher.MList.Utility:
    void setListViewHeightBasedOnChildren(android.widget.ListView,int) -> setListViewHeightBasedOnChildren
    int setListViewHeightBasedOnChildren1(android.widget.ListView) -> setListViewHeightBasedOnChildren1
    int googlePalyIsInstall(android.content.Context) -> googlePalyIsInstall
com.iLoong.launcher.MList.WebviewLoadingDlg -> com.iLoong.launcher.MList.WebviewLoadingDlg:
    android.content.Context mContext -> mContext
    android.widget.ImageView view -> view
    android.view.animation.Animation rotateAnimation -> rotateAnimation
    android.app.Dialog ssdialog -> ssdialog
    void onCreate(android.os.Bundle) -> onCreate
    void ShowDlg(android.content.Context) -> ShowDlg
    void CloseDlg() -> CloseDlg
com.kpsh.sdk.KpshActivity -> com.kpsh.sdk.KpshActivity:
    java.lang.Class a -> a
    java.lang.Object b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
com.kpsh.sdk.KpshMsg -> dw:
    int msgId -> a
    java.lang.String msgTitle -> b
    java.lang.String msgBody -> c
    int allowClear -> d
    int allowRing -> e
    int allowVibrate -> f
    void setMsgTitle(java.lang.String) -> setMsgTitle
    void setMsgBody(java.lang.String) -> setMsgBody
    void setMsgId(int) -> setMsgId
    int getMsgId() -> getMsgId
    java.lang.String getMsgTitle() -> getMsgTitle
    java.lang.String getMsgBody() -> getMsgBody
    void setAllowClear(int) -> setAllowClear
    void setAllowRing(int) -> setAllowRing
    void setAllowVibrate(int) -> setAllowVibrate
    int getAllowClear() -> getAllowClear
    int getAllowRing() -> getAllowRing
    int getAllowVibrate() -> getAllowVibrate
com.kpsh.sdk.KpshReceiver -> com.kpsh.sdk.KpshReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
    boolean a(android.content.Context) -> a
    boolean a() -> a
com.kpsh.sdk.KpshSdk -> com.kpsh.sdk.KpshSdk:
    boolean isExistSDCard() -> isExistSDCard
    void checkAM(android.content.Context) -> a
    void initSdk(android.content.Context) -> initSdk
    void startKpshService(android.content.Context) -> startKpshService
    boolean setAppKpshTag(android.content.Context,java.lang.String) -> setAppKpshTag
    void setAppKpshForbid(android.content.Context,boolean) -> setAppKpshForbid
    void msgOperationCallback(android.content.Context,int,java.lang.String) -> msgOperationCallback
    void AppExitNotifyKpsh(android.content.Context) -> AppExitNotifyKpsh
    boolean assetsHasKpshMoudle(android.content.Context) -> b
    java.lang.String getModuleVersion(android.content.Context) -> getModuleVersion
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    com.kpsh.sdk.KpshMsg stringToKpshMsg(android.os.Bundle) -> stringToKpshMsg
    java.lang.String getPmc(android.content.Context) -> getPmc
    java.lang.String getKuwaPmc(android.content.Context) -> getKuwaPmc
com.kpsh.sdk.KpshService -> com.kpsh.sdk.KpshService:
    java.lang.Class a -> a
    java.lang.Object b -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.kpsh.sdk.a -> dx:
    android.content.Context a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    com.kpsh.sdk.a d -> d
    com.kpsh.sdk.a a(android.content.Context) -> a
    java.lang.Class a() -> a
    java.lang.Object b() -> b
com.kpsh.sdk.b -> dy:
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    boolean e(android.content.Context) -> e
    boolean a(java.io.File,java.io.File) -> a
    boolean c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.io.File) -> a
    boolean b(android.content.Context,java.lang.String,java.io.File) -> b
    int a(android.content.Context,java.io.File,java.io.File) -> a
    void b(java.lang.String) -> b
    boolean a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
    void a() -> a
    java.io.File a(java.lang.String) -> a
    java.io.File d(android.content.Context) -> d
com.kpsh.sdk.c -> dz:
    int a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    boolean a(int) -> a
    int b() -> b
    void a(java.lang.Exception) -> a
com.kpsh.sdk.d -> ea:
    com.kpsh.sdk.KpshReceiver a -> a
    android.content.Context b -> b
    android.content.Intent c -> c
    void run() -> run
com.kpsh.sdk.e -> eb:
    android.content.Context a -> a
    void run() -> run
cool.sdk.MicroEntry.MicroEntry -> ec:
    cool.sdk.download.CoolDLMgr CoolDLMgr(android.content.Context,java.lang.String,int) -> CoolDLMgr
cool.sdk.MicroEntry.MicroEntryHelper -> ed:
    java.lang.String[] MEAction -> a
    boolean HasSetDisable -> B
    java.lang.Class[] mActivityClass -> b
    long TimeWakeUpShow -> c
    long TimeShow -> d
    boolean IsMeUpdateDisclaimer -> e
    int NotifyID -> f
    com.iLoong.launcher.MList.MyR RR -> g
    android.content.Context mContext -> h
    cool.sdk.MicroEntry.MicroEntryHelper instance -> i
    boolean[] visableInDesktop -> j
    cool.sdk.MicroEntry.MicroEntryHelper getInstance(android.content.Context) -> getInstance
    void OnDataChange() -> OnDataChange
    void updateME(boolean[]) -> a
    void ShowMENotification(boolean[],int,long,int,int) -> a
    void ShowNotifcationPer(boolean[],int,long,int,int) -> b
    void ShowNotifcation() -> ShowNotifcation
    long getServerCurTime() -> a
    void UpdateMeStateUserConfirm(boolean[],int) -> UpdateMeStateUserConfirm
    void updateMEStateForce(boolean[]) -> b
    void SetDesktopShotCutIcon(android.content.Context,java.lang.Class,boolean,int) -> SetDesktopShotCutIcon
    void setEnabled(android.content.Context,java.lang.Class,boolean,boolean,int) -> setEnabled
    void setEnableByCfg(int) -> setEnableByCfg
    boolean checkActionCanEnable(android.content.Context,int) -> a
    boolean checkActionCanDisable(android.content.Context,int) -> b
    void setComponentEnabled(android.content.Context,android.content.ComponentName,int) -> a
    boolean shouldExit(android.content.Context) -> shouldExit
    void UpdateDeleteItemByHide(int,java.lang.String) -> UpdateDeleteItemByHide
    void UpdateDeleteItemListByConfig(boolean[]) -> c
    void UpdateActiveItemList(boolean[],int) -> a
    java.lang.String getEntryID() -> getEntryID
cool.sdk.MicroEntry.MicroEntryLog -> ee:
    java.lang.Object syncObj -> a
    void LogItem(android.content.Context,java.lang.String,cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem) -> a
    void LogItem(android.content.Context,java.lang.String,java.util.List) -> a
    void LogActive(android.content.Context,cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem) -> LogActive
    void LogActive(android.content.Context,java.util.List) -> LogActive
    void LogDelete(android.content.Context,cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem) -> LogDelete
    void LogDelete(android.content.Context,java.util.List) -> LogDelete
cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem -> ef:
    int type -> a
    int id -> b
    java.lang.String name -> c
cool.sdk.MicroEntry.MicroEntryUpdate -> eg:
    cool.sdk.update.manager.UpdateConfig config -> k
    android.content.Context context -> l
    cool.sdk.log.CoolLog Log -> m
    cool.sdk.download.CoolDLMgr dlMgrIcon -> n
    java.lang.Object dlMgrIconSync -> o
    void OnDataChange() -> OnDataChange
    java.lang.String getEntryID() -> getEntryID
    cool.sdk.download.CoolDLMgr getCoolDLMgrIcon() -> getCoolDLMgrIcon
    boolean allowDeleteEntry() -> allowDeleteEntry
    java.lang.String localeGetSysLanguage() -> localeGetSysLanguage
    boolean OnUpdate(android.content.Context) -> a
    java.lang.String getListString() -> getListString
    java.lang.String getEntryUrl(int) -> getEntryUrl
cool.sdk.MicroEntry.MicroEntryUpdate$1 -> eh:
    cool.sdk.MicroEntry.MicroEntryUpdate this$0 -> a
    void mySuccessCheck() -> a
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.MicroEntry.MicroEntryUpdate$MyIconCoolDLCallback -> ei:
    int successCount -> b
    int failCount -> c
    int downloadCount -> d
    int totalCount -> e
    cool.sdk.MicroEntry.MicroEntryUpdate this$0 -> f
cool.sdk.common.Compress -> ej:
    void compress(java.io.InputStream,java.io.OutputStream) -> compress
    void decompress(java.io.InputStream,java.io.OutputStream) -> decompress
    byte[] byteCompress(byte[]) -> byteCompress
    byte[] byteDecompress(byte[]) -> byteDecompress
    byte[] Md5(byte[]) -> Md5
cool.sdk.common.CoolHttpClient -> ek:
    org.apache.http.client.HttpClient customerHttpClient -> d
    byte[] decodekey -> a
    int sequence -> e
    byte[] CientENCRYPT2 -> b
    int encryptMode -> c
    void Translate(byte[],byte[]) -> Translate
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    byte[] wrapContentBody(java.lang.String) -> wrapContentBody
    java.lang.String unWrapContentBody(byte[]) -> unWrapContentBody
    cool.sdk.common.CoolHttpClient$ResultEntity postEntity(java.lang.String,java.lang.String) -> postEntity
cool.sdk.common.CoolHttpClient$ResultEntity -> el:
    int httpCode -> a
    java.lang.Exception exception -> b
    java.lang.String content -> c
    long contentLength -> d
cool.sdk.common.CoolMethod -> em:
    java.lang.String getSn(android.content.Context) -> getSn
    java.lang.String getAppID(android.content.Context) -> getAppID
    java.lang.String getCooeeId(android.content.Context) -> getCooeeId
    long getTotalCallTime(android.content.Context) -> getTotalCallTime
    int getSmsNum(android.content.Context) -> getSmsNum
    long getCallTimes(android.content.Context) -> getCallTimes
    long getPhoneTotalUseTime(android.content.Context) -> getPhoneTotalUseTime
    long getAppActiveTime(android.content.Context) -> getAppActiveTime
    long getInstallAppCount(android.content.Context) -> getInstallAppCount
    boolean IsBuildInApp(android.content.Context,java.lang.String) -> IsBuildInApp
cool.sdk.common.DES -> en:
    java.lang.String ivs -> a
    char[] HEXCHAR -> b
    byte[] cbc_encode(java.lang.String,java.lang.String) -> cbc_encode
    byte[] cbc_encode(byte[],byte[]) -> cbc_encode
    byte[] cbc_decode(java.lang.String,byte[]) -> cbc_decode
    byte[] ecb_encode(java.lang.String,java.lang.String) -> ecb_encode
    byte[] ecb_encode(byte[],byte[]) -> ecb_encode
    byte[] ecb_decode(java.lang.String,byte[]) -> ecb_decode
    byte[] ecb_decode(byte[],byte[]) -> ecb_decode
    java.lang.String toHexString(byte[]) -> toHexString
    java.lang.String byte2HexString(byte[]) -> byte2HexString
    byte[] String2Byte(java.lang.String) -> String2Byte
    java.lang.String getMD5EncruptKey(byte[]) -> getMD5EncruptKey
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
cool.sdk.common.JsonUtil -> eo:
    org.json.JSONObject NewRequestJSON(android.content.Context,int,java.lang.String) -> NewRequestJSON
cool.sdk.common.MD5 -> ep:
    char[] HEXCHAR -> a
    java.lang.String toHexString(byte[]) -> toHexString
    java.lang.String byte2HexString(byte[]) -> byte2HexString
    byte[] String2Byte(java.lang.String) -> String2Byte
    java.lang.String getMD5EncruptKey(byte[]) -> getMD5EncruptKey
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
cool.sdk.common.MyMethod -> eq:
    int InstallApk(android.content.Context,java.lang.String,boolean) -> InstallApk
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    boolean InstallApk(android.content.Context,java.lang.String) -> InstallApk
    void StartActivityByPackageName(android.content.Context,java.lang.String) -> StartActivityByPackageName
    boolean IsPackageInstalled(android.content.Context,java.lang.String) -> IsPackageInstalled
    boolean vertifyApk(android.content.Context,java.lang.String,java.lang.String) -> vertifyApk
cool.sdk.common.UrlUtil -> er:
    java.lang.String[] urls -> a
    java.lang.String urlGetTime -> b
    byte[] TimeArray -> c
    byte[] CientENCRYPT -> d
    java.lang.String getDataServerUrl() -> getDataServerUrl
    java.lang.String getDownloadServerUrl() -> getDownloadServerUrl
    java.lang.String getLogServerUrl() -> getLogServerUrl
cool.sdk.db.DoubleBackUpDB -> es:
    java.lang.String DB_NAME -> a
    java.lang.Object syncObj -> b
    java.lang.String privateDbPath -> p
    java.lang.String sdcardDbPath -> q
    java.lang.String TBL_NAME -> r
    java.lang.String CREATE_TBL -> s
    void createDb(java.lang.String) -> a
    android.database.sqlite.SQLiteDatabase getDatabase(java.lang.String) -> b
    void setValue(java.lang.String,java.lang.Integer) -> setValue
    void setValue(java.lang.String,java.lang.Long) -> setValue
    void setValue(java.lang.String,java.lang.String) -> setValue
    java.lang.Integer getInt(java.lang.String) -> getInt
    java.lang.Integer getInt(java.lang.String,java.lang.Integer) -> getInt
    java.lang.Long getLong(java.lang.String) -> getLong
    java.lang.Long getLong(java.lang.String,java.lang.Long) -> getLong
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getStringFromDB(java.lang.String,java.lang.String) -> a
    void setStringToDB(java.lang.String,java.lang.String,java.lang.String) -> a
cool.sdk.download.CoolDLCallback -> et:
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.download.CoolDLMgr -> eu:
    android.content.Context context -> c
    cool.sdk.download.manager.dl_manager dl_mgr -> a
    java.lang.String moudleName -> d
    int h12 -> e
    java.lang.String h13 -> f
    cool.sdk.log.CoolLog Log -> b
    boolean checkPathEverytime -> g
    boolean isSilentDownload -> h
    java.util.Map mgrMap -> i
    int[] $SWITCH_TABLE$cool$sdk$download$CoolDLResType -> j
    void setCheckPathEverytime(boolean) -> setCheckPathEverytime
    void setIsSilentDownload(boolean) -> setIsSilentDownload
    java.lang.String getInternalPath() -> getInternalPath
    java.lang.String getExternalPath() -> getExternalPath
    void checkPath() -> a
    cool.sdk.download.CoolDLMgr getInstance(android.content.Context,java.lang.String,int,java.lang.String) -> getInstance
    java.lang.String buildType(java.lang.String,int) -> a
    java.lang.String buildUrl(java.lang.String,int,java.lang.String) -> a
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadNewTask
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadNewTask
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadNewTask
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadNewTask
    int ResDownloadStart(cool.sdk.download.manager.dl_task) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadStart
    void ResDownloadStop(cool.sdk.download.CoolDLResType,java.lang.String,boolean) -> ResDownloadStop
    void ResDownloadStop(cool.sdk.download.CoolDLResType,java.lang.String) -> ResDownloadStop
    int ResQueryState(cool.sdk.download.CoolDLResType,java.lang.String) -> ResQueryState
    cool.sdk.download.manager.dl_info ResGetInfo(cool.sdk.download.CoolDLResType,java.lang.String,boolean) -> ResGetInfo
    cool.sdk.download.manager.dl_info ResGetInfo(cool.sdk.download.CoolDLResType,java.lang.String) -> ResGetInfo
    void ResSetTaskCallback(cool.sdk.download.manager.dl_info,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResSetTaskCallback
    void ResSetTaskCallback(cool.sdk.download.manager.dl_info,cool.sdk.download.CoolDLCallback) -> ResSetTaskCallback
    java.util.List ResGetTaskListNeedDownload() -> ResGetTaskListNeedDownload
    java.util.List ResGetTaskList(cool.sdk.download.CoolDLResType) -> ResGetTaskList
    cool.sdk.download.manager.dl_task IconNewTask(java.lang.String,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> IconNewTask
    cool.sdk.download.manager.dl_task IconNewTask(java.lang.String,cool.sdk.download.CoolDLCallback) -> IconNewTask
    int IconDownload(cool.sdk.download.manager.dl_task) -> IconDownload
    int IconDownload(java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> IconDownload
    int IconDownload(java.lang.String,cool.sdk.download.CoolDLCallback) -> IconDownload
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String,java.lang.String,boolean) -> IconGetInfo
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String,boolean) -> IconGetInfo
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String,java.lang.String) -> IconGetInfo
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String) -> IconGetInfo
    cool.sdk.download.manager.dl_task UrlNewTask(java.lang.String,cool.sdk.download.manager.dl_cb) -> UrlNewTask
    int UrlDownload(cool.sdk.download.manager.dl_task) -> UrlDownload
    int UrlDownload(java.lang.String,cool.sdk.download.manager.dl_cb) -> UrlDownload
    cool.sdk.download.manager.dl_info UrlGetInfo(java.lang.String,boolean) -> UrlGetInfo
    cool.sdk.download.manager.dl_info UrlGetInfo(java.lang.String) -> UrlGetInfo
    int access$0(cool.sdk.download.CoolDLMgr) -> a
    java.lang.String access$1(cool.sdk.download.CoolDLMgr) -> b
    android.content.Context access$2(cool.sdk.download.CoolDLMgr) -> c
    boolean access$3(cool.sdk.download.CoolDLMgr) -> d
    int[] $SWITCH_TABLE$cool$sdk$download$CoolDLResType() -> b
cool.sdk.download.CoolDLMgr$My_dl_cb -> ev:
    cool.sdk.download.CoolDLCallback cb -> a
    cool.sdk.download.CoolDLMgr this$0 -> b
    int[] $SWITCH_TABLE$cool$sdk$download$manager$dl_result -> c
    java.lang.String onUrl(cool.sdk.download.manager.dl_info) -> a
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    cool.sdk.download.manager.dl_result onFinish(cool.sdk.download.manager.dl_info) -> onFinish
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
    int[] $SWITCH_TABLE$cool$sdk$download$manager$dl_result() -> a
cool.sdk.download.CoolDLResType -> ew:
    cool.sdk.download.CoolDLResType RES_TYPE_APK -> RES_TYPE_APK
    cool.sdk.download.CoolDLResType RES_TYPE_PIC -> RES_TYPE_PIC
    int value -> value
    cool.sdk.download.CoolDLResType[] ENUM$VALUES -> ENUM$VALUES
    cool.sdk.download.CoolDLResType from(int) -> a
    cool.sdk.download.CoolDLResType[] values() -> values
    cool.sdk.download.CoolDLResType valueOf(java.lang.String) -> valueOf
cool.sdk.download.manager.DlMethod -> ex:
    java.lang.String getMD5String(java.lang.String) -> getMD5String
    byte[] bytesFromStream(java.io.InputStream) -> bytesFromStream
    boolean saveStream(java.io.InputStream,java.lang.String) -> saveStream
    boolean IsWifiConnected(android.content.Context) -> IsWifiConnected
    boolean IsNetworkAvailable(android.content.Context) -> IsNetworkAvailable
    java.net.HttpURLConnection HttpGet(android.content.Context,java.lang.String,java.lang.String[]) -> HttpGet
    java.net.HttpURLConnection HttpPost(android.content.Context,java.lang.String,byte[],java.lang.String[]) -> HttpPost
    java.net.HttpURLConnection HttpGet(android.content.Context,java.lang.String,int,int,java.lang.String[]) -> HttpGet
    java.net.HttpURLConnection HttpPost(android.content.Context,java.lang.String,int,int,byte[],java.lang.String[]) -> HttpPost
    java.net.HttpURLConnection HttpPostEx(android.content.Context,java.lang.String,byte[],java.lang.String[]) -> HttpPostEx
    java.net.HttpURLConnection HttpPostEx(android.content.Context,java.lang.String,int,int,byte[],java.lang.String[]) -> HttpPostEx
    java.net.HttpURLConnection HttpPost2$4e3cb5da(java.lang.String,int,byte[],java.lang.String[]) -> a
cool.sdk.download.manager.dl_cb -> ey:
    java.lang.String onUrl(cool.sdk.download.manager.dl_info) -> a
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    cool.sdk.download.manager.dl_result onFinish(cool.sdk.download.manager.dl_info) -> onFinish
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.download.manager.dl_db -> ez:
    java.lang.Object syncObj -> b
    java.lang.String dbPath -> a
    android.database.sqlite.SQLiteDatabase getDatabase() -> a
    cool.sdk.download.manager.dl_info constructPkgInfo(android.database.Cursor) -> a
    android.content.ContentValues constructContentValues(cool.sdk.download.manager.dl_info) -> a
    cool.sdk.download.manager.dl_info getPkg(java.lang.String) -> getPkg
    java.util.List getPkgList() -> getPkgList
    int insertPkg(cool.sdk.download.manager.dl_info,boolean) -> insertPkg
    void updatePkg(cool.sdk.download.manager.dl_info) -> updatePkg
    void deletePkg(java.lang.String) -> deletePkg
cool.sdk.download.manager.dl_info -> fa:
    int iD -> a
    long len_p -> b
    long has_b -> c
    java.lang.String url -> d
    java.lang.String filePath -> e
    java.lang.String md5 -> f
    java.lang.Object[] params -> g
    java.util.Map callbackList -> h
    int downloadState -> i
    org.json.JSONObject json -> j
    void setCallback(java.lang.String,cool.sdk.download.manager.dl_cb) -> setCallback
    java.lang.Object[] getParams() -> getParams
    void setParams(java.lang.Object[]) -> setParams
    boolean setParam(int,java.lang.Object) -> setParam
    void setJson(java.lang.String) -> setJson
    java.lang.String getJson() -> getJson
    java.lang.Object getValue(java.lang.String) -> getValue
    boolean setValue(java.lang.String,java.lang.Object) -> setValue
    int getID() -> getID
    void setID(int) -> setID
    long getTotalBytes() -> getTotalBytes
    void setTotalBytes(int) -> setTotalBytes
    long getCurBytes() -> getCurBytes
    void setCurBytes(int) -> setCurBytes
    java.lang.String getURL() -> getURL
    void setURL(java.lang.String) -> setURL
    java.lang.String getFilePath() -> getFilePath
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getMD5() -> getMD5
    void setMD5(java.lang.String) -> setMD5
    int getDownloadState() -> getDownloadState
    boolean IsDownloadSuccess() -> IsDownloadSuccess
    boolean equals(java.lang.Object) -> equals
cool.sdk.download.manager.dl_manager -> fb:
    cool.sdk.download.manager.dl_manager$dl_handler handler -> a
    cool.sdk.download.manager.dl_db dm -> b
    android.content.Context context -> c
    int maxConnCount -> d
    int maxListCount -> l
    int connectTimeout -> e
    int readTimeout -> f
    int maxProgress -> g
    int recvBufSize -> h
    java.lang.Object listObj -> i
    java.util.List urlList -> j
    java.util.List downList -> k
    java.lang.String downloadDir -> m
    void sendMsg(int,java.lang.Object[]) -> a
    void setMaxTaskCount(int) -> setMaxTaskCount
    void setDownloadPath(java.lang.String) -> setDownloadPath
    void setDataBasePath(java.lang.String) -> setDataBasePath
    void setUseHandler(boolean) -> setUseHandler
    void setMaxProgress(int) -> setMaxProgress
    void setRecvBufSize(int) -> setRecvBufSize
    void setMaxConnectionCount(int) -> setMaxConnectionCount
    void setReadTimeout(int) -> setReadTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getTaskCount() -> getTaskCount
    cool.sdk.download.manager.dl_info getTaskInfo(java.lang.String,boolean) -> getTaskInfo
    cool.sdk.download.manager.dl_result updateTaskInfo(cool.sdk.download.manager.dl_info) -> updateTaskInfo
    cool.sdk.download.manager.dl_result startTask(cool.sdk.download.manager.dl_task) -> startTask
    void mergeJson(org.json.JSONObject,org.json.JSONObject) -> a
    cool.sdk.download.manager.dl_result stopTask(java.lang.String) -> stopTask
    cool.sdk.download.manager.dl_result stopTask(java.lang.String,boolean) -> stopTask
    java.util.List getTaskList() -> getTaskList
    void stopAllTask() -> stopAllTask
cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE -> fc:
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE STATE_IDLE -> STATE_IDLE
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE STATE_DOWNING -> STATE_DOWNING
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE[] ENUM$VALUES -> ENUM$VALUES
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE[] values() -> values
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE valueOf(java.lang.String) -> valueOf
cool.sdk.download.manager.dl_manager$MyDownloadTask -> fd:
    cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread thread -> g
    cool.sdk.download.manager.dl_task task -> a
    cool.sdk.download.manager.dl_info info -> b
    java.lang.Object snapObj -> c
    java.lang.Object stateObj -> d
    boolean isWifi -> e
    cool.sdk.download.manager.dl_manager this$0 -> f
    void Start() -> Start
    void Stop(boolean) -> Stop
cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread -> fe:
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE downState -> c
    long lastTry -> a
    cool.sdk.download.manager.dl_manager$MyDownloadTask this$1 -> b
    void Result(boolean,cool.sdk.download.manager.dl_result) -> a
    int getProgress(long,long) -> a
    void run() -> run
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE access$0(cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread) -> a
    void access$2(cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread,cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE) -> a
cool.sdk.download.manager.dl_manager$dl_handler -> ff:
    void handleMessage(android.os.Message) -> handleMessage
cool.sdk.download.manager.dl_result -> fg:
    cool.sdk.download.manager.dl_result OK -> OK
    cool.sdk.download.manager.dl_result FULL -> FULL
    cool.sdk.download.manager.dl_result EXISTS -> EXISTS
    cool.sdk.download.manager.dl_result NOT_EXISTS -> NOT_EXISTS
    cool.sdk.download.manager.dl_result FAIL_HASH -> FAIL_HASH
    cool.sdk.download.manager.dl_result FAIL_NET -> FAIL_NET
    cool.sdk.download.manager.dl_result FAIL_FINISH -> FAIL_FINISH
    cool.sdk.download.manager.dl_result FAIL_EXCEPTION -> FAIL_EXCEPTION
    cool.sdk.download.manager.dl_result FAIL_URL -> FAIL_URL
    cool.sdk.download.manager.dl_result NORMAL_EXIT -> NORMAL_EXIT
    cool.sdk.download.manager.dl_result FAIL_NOT_SUPPORT -> FAIL_NOT_SUPPORT
    cool.sdk.download.manager.dl_result[] ENUM$VALUES -> ENUM$VALUES
    cool.sdk.download.manager.dl_result[] values() -> values
    cool.sdk.download.manager.dl_result valueOf(java.lang.String) -> valueOf
cool.sdk.download.manager.dl_task -> fh:
    java.lang.String url -> a
    boolean useQueue -> b
    java.lang.String path -> c
    java.lang.String getParams -> d
    byte[] postParams -> e
    java.lang.Object[] params -> f
    org.json.JSONObject json -> g
    java.util.Map callbackList -> h
    java.lang.Object getValue(java.lang.String) -> getValue
    boolean setValue(java.lang.String,java.lang.Object) -> setValue
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    boolean isUseQueue() -> isUseQueue
    void setUseQueue(boolean) -> setUseQueue
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getGetParams() -> getGetParams
    void setGetParams(java.lang.String) -> setGetParams
    byte[] getPostParams() -> getPostParams
    void setPostParams(byte[]) -> setPostParams
    java.lang.Object[] getParms() -> getParms
    void setParms(java.lang.Object[]) -> setParms
    void setCallback(java.lang.String,cool.sdk.download.manager.dl_cb) -> setCallback
    java.lang.String onUrl(cool.sdk.download.manager.dl_info) -> onUrl
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    cool.sdk.download.manager.dl_result onFinish(cool.sdk.download.manager.dl_info) -> onFinish
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.log.CoolLog -> fi:
    java.lang.String filePath -> a
    boolean bEnableLog -> b
    java.lang.Boolean bExistsLog -> c
    void setEnableLog(boolean) -> setEnableLog
    void v(java.lang.String,java.lang.String) -> v
cool.sdk.log.LogDB -> fj:
    java.lang.String privateDbPath -> a
    java.lang.String sdcardDbPath -> b
    java.lang.String FILE_NAME -> c
    android.content.Context context -> d
    cool.sdk.log.LogDB instance -> e
    cool.sdk.log.LogDB getInstance(android.content.Context) -> getInstance
    java.util.List getJsonList() -> a
    void setJsonList(java.util.List) -> a
    void AddItem(org.json.JSONObject) -> AddItem
    void AddItem(org.json.JSONArray) -> AddItem
    void RemoveItem(org.json.JSONObject) -> RemoveItem
    void RemoveItem(org.json.JSONArray) -> RemoveItem
    void AddStaticsItem(cool.sdk.log.LogDB$MyStaticsItem) -> AddStaticsItem
    void RemoveStaticsItem(cool.sdk.log.LogDB$MyStaticsItem) -> RemoveStaticsItem
    void RemoveStaticsList(java.util.List) -> RemoveStaticsList
    java.util.List getMyStaticsList(android.content.Context) -> getMyStaticsList
    void setMyStaticsList(java.util.List) -> setMyStaticsList
    java.util.List getMyStaticsListFromFile(java.lang.String) -> a
    void setMyStaticsListToFile(java.lang.String,java.util.List) -> a
cool.sdk.log.LogDB$MyStaticsItem -> fk:
    long serialVersionUID -> serialVersionUID
    java.lang.String Action -> Action
    int h12 -> h12
    java.lang.String h13 -> h13
    java.lang.Integer h17 -> h17
    int productId -> productId
    int productType -> productType
    int resId -> resId
    java.lang.String packageName -> packageName
    java.lang.Integer code -> code
    int count -> count
    boolean equals(java.lang.Object) -> equals
    java.lang.String toMyString() -> a
cool.sdk.log.LogHelper -> fl:
    void Download(android.content.Context,cool.sdk.download.manager.dl_info,java.lang.Integer,int,java.lang.String,java.lang.Integer) -> Download
    void Package(android.content.Context,java.lang.String,boolean) -> Package
    void Item(android.content.Context,org.json.JSONObject,org.json.JSONArray) -> Item
cool.sdk.log.LogHelper$1 -> fm:
    android.content.Context val$context -> a
    int val$h12 -> b
    java.lang.String val$h13 -> c
    java.lang.Integer val$code -> d
    java.lang.String val$Action -> e
    int val$productId -> f
    int val$productType -> g
    int val$resId -> h
    java.lang.String val$packageName -> i
    java.lang.Integer val$h17 -> j
    cool.sdk.log.LogDB$MyStaticsItem val$staticsItem -> k
    cool.sdk.download.manager.dl_info val$info -> l
    void run() -> run
cool.sdk.log.LogHelper$2 -> fn:
    android.content.Context val$context -> a
    boolean val$install -> b
    java.lang.String val$packageName -> c
    void run() -> run
cool.sdk.log.LogHelper$3 -> fo:
    android.content.Context val$context -> a
    int val$h12 -> b
    java.lang.String val$h13 -> c
    org.json.JSONObject val$json -> d
    java.lang.String val$action -> e
    org.json.JSONArray val$array -> f
    void run() -> run
cool.sdk.statistics.StatisticsUpdate -> fp:
    cool.sdk.update.manager.UpdateConfig config -> a
    android.content.Context context -> b
    cool.sdk.log.CoolLog Log -> c
    cool.sdk.statistics.StatisticsUpdate instance -> d
    cool.sdk.statistics.StatisticsUpdate getInstance(android.content.Context) -> getInstance
    long getAppActiveTime() -> getAppActiveTime
    boolean OnUpdate(android.content.Context) -> a
cool.sdk.update.UpdateManager -> fq:
    void UpdateAsync(android.content.Context) -> UpdateAsync
    void UpdateSync(android.content.Context) -> UpdateSync
cool.sdk.update.UpdateManager$1 -> fr:
    android.content.Context val$context -> a
    void run() -> run
cool.sdk.update.UpdateManagerImpl -> fs:
    void Update(android.content.Context) -> Update
    void UpdateSync(android.content.Context) -> UpdateSync
    void UpdateOver(android.content.Context) -> UpdateOver
    boolean allowUpdate(android.content.Context) -> allowUpdate
cool.sdk.update.manager.UpdateConfig -> ft:
    long UPDATE_DEFAULT_MINUTES -> a
    long UPDATE_MIN_MINUTES -> b
    long UPDATE_MAX_MINUTES -> c
    long MAX_UPDATE_TIMES_PER_DAY -> d
    long RETRY_TIMES_WHEN_ONLINE -> e
cool.sdk.update.manager.UpdateHelper -> fu:
    boolean isUpdating -> t
    long lastMinute -> u
    long retryTimes -> v
    long gapMinute -> w
    cool.sdk.update.manager.UpdateHelper$OneDayParam oneDayParam -> x
    cool.sdk.update.manager.UpdateConfig config -> y
    java.lang.String moduleName -> z
    android.content.Context context -> A
    boolean neesUpdate() -> a
    void UpdateForSuccess(boolean) -> UpdateForSuccess
    void Update(boolean,boolean) -> Update
    void Update() -> Update
    void Update(boolean) -> Update
    void UpdateSync(boolean) -> UpdateSync
    boolean OnUpdate(android.content.Context) -> a
    cool.sdk.update.manager.UpdateHelper$OneDayParam getOneDayParam$315c0ebb() -> b
    void setOneDayParam$726ba52b(cool.sdk.update.manager.UpdateHelper$OneDayParam) -> a
    cool.sdk.update.manager.UpdateHelper$OneDayParam getOneDayParamFromFile(java.lang.String) -> a
    void setOneDayParamToFile(java.lang.String,cool.sdk.update.manager.UpdateHelper$OneDayParam) -> a
cool.sdk.update.manager.UpdateHelper$1 -> fv:
    cool.sdk.update.manager.UpdateHelper this$0 -> a
    void run() -> run
cool.sdk.update.manager.UpdateHelper$OneDayParam -> fw:
    long lastDay -> a
    long times -> b
cool.sdk.update.manager.UpdateReceiver -> cool.sdk.update.manager.UpdateReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.AuthenticationToken -> org.apache.cordova.AuthenticationToken:
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
org.apache.cordova.BuildConfig -> org.apache.cordova.BuildConfig:
    boolean DEBUG -> DEBUG
org.apache.cordova.CallbackContext -> org.apache.cordova.CallbackContext:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String callbackId -> callbackId
    org.apache.cordova.CordovaWebView webView -> webView
    boolean finished -> finished
    int changingThreads -> changingThreads
    boolean isFinished() -> isFinished
    boolean isChangingThreads() -> isChangingThreads
    java.lang.String getCallbackId() -> getCallbackId
    void sendPluginResult(org.apache.cordova.PluginResult) -> sendPluginResult
    void success(org.json.JSONObject) -> success
    void success(java.lang.String) -> success
    void success(org.json.JSONArray) -> success
    void success(byte[]) -> success
    void success(int) -> success
    void success() -> success
    void error(org.json.JSONObject) -> error
    void error(java.lang.String) -> error
    void error(int) -> error
org.apache.cordova.Config -> org.apache.cordova.Config:
    java.lang.String TAG -> TAG
    org.apache.cordova.ConfigXmlParser parser -> parser
    void init(android.app.Activity) -> init
    void init() -> init
    java.lang.String getStartUrl() -> getStartUrl
    java.lang.String getErrorUrl() -> getErrorUrl
    java.util.List getPluginEntries() -> getPluginEntries
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    boolean isInitialized() -> isInitialized
org.apache.cordova.ConfigXmlParser -> org.apache.cordova.ConfigXmlParser:
    java.lang.String TAG -> TAG
    java.lang.String launchUrl -> launchUrl
    org.apache.cordova.CordovaPreferences prefs -> prefs
    java.util.ArrayList pluginEntries -> pluginEntries
    boolean insideFeature -> insideFeature
    java.lang.String service -> service
    java.lang.String pluginClass -> pluginClass
    java.lang.String paramType -> paramType
    boolean onload -> onload
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    java.util.ArrayList getPluginEntries() -> getPluginEntries
    java.lang.String getLaunchUrl() -> getLaunchUrl
    void parse(android.content.Context) -> parse
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void handleStartTag(org.xmlpull.v1.XmlPullParser) -> handleStartTag
    void handleEndTag(org.xmlpull.v1.XmlPullParser) -> handleEndTag
    void setStartUrl(java.lang.String) -> setStartUrl
org.apache.cordova.CordovaActivity -> org.apache.cordova.CordovaActivity:
    java.lang.String TAG -> TAG
    org.apache.cordova.CordovaWebView appView -> appView
    int ACTIVITY_STARTING -> ACTIVITY_STARTING
    int ACTIVITY_RUNNING -> ACTIVITY_RUNNING
    int ACTIVITY_EXITING -> ACTIVITY_EXITING
    boolean keepRunning -> keepRunning
    boolean immersiveMode -> immersiveMode
    org.apache.cordova.CordovaPreferences preferences -> preferences
    java.lang.String launchUrl -> launchUrl
    java.util.ArrayList pluginEntries -> pluginEntries
    org.apache.cordova.CordovaInterfaceImpl cordovaInterface -> cordovaInterface
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> init
    void loadConfig() -> loadConfig
    void createViews() -> createViews
    org.apache.cordova.CordovaWebView makeWebView() -> makeWebView
    org.apache.cordova.CordovaWebViewEngine makeWebViewEngine() -> makeWebViewEngine
    org.apache.cordova.CordovaInterfaceImpl makeCordovaInterface() -> makeCordovaInterface
    void loadUrl(java.lang.String) -> loadUrl
    android.view.View loadWebViewUrl(java.lang.String) -> loadWebViewUrl
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onStop() -> onStop
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void displayError(java.lang.String,java.lang.String,java.lang.String,boolean) -> displayError
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
org.apache.cordova.CordovaActivity$1 -> fx:
    org.apache.cordova.CordovaActivity this$0 -> a
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
org.apache.cordova.CordovaActivity$2 -> fy:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    java.lang.String val$errorUrl -> c
    void run() -> run
org.apache.cordova.CordovaActivity$3 -> fz:
    org.apache.cordova.CordovaActivity this$0 -> a
    boolean val$exit -> b
    org.apache.cordova.CordovaActivity val$me -> c
    java.lang.String val$description -> d
    java.lang.String val$failingUrl -> e
    void run() -> run
org.apache.cordova.CordovaActivity$4 -> ga:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    java.lang.String val$button -> e
    boolean val$exit -> f
    void run() -> run
    org.apache.cordova.CordovaActivity access$0(org.apache.cordova.CordovaActivity$4) -> a
org.apache.cordova.CordovaActivity$4$1 -> gb:
    org.apache.cordova.CordovaActivity$4 this$1 -> a
    boolean val$exit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaArgs -> org.apache.cordova.CordovaArgs:
    org.json.JSONArray baseArgs -> baseArgs
    java.lang.Object get(int) -> get
    boolean getBoolean(int) -> getBoolean
    double getDouble(int) -> getDouble
    int getInt(int) -> getInt
    org.json.JSONArray getJSONArray(int) -> getJSONArray
    org.json.JSONObject getJSONObject(int) -> getJSONObject
    long getLong(int) -> getLong
    java.lang.String getString(int) -> getString
    java.lang.Object opt(int) -> opt
    boolean optBoolean(int) -> optBoolean
    double optDouble(int) -> optDouble
    int optInt(int) -> optInt
    org.json.JSONArray optJSONArray(int) -> optJSONArray
    org.json.JSONObject optJSONObject(int) -> optJSONObject
    long optLong(int) -> optLong
    java.lang.String optString(int) -> optString
    boolean isNull(int) -> isNull
    byte[] getArrayBuffer(int) -> getArrayBuffer
org.apache.cordova.CordovaBridge -> org.apache.cordova.CordovaBridge:
    java.lang.String LOG_TAG -> LOG_TAG
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.NativeToJsMessageQueue jsMessageQueue -> jsMessageQueue
    int expectedBridgeSecret -> expectedBridgeSecret
    java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> jsExec
    void jsSetNativeToJsBridgeMode(int,int) -> jsSetNativeToJsBridgeMode
    java.lang.String jsRetrieveJsMessages(int,boolean) -> jsRetrieveJsMessages
    boolean verifySecret(java.lang.String,int) -> verifySecret
    void clearBridgeSecret() -> clearBridgeSecret
    boolean isSecretEstablished() -> isSecretEstablished
    int generateBridgeSecret() -> generateBridgeSecret
    void reset() -> reset
    java.lang.String promptOnJsPrompt(java.lang.String,java.lang.String,java.lang.String) -> promptOnJsPrompt
org.apache.cordova.CordovaClientCertRequest -> org.apache.cordova.CordovaClientCertRequest:
    android.webkit.ClientCertRequest request -> request
    void cancel() -> cancel
    java.lang.String getHost() -> getHost
    java.lang.String[] getKeyTypes() -> getKeyTypes
    int getPort() -> getPort
    java.security.Principal[] getPrincipals() -> getPrincipals
    void ignore() -> ignore
    void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[]) -> proceed
org.apache.cordova.CordovaDialogsHelper -> org.apache.cordova.CordovaDialogsHelper:
    android.content.Context context -> context
    android.app.AlertDialog lastHandledDialog -> lastHandledDialog
    void showAlert(java.lang.String,org.apache.cordova.CordovaDialogsHelper$Result) -> showAlert
    void showConfirm(java.lang.String,org.apache.cordova.CordovaDialogsHelper$Result) -> showConfirm
    void showPrompt(java.lang.String,java.lang.String,org.apache.cordova.CordovaDialogsHelper$Result) -> showPrompt
    void destroyLastDialog() -> destroyLastDialog
org.apache.cordova.CordovaDialogsHelper$1 -> gc:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$2 -> gd:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaDialogsHelper$3 -> ge:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.apache.cordova.CordovaDialogsHelper$4 -> gf:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$5 -> gg:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$6 -> gh:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaDialogsHelper$7 -> gi:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.apache.cordova.CordovaDialogsHelper$8 -> gj:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    android.widget.EditText val$input -> b
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$9 -> gk:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$Result -> org.apache.cordova.CordovaDialogsHelper$Result:
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.CordovaHttpAuthHandler -> org.apache.cordova.CordovaHttpAuthHandler:
    android.webkit.HttpAuthHandler handler -> handler
    void cancel() -> cancel
    void proceed(java.lang.String,java.lang.String) -> proceed
org.apache.cordova.CordovaInterface -> org.apache.cordova.CordovaInterface:
    void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void setActivityResultCallback(org.apache.cordova.CordovaPlugin) -> setActivityResultCallback
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    org.apache.cordova.CordovaWrap getCordovaWrap() -> getCordovaWrap
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
org.apache.cordova.CordovaInterfaceImpl -> org.apache.cordova.CordovaInterfaceImpl:
    java.lang.String TAG -> TAG
    android.app.Activity activity -> activity
    android.content.Context context -> context
    org.apache.cordova.CordovaWrap cordovaWrap -> cordovaWrap
    java.util.concurrent.ExecutorService threadPool -> threadPool
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.CordovaInterfaceImpl$ActivityResultHolder savedResult -> savedResult
    org.apache.cordova.CordovaPlugin activityResultCallback -> activityResultCallback
    java.lang.String initCallbackService -> initCallbackService
    int activityResultRequestCode -> activityResultRequestCode
    void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void setActivityResultCallback(org.apache.cordova.CordovaPlugin) -> setActivityResultCallback
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    org.apache.cordova.CordovaWrap getCordovaWrap() -> getCordovaWrap
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    void onCordovaInit(org.apache.cordova.PluginManager) -> onCordovaInit
    boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setActivityResultRequestCode(int) -> setActivityResultRequestCode
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
org.apache.cordova.CordovaInterfaceImpl$ActivityResultHolder -> gl:
    int requestCode -> a
    int resultCode -> b
    android.content.Intent intent -> c
org.apache.cordova.CordovaPlugin -> org.apache.cordova.CordovaPlugin:
    org.apache.cordova.CordovaWebView webView -> webView
    org.apache.cordova.CordovaInterface cordova -> cordova
    org.apache.cordova.CordovaPreferences preferences -> preferences
    java.lang.String serviceName -> serviceName
    boolean $assertionsDisabled -> $assertionsDisabled
    void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences) -> privateInitialize
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void pluginInitialize() -> pluginInitialize
    java.lang.String getServiceName() -> getServiceName
    boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext) -> execute
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext) -> execute
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.Boolean shouldAllowRequest(java.lang.String) -> shouldAllowRequest
    java.lang.Boolean shouldAllowNavigation(java.lang.String) -> shouldAllowNavigation
    java.lang.Boolean shouldAllowBridgeAccess(java.lang.String) -> shouldAllowBridgeAccess
    java.lang.Boolean shouldOpenExternalUrl(java.lang.String) -> shouldOpenExternalUrl
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    org.apache.cordova.CordovaResourceApi$OpenForReadResult handleOpenForRead(android.net.Uri) -> handleOpenForRead
    android.net.Uri toPluginUri(android.net.Uri) -> toPluginUri
    android.net.Uri fromPluginUri(android.net.Uri) -> fromPluginUri
    void onReset() -> onReset
    boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest) -> onReceivedClientCertRequest
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
org.apache.cordova.CordovaPreferences -> org.apache.cordova.CordovaPreferences:
    java.util.HashMap prefs -> prefs
    android.os.Bundle preferencesBundleExtras -> preferencesBundleExtras
    void setPreferencesBundle(android.os.Bundle) -> setPreferencesBundle
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,boolean) -> set
    void set(java.lang.String,int) -> set
    void set(java.lang.String,double) -> set
    java.util.Map getAll() -> getAll
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    int getInteger(java.lang.String,int) -> getInteger
    double getDouble(java.lang.String,double) -> getDouble
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
org.apache.cordova.CordovaResourceApi -> org.apache.cordova.CordovaResourceApi:
    java.lang.String LOG_TAG -> LOG_TAG
    int URI_TYPE_FILE -> URI_TYPE_FILE
    int URI_TYPE_ASSET -> URI_TYPE_ASSET
    int URI_TYPE_CONTENT -> URI_TYPE_CONTENT
    int URI_TYPE_RESOURCE -> URI_TYPE_RESOURCE
    int URI_TYPE_DATA -> URI_TYPE_DATA
    int URI_TYPE_HTTP -> URI_TYPE_HTTP
    int URI_TYPE_HTTPS -> URI_TYPE_HTTPS
    int URI_TYPE_PLUGIN -> URI_TYPE_PLUGIN
    int URI_TYPE_UNKNOWN -> URI_TYPE_UNKNOWN
    java.lang.String PLUGIN_URI_SCHEME -> PLUGIN_URI_SCHEME
    java.lang.String[] LOCAL_FILE_PROJECTION -> LOCAL_FILE_PROJECTION
    java.lang.Thread jsThread -> jsThread
    android.content.res.AssetManager assetManager -> assetManager
    android.content.ContentResolver contentResolver -> contentResolver
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    boolean threadCheckingEnabled -> threadCheckingEnabled
    void setThreadCheckingEnabled(boolean) -> setThreadCheckingEnabled
    boolean isThreadCheckingEnabled() -> isThreadCheckingEnabled
    int getUriType(android.net.Uri) -> getUriType
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    java.lang.String remapPath(java.lang.String) -> remapPath
    java.io.File mapUriToFile(android.net.Uri) -> mapUriToFile
    java.lang.String getMimeType(android.net.Uri) -> getMimeType
    java.lang.String getMimeTypeFromPath(java.lang.String) -> getMimeTypeFromPath
    org.apache.cordova.CordovaResourceApi$OpenForReadResult openForRead(android.net.Uri) -> openForRead
    org.apache.cordova.CordovaResourceApi$OpenForReadResult openForRead(android.net.Uri,boolean) -> openForRead
    java.io.OutputStream openOutputStream(android.net.Uri) -> openOutputStream
    java.io.OutputStream openOutputStream(android.net.Uri,boolean) -> openOutputStream
    java.net.HttpURLConnection createHttpConnection(android.net.Uri) -> createHttpConnection
    void copyResource(org.apache.cordova.CordovaResourceApi$OpenForReadResult,java.io.OutputStream) -> copyResource
    void copyResource(android.net.Uri,java.io.OutputStream) -> copyResource
    void copyResource(android.net.Uri,android.net.Uri) -> copyResource
    void assertBackgroundThread() -> assertBackgroundThread
    java.lang.String getDataUriMimeType(android.net.Uri) -> getDataUriMimeType
    org.apache.cordova.CordovaResourceApi$OpenForReadResult readDataUri(android.net.Uri) -> readDataUri
    void assertNonRelative(android.net.Uri) -> assertNonRelative
org.apache.cordova.CordovaResourceApi$OpenForReadResult -> org.apache.cordova.CordovaResourceApi$OpenForReadResult:
    android.net.Uri uri -> uri
    java.io.InputStream inputStream -> inputStream
    java.lang.String mimeType -> mimeType
    long length -> length
    android.content.res.AssetFileDescriptor assetFd -> assetFd
org.apache.cordova.CordovaWebView -> org.apache.cordova.CordovaWebView:
    java.lang.String CORDOVA_VERSION -> CORDOVA_VERSION
    void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences) -> init
    boolean isInitialized() -> isInitialized
    android.view.View getView() -> getView
    void loadUrlIntoView(java.lang.String,boolean) -> loadUrlIntoView
    void stopLoading() -> stopLoading
    boolean canGoBack() -> canGoBack
    void clearCache() -> clearCache
    void clearCache(boolean) -> clearCache
    void clearHistory() -> clearHistory
    boolean backHistory() -> backHistory
    void handlePause(boolean) -> handlePause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handleResume(boolean) -> handleResume
    void handleStart() -> handleStart
    void handleStop() -> handleStop
    void handleDestroy() -> handleDestroy
    void sendJavascript(java.lang.String) -> sendJavascript
    void showWebPage(java.lang.String,boolean,boolean,java.util.Map) -> showWebPage
    boolean isCustomViewShowing() -> isCustomViewShowing
    void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    void hideCustomView() -> hideCustomView
    org.apache.cordova.CordovaResourceApi getResourceApi() -> getResourceApi
    void setButtonPlumbedToJs(int,boolean) -> setButtonPlumbedToJs
    boolean isButtonPlumbedToJs(int) -> isButtonPlumbedToJs
    void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String) -> sendPluginResult
    org.apache.cordova.PluginManager getPluginManager() -> getPluginManager
    org.apache.cordova.CordovaWebViewEngine getEngine() -> getEngine
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    java.lang.String getUrl() -> getUrl
    android.content.Context getContext() -> getContext
    void loadUrl(java.lang.String) -> loadUrl
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
org.apache.cordova.CordovaWebViewEngine -> org.apache.cordova.CordovaWebViewEngine:
    void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue) -> init
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    android.view.View getView() -> getView
    void loadUrl(java.lang.String,boolean) -> loadUrl
    void stopLoading() -> stopLoading
    java.lang.String getUrl() -> getUrl
    void clearCache() -> clearCache
    void clearHistory() -> clearHistory
    boolean canGoBack() -> canGoBack
    boolean goBack() -> goBack
    void setPaused(boolean) -> setPaused
    void destroy() -> destroy
org.apache.cordova.CordovaWebViewEngine$Client -> org.apache.cordova.CordovaWebViewEngine$Client:
    java.lang.Boolean onDispatchKeyEvent(android.view.KeyEvent) -> onDispatchKeyEvent
    void clearLoadTimeoutTimer() -> clearLoadTimeoutTimer
    void onPageStarted(java.lang.String) -> onPageStarted
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageFinishedLoading(java.lang.String) -> onPageFinishedLoading
    boolean onNavigationAttempt(java.lang.String) -> onNavigationAttempt
org.apache.cordova.CordovaWebViewEngine$EngineView -> org.apache.cordova.CordovaWebViewEngine$EngineView:
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
org.apache.cordova.CordovaWebViewImpl -> org.apache.cordova.CordovaWebViewImpl:
    java.lang.String TAG -> TAG
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.CordovaWebViewEngine engine -> engine
    org.apache.cordova.CordovaInterface cordova -> cordova
    int loadUrlTimeout -> loadUrlTimeout
    org.apache.cordova.CordovaResourceApi resourceApi -> resourceApi
    org.apache.cordova.CordovaPreferences preferences -> preferences
    org.apache.cordova.CoreAndroid appPlugin -> appPlugin
    org.apache.cordova.NativeToJsMessageQueue nativeToJsMessageQueue -> nativeToJsMessageQueue
    org.apache.cordova.CordovaWebViewImpl$EngineClient engineClient -> engineClient
    boolean hasPausedEver -> hasPausedEver
    java.lang.String loadedUrl -> loadedUrl
    android.view.View mCustomView -> mCustomView
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback -> mCustomViewCallback
    java.util.Set boundKeyCodes -> boundKeyCodes
    android.content.Context mRemoteContext -> mRemoteContext
    boolean $assertionsDisabled -> $assertionsDisabled
    org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences) -> createEngine
    org.apache.cordova.CordovaWebViewEngine createEngineWrap(android.content.Context,android.content.Context,org.apache.cordova.CordovaPreferences) -> createEngineWrap
    void init(org.apache.cordova.CordovaInterface) -> init
    void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences) -> init
    boolean isInitialized() -> isInitialized
    void loadUrlIntoView(java.lang.String,boolean) -> loadUrlIntoView
    void loadUrl(java.lang.String) -> loadUrl
    void showWebPage(java.lang.String,boolean,boolean,java.util.Map) -> showWebPage
    void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    void hideCustomView() -> hideCustomView
    boolean isCustomViewShowing() -> isCustomViewShowing
    void sendJavascript(java.lang.String) -> sendJavascript
    void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String) -> sendPluginResult
    org.apache.cordova.PluginManager getPluginManager() -> getPluginManager
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    org.apache.cordova.CordovaResourceApi getResourceApi() -> getResourceApi
    org.apache.cordova.CordovaWebViewEngine getEngine() -> getEngine
    android.view.View getView() -> getView
    android.content.Context getContext() -> getContext
    void sendJavascriptEvent(java.lang.String) -> sendJavascriptEvent
    void setButtonPlumbedToJs(int,boolean) -> setButtonPlumbedToJs
    boolean isButtonPlumbedToJs(int) -> isButtonPlumbedToJs
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
    java.lang.String getUrl() -> getUrl
    void stopLoading() -> stopLoading
    boolean canGoBack() -> canGoBack
    void clearCache() -> clearCache
    void clearCache(boolean) -> clearCache
    void clearHistory() -> clearHistory
    boolean backHistory() -> backHistory
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handlePause(boolean) -> handlePause
    void handleResume(boolean) -> handleResume
    void handleStart() -> handleStart
    void handleStop() -> handleStop
    void handleDestroy() -> handleDestroy
    int access$0(org.apache.cordova.CordovaWebViewImpl) -> access$0
    void access$1(org.apache.cordova.CordovaWebViewImpl,int) -> access$1
    java.util.Set access$2(org.apache.cordova.CordovaWebViewImpl) -> access$2
    org.apache.cordova.PluginManager access$3(org.apache.cordova.CordovaWebViewImpl) -> access$3
    org.apache.cordova.CordovaInterface access$4(org.apache.cordova.CordovaWebViewImpl) -> access$4
    android.view.View access$5(org.apache.cordova.CordovaWebViewImpl) -> access$5
    void access$6(org.apache.cordova.CordovaWebViewImpl,java.lang.String) -> access$6
org.apache.cordova.CordovaWebViewImpl$1 -> gm:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    java.lang.String val$url -> b
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$2 -> gn:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    int val$loadUrlTimeoutValue -> b
    int val$currentLoadUrlTimeout -> c
    java.lang.Runnable val$loadError -> d
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$3 -> go:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    int val$loadUrlTimeoutValue -> b
    java.lang.Runnable val$timeoutCheck -> c
    java.lang.String val$url -> d
    boolean val$_recreatePlugins -> e
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$4 -> gp:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    int val$loadUrlTimeoutValue -> b
    java.lang.Runnable val$timeoutCheck -> c
    java.lang.String val$url -> d
    boolean val$_recreatePlugins -> e
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$EngineClient -> org.apache.cordova.CordovaWebViewImpl$EngineClient:
    org.apache.cordova.CordovaWebViewImpl this$0 -> this$0
    void clearLoadTimeoutTimer() -> clearLoadTimeoutTimer
    void onPageStarted(java.lang.String) -> onPageStarted
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageFinishedLoading(java.lang.String) -> onPageFinishedLoading
    java.lang.Boolean onDispatchKeyEvent(android.view.KeyEvent) -> onDispatchKeyEvent
    boolean onNavigationAttempt(java.lang.String) -> onNavigationAttempt
    org.apache.cordova.CordovaWebViewImpl access$0(org.apache.cordova.CordovaWebViewImpl$EngineClient) -> access$0
org.apache.cordova.CordovaWebViewImpl$EngineClient$1 -> gq:
    org.apache.cordova.CordovaWebViewImpl$EngineClient this$1 -> a
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$EngineClient$1$1 -> gr:
    org.apache.cordova.CordovaWebViewImpl$EngineClient$1 this$2 -> a
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$EngineClient$1$2 -> gs:
    org.apache.cordova.CordovaWebViewImpl$EngineClient$1 this$2 -> a
    void run() -> run
org.apache.cordova.CordovaWrap -> org.apache.cordova.CordovaWrap:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.content.Context mRemoteContext -> mRemoteContext
    org.apache.cordova.CordovaWebView appView -> appView
    int ACTIVITY_STARTING -> ACTIVITY_STARTING
    int ACTIVITY_RUNNING -> ACTIVITY_RUNNING
    int ACTIVITY_EXITING -> ACTIVITY_EXITING
    boolean keepRunning -> keepRunning
    boolean immersiveMode -> immersiveMode
    org.apache.cordova.CordovaPreferences preferences -> preferences
    java.lang.String launchUrl -> launchUrl
    java.util.ArrayList pluginEntries -> pluginEntries
    org.apache.cordova.CordovaInterfaceImpl cordovaInterface -> cordovaInterface
    android.os.Handler mHandler -> mHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void onCreate(android.os.Bundle) -> onCreate
    void loadConfig() -> loadConfig
    org.apache.cordova.CordovaWebView makeWebView() -> makeWebView
    org.apache.cordova.CordovaWebViewEngine makeWebViewEngine() -> makeWebViewEngine
    org.apache.cordova.CordovaInterfaceImpl makeCordovaInterface() -> makeCordovaInterface
    android.view.View loadWebViewUrl(java.lang.String) -> loadWebViewUrl
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onStop() -> onStop
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void displayError(java.lang.String,java.lang.String,java.lang.String,boolean) -> displayError
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context access$0(org.apache.cordova.CordovaWrap) -> access$0
org.apache.cordova.CordovaWrap$1 -> gt:
    org.apache.cordova.CordovaWrap this$0 -> a
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
org.apache.cordova.CordovaWrap$2 -> gu:
    org.apache.cordova.CordovaWrap this$0 -> a
    org.apache.cordova.CordovaWrap val$me -> b
    java.lang.String val$errorUrl -> c
    void run() -> run
org.apache.cordova.CordovaWrap$3 -> gv:
    org.apache.cordova.CordovaWrap this$0 -> a
    boolean val$exit -> b
    org.apache.cordova.CordovaWrap val$me -> c
    java.lang.String val$description -> d
    java.lang.String val$failingUrl -> e
    void run() -> run
org.apache.cordova.CordovaWrap$4 -> gw:
    org.apache.cordova.CordovaWrap this$0 -> a
    java.lang.String val$message -> b
    java.lang.String val$title -> c
    java.lang.String val$button -> d
    boolean val$exit -> e
    void run() -> run
org.apache.cordova.CordovaWrap$4$1 -> gx:
    org.apache.cordova.CordovaWrap$4 this$1 -> a
    boolean val$exit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CoreAndroid -> org.apache.cordova.CoreAndroid:
    android.content.BroadcastReceiver telephonyReceiver -> a
    org.apache.cordova.CallbackContext messageChannel -> b
    void fireJavascriptEvent(java.lang.String) -> fireJavascriptEvent
    void pluginInitialize() -> pluginInitialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void clearCache() -> clearCache
    void loadUrl(java.lang.String,org.json.JSONObject) -> loadUrl
    void clearHistory() -> clearHistory
    void backHistory() -> backHistory
    void overrideBackbutton(boolean) -> overrideBackbutton
    void overrideButton(java.lang.String,boolean) -> overrideButton
    boolean isBackbuttonOverridden() -> isBackbuttonOverridden
    void exitApp() -> exitApp
    void onDestroy() -> onDestroy
org.apache.cordova.CoreAndroid$1 -> gy:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$2 -> gz:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$3 -> ha:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$4 -> hb:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$5 -> hc:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$6 -> hd:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$7 -> he:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$8 -> hf:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$9 -> hg:
    org.apache.cordova.CoreAndroid this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.ExposedJsApi -> org.apache.cordova.ExposedJsApi:
    java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    void setNativeToJsBridgeMode(int,int) -> setNativeToJsBridgeMode
    java.lang.String retrieveJsMessages(int,boolean) -> retrieveJsMessages
org.apache.cordova.ICordovaClientCertRequest -> org.apache.cordova.ICordovaClientCertRequest:
    void cancel() -> cancel
    java.lang.String getHost() -> getHost
    java.lang.String[] getKeyTypes() -> getKeyTypes
    int getPort() -> getPort
    java.security.Principal[] getPrincipals() -> getPrincipals
    void ignore() -> ignore
    void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[]) -> proceed
org.apache.cordova.ICordovaCookieManager -> org.apache.cordova.ICordovaCookieManager:
    void setCookiesEnabled(boolean) -> setCookiesEnabled
    void setCookie(java.lang.String,java.lang.String) -> setCookie
    java.lang.String getCookie(java.lang.String) -> getCookie
    void clearCookies() -> clearCookies
    void flush() -> flush
org.apache.cordova.ICordovaHttpAuthHandler -> org.apache.cordova.ICordovaHttpAuthHandler:
    void cancel() -> cancel
    void proceed(java.lang.String,java.lang.String) -> proceed
org.apache.cordova.LOG -> org.apache.cordova.LOG:
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int LOGLEVEL -> LOGLEVEL
    void setLogLevel(int) -> setLogLevel
    void setLogLevel(java.lang.String) -> setLogLevel
    boolean isLoggable(int) -> isLoggable
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
org.apache.cordova.NativeToJsMessageQueue -> org.apache.cordova.NativeToJsMessageQueue:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean FORCE_ENCODE_USING_EVAL -> FORCE_ENCODE_USING_EVAL
    boolean DISABLE_EXEC_CHAINING -> DISABLE_EXEC_CHAINING
    int MAX_PAYLOAD_SIZE -> MAX_PAYLOAD_SIZE
    boolean paused -> paused
    java.util.LinkedList queue -> queue
    java.util.ArrayList bridgeModes -> bridgeModes
    org.apache.cordova.NativeToJsMessageQueue$BridgeMode activeBridgeMode -> activeBridgeMode
    void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode) -> addBridgeMode
    boolean isBridgeEnabled() -> isBridgeEnabled
    boolean isEmpty() -> isEmpty
    void setBridgeMode(int) -> setBridgeMode
    void reset() -> reset
    int calculatePackedMessageLength(org.apache.cordova.NativeToJsMessageQueue$JsMessage) -> calculatePackedMessageLength
    void packMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage,java.lang.StringBuilder) -> packMessage
    java.lang.String popAndEncode(boolean) -> popAndEncode
    java.lang.String popAndEncodeAsJs() -> popAndEncodeAsJs
    void addJavaScript(java.lang.String) -> addJavaScript
    void addPluginResult(org.apache.cordova.PluginResult,java.lang.String) -> addPluginResult
    void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage) -> enqueueMessage
    void setPaused(boolean) -> setPaused
org.apache.cordova.NativeToJsMessageQueue$BridgeMode -> org.apache.cordova.NativeToJsMessageQueue$BridgeMode:
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
    void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean) -> notifyOfFlush
    void reset() -> reset
org.apache.cordova.NativeToJsMessageQueue$JsMessage -> hh:
    java.lang.String jsPayloadOrCallbackId -> a
    org.apache.cordova.PluginResult pluginResult -> b
    int calculateEncodedLengthHelper(org.apache.cordova.PluginResult) -> a
    int calculateEncodedLength() -> a
    void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult) -> a
    void encodeAsJsMessage(java.lang.StringBuilder) -> a
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode -> org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode:
    org.apache.cordova.CordovaWebViewEngine engine -> engine
    org.apache.cordova.CordovaInterface cordova -> cordova
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
    org.apache.cordova.CordovaWebViewEngine access$0(org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode) -> access$0
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode$1 -> hi:
    org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode this$1 -> a
    org.apache.cordova.NativeToJsMessageQueue val$queue -> b
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode$2 -> hj:
    org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode this$1 -> a
    org.apache.cordova.NativeToJsMessageQueue val$queue -> b
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode -> org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode:
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode -> org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate delegate -> delegate
    boolean online -> online
    boolean ignoreNextFlush -> ignoreNextFlush
    void reset() -> reset
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
    void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean) -> notifyOfFlush
    void access$0(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode,boolean) -> access$0
    void access$1(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode,boolean) -> access$1
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate access$2(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode) -> access$2
    boolean access$3(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode) -> access$3
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$1 -> hk:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode this$1 -> a
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$2 -> hl:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode this$1 -> a
    org.apache.cordova.NativeToJsMessageQueue val$queue -> b
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate -> org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate:
    void setNetworkAvailable(boolean) -> setNetworkAvailable
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
org.apache.cordova.PluginEntry -> org.apache.cordova.PluginEntry:
    java.lang.String service -> service
    java.lang.String pluginClass -> pluginClass
    org.apache.cordova.CordovaPlugin plugin -> plugin
    boolean onload -> onload
org.apache.cordova.PluginManager -> org.apache.cordova.PluginManager:
    java.lang.String TAG -> TAG
    int SLOW_EXEC_WARNING_THRESHOLD -> SLOW_EXEC_WARNING_THRESHOLD
    java.util.LinkedHashMap pluginMap -> pluginMap
    java.util.LinkedHashMap entryMap -> entryMap
    org.apache.cordova.CordovaInterface ctx -> ctx
    org.apache.cordova.CordovaWebView app -> app
    boolean isInitialized -> isInitialized
    java.util.Collection getPluginEntries() -> getPluginEntries
    void setPluginEntries(java.util.Collection) -> setPluginEntries
    void init() -> init
    void startupPlugins() -> startupPlugins
    void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    org.apache.cordova.CordovaPlugin getPlugin(java.lang.String) -> getPlugin
    void addService(java.lang.String,java.lang.String) -> addService
    void addService(org.apache.cordova.PluginEntry) -> addService
    void onPause(boolean) -> onPause
    boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest) -> onReceivedClientCertRequest
    void onResume(boolean) -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean shouldAllowRequest(java.lang.String) -> shouldAllowRequest
    boolean shouldAllowNavigation(java.lang.String) -> shouldAllowNavigation
    boolean shouldAllowBridgeAccess(java.lang.String) -> shouldAllowBridgeAccess
    java.lang.Boolean shouldOpenExternalUrl(java.lang.String) -> shouldOpenExternalUrl
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    void onReset() -> onReset
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    org.apache.cordova.CordovaPlugin instantiatePlugin(java.lang.String) -> instantiatePlugin
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
org.apache.cordova.PluginResult -> org.apache.cordova.PluginResult:
    int status -> status
    int messageType -> messageType
    boolean keepCallback -> keepCallback
    java.lang.String strMessage -> strMessage
    java.lang.String encodedMessage -> encodedMessage
    java.util.List multipartMessages -> multipartMessages
    int MESSAGE_TYPE_STRING -> MESSAGE_TYPE_STRING
    int MESSAGE_TYPE_JSON -> MESSAGE_TYPE_JSON
    int MESSAGE_TYPE_NUMBER -> MESSAGE_TYPE_NUMBER
    int MESSAGE_TYPE_BOOLEAN -> MESSAGE_TYPE_BOOLEAN
    int MESSAGE_TYPE_NULL -> MESSAGE_TYPE_NULL
    int MESSAGE_TYPE_ARRAYBUFFER -> MESSAGE_TYPE_ARRAYBUFFER
    int MESSAGE_TYPE_BINARYSTRING -> MESSAGE_TYPE_BINARYSTRING
    int MESSAGE_TYPE_MULTIPART -> MESSAGE_TYPE_MULTIPART
    java.lang.String[] StatusMessages -> StatusMessages
    void setKeepCallback(boolean) -> setKeepCallback
    int getStatus() -> getStatus
    int getMessageType() -> getMessageType
    java.lang.String getMessage() -> getMessage
    int getMultipartMessagesSize() -> getMultipartMessagesSize
    org.apache.cordova.PluginResult getMultipartMessage(int) -> getMultipartMessage
    java.lang.String getStrMessage() -> getStrMessage
    boolean getKeepCallback() -> getKeepCallback
    java.lang.String getJSONString() -> getJSONString
    java.lang.String toCallbackString(java.lang.String) -> toCallbackString
    java.lang.String toSuccessCallbackString(java.lang.String) -> toSuccessCallbackString
    java.lang.String toErrorCallbackString(java.lang.String) -> toErrorCallbackString
org.apache.cordova.PluginResult$Status -> org.apache.cordova.PluginResult$Status:
    org.apache.cordova.PluginResult$Status NO_RESULT -> NO_RESULT
    org.apache.cordova.PluginResult$Status OK -> OK
    org.apache.cordova.PluginResult$Status CLASS_NOT_FOUND_EXCEPTION -> CLASS_NOT_FOUND_EXCEPTION
    org.apache.cordova.PluginResult$Status ILLEGAL_ACCESS_EXCEPTION -> ILLEGAL_ACCESS_EXCEPTION
    org.apache.cordova.PluginResult$Status INSTANTIATION_EXCEPTION -> INSTANTIATION_EXCEPTION
    org.apache.cordova.PluginResult$Status MALFORMED_URL_EXCEPTION -> MALFORMED_URL_EXCEPTION
    org.apache.cordova.PluginResult$Status IO_EXCEPTION -> IO_EXCEPTION
    org.apache.cordova.PluginResult$Status INVALID_ACTION -> INVALID_ACTION
    org.apache.cordova.PluginResult$Status JSON_EXCEPTION -> JSON_EXCEPTION
    org.apache.cordova.PluginResult$Status ERROR -> ERROR
    org.apache.cordova.PluginResult$Status[] ENUM$VALUES -> ENUM$VALUES
    org.apache.cordova.PluginResult$Status[] values() -> values
    org.apache.cordova.PluginResult$Status valueOf(java.lang.String) -> valueOf
org.apache.cordova.Whitelist -> org.apache.cordova.Whitelist:
    java.util.ArrayList whiteList -> whiteList
    java.lang.String TAG -> TAG
    void addWhiteListEntry(java.lang.String,boolean) -> addWhiteListEntry
    boolean isUrlWhiteListed(java.lang.String) -> isUrlWhiteListed
org.apache.cordova.Whitelist$URLPattern -> hm:
    java.util.regex.Pattern scheme -> a
    java.util.regex.Pattern host -> b
    java.lang.Integer port -> c
    java.util.regex.Pattern path -> d
    java.lang.String regexFromPattern(java.lang.String,boolean) -> a
    boolean matches(android.net.Uri) -> matches
org.apache.cordova.engine.SystemCookieManager -> hn:
    android.webkit.WebView webView -> a
    android.webkit.CookieManager cookieManager -> b
    void setCookiesEnabled(boolean) -> setCookiesEnabled
    void setCookie(java.lang.String,java.lang.String) -> setCookie
    java.lang.String getCookie(java.lang.String) -> getCookie
    void clearCookies() -> clearCookies
    void flush() -> flush
org.apache.cordova.engine.SystemExposedJsApi -> ho:
    org.apache.cordova.CordovaBridge bridge -> a
    java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    void setNativeToJsBridgeMode(int,int) -> setNativeToJsBridgeMode
    java.lang.String retrieveJsMessages(int,boolean) -> retrieveJsMessages
org.apache.cordova.engine.SystemWebChromeClient -> org.apache.cordova.engine.SystemWebChromeClient:
    int FILECHOOSER_RESULTCODE -> FILECHOOSER_RESULTCODE
    java.lang.String LOG_TAG -> LOG_TAG
    long MAX_QUOTA -> MAX_QUOTA
    org.apache.cordova.engine.SystemWebViewEngine parentEngine -> parentEngine
    android.view.View mVideoProgressView -> mVideoProgressView
    org.apache.cordova.CordovaDialogsHelper dialogsHelper -> dialogsHelper
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback -> mCustomViewCallback
    android.view.View mCustomView -> mCustomView
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void openFileChooser(android.webkit.ValueCallback) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooser
    boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
    void onPermissionRequest(android.webkit.PermissionRequest) -> onPermissionRequest
    void destroyLastDialog() -> destroyLastDialog
org.apache.cordova.engine.SystemWebChromeClient$1 -> hp:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.engine.SystemWebChromeClient$2 -> hq:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.engine.SystemWebChromeClient$3 -> hr:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.JsPromptResult val$result -> b
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.engine.SystemWebChromeClient$4 -> hs:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.ValueCallback val$uploadMsg -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
org.apache.cordova.engine.SystemWebChromeClient$5 -> ht:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.ValueCallback val$filePathsCallback -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
org.apache.cordova.engine.SystemWebView -> org.apache.cordova.engine.SystemWebView:
    org.apache.cordova.engine.SystemWebViewClient viewClient -> viewClient
    org.apache.cordova.engine.SystemWebChromeClient chromeClient -> chromeClient
    org.apache.cordova.engine.SystemWebViewEngine parentEngine -> parentEngine
    org.apache.cordova.CordovaInterface cordova -> cordova
    void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface) -> init
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
    void setWebViewClient(android.webkit.WebViewClient) -> setWebViewClient
    void setWebChromeClient(android.webkit.WebChromeClient) -> setWebChromeClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
org.apache.cordova.engine.SystemWebViewClient -> org.apache.cordova.engine.SystemWebViewClient:
    java.lang.String TAG -> TAG
    org.apache.cordova.engine.SystemWebViewEngine parentEngine -> parentEngine
    boolean doClearHistory -> doClearHistory
    boolean isCurrentlyLoading -> isCurrentlyLoading
    java.util.Hashtable authenticationTokens -> authenticationTokens
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest) -> onReceivedClientCertRequest
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String) -> setAuthenticationToken
    org.apache.cordova.AuthenticationToken removeAuthenticationToken(java.lang.String,java.lang.String) -> removeAuthenticationToken
    org.apache.cordova.AuthenticationToken getAuthenticationToken(java.lang.String,java.lang.String) -> getAuthenticationToken
    void clearAuthenticationTokens() -> clearAuthenticationTokens
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    boolean needsKitKatContentUrlFix(android.net.Uri) -> needsKitKatContentUrlFix
    boolean needsSpecialsInAssetUrlFix(android.net.Uri) -> needsSpecialsInAssetUrlFix
org.apache.cordova.engine.SystemWebViewEngine -> org.apache.cordova.engine.SystemWebViewEngine:
    java.lang.String TAG -> TAG
    org.apache.cordova.engine.SystemWebView webView -> webView
    org.apache.cordova.engine.SystemCookieManager cookieManager -> cookieManager
    org.apache.cordova.CordovaPreferences preferences -> preferences
    org.apache.cordova.CordovaBridge bridge -> bridge
    org.apache.cordova.CordovaWebViewEngine$Client client -> client
    org.apache.cordova.CordovaWebView parentWebView -> parentWebView
    org.apache.cordova.CordovaInterface cordova -> cordova
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.CordovaResourceApi resourceApi -> resourceApi
    org.apache.cordova.NativeToJsMessageQueue nativeToJsMessageQueue -> nativeToJsMessageQueue
    android.content.BroadcastReceiver receiver -> receiver
    android.content.Context mRemoteContext -> mRemoteContext
    void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue) -> init
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    android.view.View getView() -> getView
    void initWebViewSettings() -> initWebViewSettings
    void enableRemoteDebugging() -> enableRemoteDebugging
    void exposeJsInterface(android.webkit.WebView,org.apache.cordova.CordovaBridge) -> exposeJsInterface
    void loadUrl(java.lang.String,boolean) -> loadUrl
    java.lang.String getUrl() -> getUrl
    void stopLoading() -> stopLoading
    void clearCache() -> clearCache
    void clearHistory() -> clearHistory
    boolean canGoBack() -> canGoBack
    boolean goBack() -> goBack
    void setPaused(boolean) -> setPaused
    void destroy() -> destroy
org.apache.cordova.engine.SystemWebViewEngine$1 -> hu:
    org.apache.cordova.engine.SystemWebViewEngine this$0 -> a
    void setNetworkAvailable(boolean) -> setNetworkAvailable
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
org.apache.cordova.engine.SystemWebViewEngine$2 -> hv:
    org.apache.cordova.engine.SystemWebViewEngine this$0 -> a
    android.webkit.WebSettings val$settings -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
