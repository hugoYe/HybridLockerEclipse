android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> a
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> b
    android.graphics.Rect mTmpRect -> c
    float mPosition -> d
    float mOffset -> e
    android.support.v4.app.ActionBarDrawerToggle this$0 -> a
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> a
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> a
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> b
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    void instantiateChildFragmentManager() -> k
    void performCreate(android.os.Bundle) -> b
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> c
    void performStart() -> c
    void performResume() -> d
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> e
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> d
    void performPause() -> f
    void performStop() -> g
    void performReallyStop() -> h
    void performDestroyView() -> i
    void performDestroy() -> j
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> a
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> d
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> e
    void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    boolean popBackStackState$68507953(java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> b
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> c
    android.os.Parcelable saveAllState() -> c
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> a
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> k
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> a
    void doStop() -> b
    void doRetain() -> c
    void finishRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> a
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> a
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> a
    java.lang.CharSequence mTitle -> b
    android.app.PendingIntent mIntent -> c
    android.os.Bundle mExtras -> d
    java.util.ArrayList mRemoteInputs -> e
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    int mFlags -> a
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.lang.String mGroupKey -> q
    boolean mGroupSummary -> r
    java.lang.String mSortKey -> s
    java.util.ArrayList mActions -> t
    boolean mLocalOnly -> u
    android.os.Bundle mExtras -> v
    android.app.Notification mNotification -> w
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> a
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    java.util.ArrayList mActions -> a
    int mFlags -> b
    android.app.PendingIntent mDisplayIntent -> c
    java.util.ArrayList mPages -> d
    android.graphics.Bitmap mBackground -> e
    int mContentIcon -> f
    int mContentIconGravity -> g
    int mContentActionIndex -> h
    int mCustomSizePreset -> i
    int mCustomContentHeight -> j
    int mGravity -> k
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> a
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> a
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    java.lang.Class sActionClass -> e
    java.lang.reflect.Field sActionsField -> f
    java.lang.reflect.Field sActionIconField -> g
    java.lang.reflect.Field sActionTitleField -> h
    java.lang.reflect.Field sActionIntentField -> i
    boolean sActionsAccessFailed -> j
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> a
    boolean ensureActionReflectionReadyLocked() -> a
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> a
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> a
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    int SIDE_CHANNEL_BIND_FLAGS -> a
    java.lang.Object sEnabledNotificationListenersLock -> b
    java.lang.String sEnabledNotificationListeners -> c
    java.util.Set sEnabledNotificationListenerPackages -> d
    android.content.Context mContext -> e
    android.app.NotificationManager mNotificationManager -> f
    java.lang.Object sLock -> g
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> h
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> i
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> a
    int access$000() -> a
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    boolean all -> d
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    android.app.Notification notif -> d
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> a
    android.os.IBinder iBinder -> b
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    android.content.Context mContext -> a
    android.os.HandlerThread mHandlerThread -> b
    android.os.Handler mHandler -> c
    java.util.Map mRecordMap -> d
    java.util.Set mCachedEnabledPackages -> e
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> a
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> b
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> c
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> a
    boolean bound -> b
    android.support.v4.app.INotificationSideChannel service -> c
    java.util.LinkedList taskQueue -> d
    int retryCount -> e
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> a
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> a
    java.lang.CharSequence mLabel -> b
    java.lang.CharSequence[] mChoices -> c
    boolean mAllowFreeFormInput -> d
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> a
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> a
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> a
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> a
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> a
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mToAddresses -> d
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mStreams -> g
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> a
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.String mCallingPackage -> c
    android.content.ComponentName mCallingActivity -> d
    java.util.ArrayList mStreams -> e
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle$115f5926(java.lang.StringBuilder,java.lang.CharSequence,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> a
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> b
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> c
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground$42af7916() -> b
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> d
    void onStopLoading() -> e
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> f
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    boolean mProcessingChange -> t
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> d
    void forceLoad() -> forceLoad
    void onForceLoad() -> a
    void stopLoading() -> stopLoading
    void onStopLoading() -> e
    void abandon() -> abandon
    void reset() -> reset
    void onReset() -> f
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    java.lang.Object postResult(java.lang.Object) -> b
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground$42af7916() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate$1b4f7664() -> c
    void onCancelled() -> a
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> b
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> a
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> a
    android.support.v4.media.TransportPerformer mCallbacks -> b
    android.media.AudioManager mAudioManager -> c
    android.view.View mView -> d
    java.lang.Object mDispatcherState -> e
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> f
    java.util.ArrayList mListeners -> g
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> h
    android.view.KeyEvent$Callback mKeyEventCallback -> i
    boolean isMediaKey(int) -> a
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> a
    void reportPlayingChanged() -> b
    void pushControllerState() -> c
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> a
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.view.View mTargetView -> c
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> d
    java.lang.String mReceiverAction -> e
    android.content.IntentFilter mReceiverFilter -> f
    android.content.Intent mIntent -> g
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> h
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> i
    android.content.BroadcastReceiver mMediaButtonReceiver -> j
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> k
    android.app.PendingIntent mPendingIntent -> l
    android.media.RemoteControlClient mRemoteControl -> m
    boolean mFocused -> n
    int mPlayState -> o
    boolean mAudioFocused -> p
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> a
    void gainFocus() -> b
    void takeAudioFocus() -> e
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> f
    void loseFocus() -> c
    void windowDetached() -> d
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> a
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> a
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> a
    int mColorMode -> b
    int mOrientation -> c
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    android.content.Context mContext -> a
    android.graphics.BitmapFactory$Options mDecodeOptions -> b
    java.lang.Object mLock -> f
    int mScaleMode -> c
    int mColorMode -> d
    int mOrientation -> e
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap$1c6d3aaf(android.net.Uri) -> a
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> a
    android.graphics.Matrix access$000$75eaee36(int,int,android.graphics.RectF,int) -> a
    android.graphics.Bitmap access$200$6f44086e(android.support.v4.print.PrintHelperKitkat,android.net.Uri) -> a
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> a
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> e
    java.lang.String val$jobName -> a
    android.graphics.Bitmap val$bitmap -> b
    int val$fittingMode -> c
    android.support.v4.print.PrintHelperKitkat this$0 -> d
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> g
    android.os.AsyncTask loadBitmap -> a
    android.graphics.Bitmap mBitmap -> b
    java.lang.String val$jobName -> c
    android.net.Uri val$imageFile -> d
    int val$fittingMode -> e
    android.support.v4.print.PrintHelperKitkat this$0 -> f
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> a
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> a
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> a
    android.print.PrintAttributes val$newPrintAttributes -> b
    android.print.PrintAttributes val$oldPrintAttributes -> c
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> d
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> e
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground$4055529b() -> a
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> a
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> a
    java.lang.String LRM_STRING -> b
    java.lang.String RLM_STRING -> c
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> d
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> e
    boolean mIsRtlContext -> f
    int mFlags -> g
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> h
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    int getExitDir(java.lang.String) -> a
    int getEntryDir(java.lang.String) -> b
    boolean access$000(java.util.Locale) -> a
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> a
    android.support.v4.text.BidiFormatter access$200() -> b
    android.support.v4.text.BidiFormatter access$300() -> c
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> a
    int mFlags -> b
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    void initialize(boolean) -> a
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    byte[] DIR_TYPE_CACHE -> a
    java.lang.String text -> b
    boolean isHtml -> c
    int length -> d
    int charIndex -> e
    char lastChar -> f
    int getEntryDir() -> a
    int getExitDir() -> b
    byte getCachedDirectionality(char) -> a
    byte dirTypeBackward() -> c
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> a
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> a
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> b
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> c
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> d
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> e
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> f
    int access$100(int) -> a
    int access$200(int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> c
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> a
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> b
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    boolean defaultIsRtl() -> a
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> a
    java.lang.String ARAB_SCRIPT_SUBTAG -> b
    java.lang.String HEBR_SCRIPT_SUBTAG -> c
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> a
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> a
    int mHead -> b
    int mTail -> c
    int mCapacityBitmask -> d
    void doubleCapacity() -> a
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> a
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> a
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> a
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> a
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mDeferConfirmSingleTap -> l
    boolean mInLongPress -> m
    boolean mAlwaysInTapRegion -> n
    boolean mAlwaysInBiggerTapRegion -> o
    android.view.MotionEvent mCurrentDownEvent -> p
    android.view.MotionEvent mPreviousUpEvent -> q
    boolean mIsDoubleTapping -> r
    float mLastFocusX -> s
    float mLastFocusY -> t
    float mDownFocusX -> u
    float mDownFocusY -> v
    boolean mIsLongpressEnabled -> w
    android.view.VelocityTracker mVelocityTracker -> x
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502$5abea42(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> f
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> a
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> b
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> c
    boolean mTempDetachBound -> d
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> b
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> d
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> e
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> b
    void sortChildDrawingOrder() -> f
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> g
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.ref.WeakReference mView -> b
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1:
    java.lang.Runnable val$runnable -> a
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> b
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2:
    java.lang.Runnable val$runnable -> a
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> b
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3:
    int val$currentLayerType -> a
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> b
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    android.view.animation.Interpolator mEdgeInterpolator -> b
    android.view.View mTarget -> c
    java.lang.Runnable mRunnable -> d
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    int mActivationDelay -> h
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    float[] mMaximumVelocity -> k
    boolean mAlreadyDelayed -> l
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    boolean mAnimating -> o
    boolean mEnabled -> p
    boolean mExclusive -> q
    int DEFAULT_ACTIVATION_DELAY -> r
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> a
    void requestStop() -> b
    float computeTargetVelocity(int,float,float,float) -> a
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float constrainEdgeValue(float,float) -> a
    float constrain(float,float,float) -> a
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> a
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> b
    boolean access$202$2149d4c8(android.support.v4.widget.AutoScrollHelper) -> c
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> d
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> e
    boolean access$102$2149d4c8(android.support.v4.widget.AutoScrollHelper) -> f
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> g
    boolean access$502$2149d4c8(android.support.v4.widget.AutoScrollHelper) -> h
    void access$600(android.support.v4.widget.AutoScrollHelper) -> i
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> j
    int access$800$4868d301(int,int) -> a
    float access$900$483d241b(float) -> a
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> a
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    void hide() -> hide
    void show() -> show
    boolean access$002$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> c
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> a
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mDisallowInterceptRequested -> p
    boolean mChildrenCanceledTouch -> q
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    android.graphics.drawable.Drawable mShadowLeft -> u
    android.graphics.drawable.Drawable mShadowRight -> v
    java.lang.CharSequence mTitleLeft -> w
    java.lang.CharSequence mTitleRight -> x
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> a
    int getDrawerViewAbsoluteGravity(android.view.View) -> b
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> e
    boolean isDrawerView(android.view.View) -> c
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> c
    void cancelChildViewTouch() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> b
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> a
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    java.lang.String DEFAULT_CLASS_NAME -> b
    android.graphics.Rect mTempScreenRect -> c
    android.graphics.Rect mTempParentRect -> d
    android.graphics.Rect mTempVisibleRect -> e
    int[] mTempGlobalRect -> f
    android.view.accessibility.AccessibilityManager mManager -> g
    android.view.View mView -> h
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> i
    int mFocusedVirtualViewId -> j
    int mHoveredVirtualViewId -> k
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> a
    boolean intersectVisibleToUser(android.graphics.Rect) -> a
    boolean isAccessibilityFocused(int) -> b
    int getVirtualViewAt$2548a28() -> b
    boolean onPerformActionForVirtualView$5985f823() -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> a
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> a
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> a
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> a
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> a
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelOpened(android.view.View) -> a
    void dispatchOnPanelClosed(android.view.View) -> b
    void updateObscuredViewsVisibility(android.view.View) -> c
    void setAllChildrenVisible() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96$134632() -> b
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> e
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> c
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setColorScheme(int,int,int,int) -> a
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds$3b4dfe4b(int,int) -> a
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> a
    android.support.v4.widget.SwipeProgressBar mProgressBar -> b
    android.view.View mTarget -> c
    int mOriginalOffsetTop -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    int mMediumAnimationDuration -> j
    float mFromPercentage -> k
    float mCurrPercentage -> l
    int mProgressBarHeight -> m
    int mCurrentTargetOffsetTop -> n
    float mInitialMotionY -> o
    float mLastMotionY -> p
    boolean mIsBeingDragged -> q
    int mActivePointerId -> r
    boolean mReturningToStart -> s
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> t
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> u
    int[] LAYOUT_ATTRS -> v
    android.view.animation.Animation mAnimateToStartPosition -> w
    android.view.animation.Animation mShrinkTrigger -> x
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> y
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> z
    java.lang.Runnable mReturnToStartPosition -> A
    java.lang.Runnable mCancel -> B
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> a
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTargetOffsetTopAndBottom(int) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702$3ab76409(android.support.v4.widget.SwipeRefreshLayout) -> f
    float access$802$3ab76f4f(android.support.v4.widget.SwipeRefreshLayout) -> g
    boolean access$902$3ab72427(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> j
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> k
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> l
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> m
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> n
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> o
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory(int) -> b
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> a
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> a
    boolean tryCaptureViewForDrag(android.view.View,int) -> a
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> a
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.coco.lock2.app.Pee.AppConfig -> a:
    com.coco.lock2.app.Pee.AppConfig mInstance -> g
    java.lang.String default_lockscreen_package -> h
    java.lang.String default_lockscreen_class -> i
    java.lang.String default_lockscreen_wrap -> j
    boolean zheshanVisible -> k
    boolean systemWallpaper -> l
    boolean lightColor -> m
    boolean volume -> n
    boolean needIcon -> o
    int unlockTime -> p
    int xinYiX -> q
    int xinYiY -> r
    int xinYiProportion -> s
    java.lang.String timeXy -> a
    int slidingScreenWidth -> b
    boolean useSystemIconStyle -> c
    int IconX -> t
    int IconY -> u
    int SimX -> v
    int SimY -> w
    int PromptX -> x
    int PromptY -> y
    int IconProportion -> z
    int dataX -> A
    int dataY -> B
    int timeX -> C
    int timeY -> D
    boolean xinYiDisplay -> E
    int pHoneIconIn -> F
    int sMsIconIn -> G
    int timefontsize -> H
    int datefontsize -> I
    java.lang.String[] PackageName -> d
    java.lang.String[] ClassName -> e
    java.lang.String[] ImageNames -> f
    java.lang.String bgPath -> J
    boolean Increaseweek -> K
    boolean systemWallpaper4_0 -> L
    int missingInformationY -> M
    int mSmsbl -> N
    boolean Accordingtocarrier -> O
    int Powerfontsize -> P
    int powerX -> Q
    int powerY -> R
    boolean missingInformationTimeDis -> S
    boolean AmFixed -> T
    boolean shielding -> U
    boolean usetimeimg -> V
    int weatherImgX -> W
    int weatherImgY -> X
    int weatherStrX -> Y
    int weatherStrY -> Z
    int cityX -> aa
    int cityY -> ab
    int weatherStrfontSize -> ac
    int cityfontSize -> ad
    int wddxX -> ae
    int wddxY -> af
    int wjdhX -> ag
    int wjdhY -> ah
    int wdxxfontsize -> ai
    boolean statusbarupdate -> aj
    com.coco.lock2.app.Pee.AppConfig getInstance(android.content.Context) -> getInstance
    boolean statusbarupdate() -> statusbarupdate
    int wddxX() -> wddxX
    int wddxY() -> wddxY
    int wjdhX() -> wjdhX
    int wjdhY() -> wjdhY
    int wdxxfontsize() -> wdxxfontsize
    int weatherImgX() -> weatherImgX
    int weatherImgY() -> weatherImgY
    int weatherStrX() -> weatherStrX
    int weatherStrY() -> weatherStrY
    int cityX() -> cityX
    int cityY() -> cityY
    int weatherStrfontSize() -> weatherStrfontSize
    int cityfontSize() -> cityfontSize
    boolean shielding() -> shielding
    boolean usetimeimg() -> usetimeimg
    boolean AmFixed() -> AmFixed
    boolean missingInformationTimeDis() -> missingInformationTimeDis
    int Powerfontsize() -> Powerfontsize
    int powerX() -> powerX
    int powerY() -> powerY
    boolean Accordingtocarrier() -> Accordingtocarrier
    int mSmsbl() -> mSmsbl
    int missingInformationY() -> missingInformationY
    boolean systemWallpaper4_0() -> systemWallpaper4_0
    boolean Increaseweek() -> Increaseweek
    int unlockTime() -> unlockTime
    int datefontsize() -> datefontsize
    int timefontsize() -> timefontsize
    java.lang.String bgPath() -> bgPath
    int pHoneIconIn() -> pHoneIconIn
    int sMsIconIn() -> sMsIconIn
    java.lang.String[] PackageName() -> PackageName
    java.lang.String[] ClassName() -> ClassName
    java.lang.String[] ImageNames() -> ImageNames
    boolean xinYiDisplay() -> xinYiDisplay
    int dataX() -> dataX
    int dataY() -> dataY
    int timeX() -> timeX
    int timeY() -> timeY
    boolean useSystemIconStyle() -> useSystemIconStyle
    int slidingScreenWidth() -> slidingScreenWidth
    int IconProportion() -> IconProportion
    int IconX() -> IconX
    int IconY() -> IconY
    int SimX() -> SimX
    int SimY() -> SimY
    int PromptX() -> PromptX
    int PromptY() -> PromptY
    int xinYiProportion() -> xinYiProportion
    int xinYiX() -> xinYiX
    int xinYiY() -> xinYiY
    java.lang.String timeXy() -> timeXy
    boolean needIcon() -> needIcon
    boolean volume() -> volume
    boolean lightColor() -> lightColor
    boolean getSystemWallpaper() -> getSystemWallpaper
    boolean getZheshanVisible() -> getZheshanVisible
    java.lang.String getDefaultLockscreenPackage() -> getDefaultLockscreenPackage
    java.lang.String getDefaultLockscreenClass() -> getDefaultLockscreenClass
    java.lang.String getDefaultLockscreenWrap() -> getDefaultLockscreenWrap
    java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> a
com.coco.lock2.app.Pee.Base -> b:
    java.lang.Runnable Refresh_handler -> a
    android.os.Handler mhandler -> b
    int delaytime -> c
    android.os.Handler getMhandler() -> getMhandler
    void setRefresh(java.lang.Runnable,int) -> a
    void startThread() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void InitUI(int,int) -> InitUI
    void onDraw(android.graphics.Canvas) -> onDraw
    void delayHandle() -> delayHandle
com.coco.lock2.app.Pee.Child -> c:
    int childstate -> a
    int new_level -> b
    int old_level -> c
    int refreshstate -> d
    int ViewW -> e
    int ViewH -> f
    android.graphics.Bitmap[] childImage -> g
    android.graphics.Bitmap[] peeingImage -> h
    float child_X -> i
    float child_Y -> j
    com.coco.lock2.app.Pee.Fire fire -> k
    com.coco.lock2.app.Pee.Note note -> l
    int[] childImageId -> m
    int[] childpeeingID -> n
    java.lang.Runnable Refresh_handler -> o
    void InitUI(int,int) -> InitUI
    void onDraw(android.graphics.Canvas) -> onDraw
    int getChildstate() -> getChildstate
    void setChildstate(int) -> setChildstate
    float getFire_X() -> getFire_X
    void delayHandle() -> delayHandle
    void loadimage(int) -> loadimage
    void clearinfo() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    int access$0(com.coco.lock2.app.Pee.Child) -> a
    int access$1(com.coco.lock2.app.Pee.Child) -> b
    void access$2(com.coco.lock2.app.Pee.Child,int) -> a
    int[] access$3() -> b
    int access$4(com.coco.lock2.app.Pee.Child) -> c
    int access$5(com.coco.lock2.app.Pee.Child) -> d
    int[] access$6() -> c
    int access$7(com.coco.lock2.app.Pee.Child) -> e
    void access$8(com.coco.lock2.app.Pee.Child,int) -> b
    void access$9$12cee7d(com.coco.lock2.app.Pee.Child) -> f
    com.coco.lock2.app.Pee.Note access$10(com.coco.lock2.app.Pee.Child) -> g
    com.coco.lock2.app.Pee.Fire access$11(com.coco.lock2.app.Pee.Child) -> h
com.coco.lock2.app.Pee.Child$1 -> d:
    com.coco.lock2.app.Pee.Child this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.Fire -> e:
    int[] fireImageId -> b
    int[] ExtinguishImageId -> c
    int firestate -> d
    int refreshstate -> e
    android.graphics.Bitmap[] fires -> f
    android.graphics.Bitmap[] extinguish -> g
    float Fire_x -> h
    float Fire_y -> i
    boolean closeflag -> a
    java.lang.Runnable Refresh_handler -> j
    void exitlock() -> exitlock
    void onDraw(android.graphics.Canvas) -> onDraw
    void InitUI(int,int) -> InitUI
    void setFire_x(float) -> setFire_x
    int getFirestate() -> getFirestate
    void setFirestate(int) -> setFirestate
    void clearinfo() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    int access$0(com.coco.lock2.app.Pee.Fire) -> a
    int access$1(com.coco.lock2.app.Pee.Fire) -> b
    void access$2(com.coco.lock2.app.Pee.Fire,int) -> a
    int[] access$3() -> b
    int[] access$4() -> c
com.coco.lock2.app.Pee.Fire$1 -> f:
    com.coco.lock2.app.Pee.Fire this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.InsideLockActivity -> com.coco.lock2.app.Pee.InsideLockActivity:
    com.coco.lock2.app.Pee.ViewWrap wrap -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onPause() -> onPause
com.coco.lock2.app.Pee.InsideLockActivity$1 -> g:
    com.coco.lock2.app.Pee.InsideLockActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.coco.lock2.app.Pee.Lock4Screen -> com.coco.lock2.app.Pee.Lock4Screen:
    android.graphics.Bitmap bgImg -> f
    boolean playSounded -> g
    android.os.Vibrator vibrator -> h
    android.content.Context mContext -> i
    com.coco.lock2.app.Pee.TimeShow time -> j
    com.coco.lock2.app.Pee.Child child -> k
    com.coco.lock2.app.Pee.Fire fire -> l
    com.coco.lock2.app.Pee.Prompt prompt -> m
    com.coco.lock2.app.Pee.Note note -> n
    android.graphics.Matrix matrix -> o
    boolean statusbarupdate -> p
    com.coco.lock2.app.Pee.AppConfig mAppConfig -> q
    java.lang.Runnable mRunnable -> a
    android.os.Handler mhandler -> r
    void vibrate() -> vibrate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    android.os.Handler access$0(com.coco.lock2.app.Pee.Lock4Screen) -> a
    void access$1(com.coco.lock2.app.Pee.Lock4Screen) -> b
com.coco.lock2.app.Pee.Lock4Screen$1 -> h:
    com.coco.lock2.app.Pee.Lock4Screen this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.Lock4Screen$2 -> i:
    com.coco.lock2.app.Pee.Lock4Screen this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.coco.lock2.app.Pee.LockImage -> j:
    int image_id -> a
    com.coco.lock2.app.Pee.Point location -> b
    float w -> c
    float h -> d
    android.graphics.Bitmap bt -> e
    boolean type -> f
    void setImageId(int) -> setImageId
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setLocation(com.coco.lock2.app.Pee.Point) -> setLocation
    com.coco.lock2.app.Pee.Point getLocation() -> getLocation
    void onDraw(android.graphics.Canvas) -> onDraw
    int getImageId() -> getImageId
com.coco.lock2.app.Pee.Note -> k:
    boolean showflag -> a
    com.coco.lock2.app.Pee.Point OLD -> b
    com.coco.lock2.app.Pee.Point[] location -> c
    int refreshstate -> d
    int show_num -> e
    android.graphics.Bitmap[] note_images -> f
    int[] noteImageId -> g
    java.lang.Runnable Refresh_handler -> h
    void loadImage() -> b
    boolean isShowflag() -> isShowflag
    void InitUI(int,int) -> InitUI
    void setShowflag(boolean) -> setShowflag
    void onDraw(android.graphics.Canvas) -> onDraw
    void clearinfo() -> c
    void onResume() -> onResume
    void onPause() -> onPause
    boolean access$0(com.coco.lock2.app.Pee.Note) -> a
    int access$1(com.coco.lock2.app.Pee.Note) -> b
    com.coco.lock2.app.Pee.Point[] access$2(com.coco.lock2.app.Pee.Note) -> c
    void access$3(com.coco.lock2.app.Pee.Note,int) -> a
    int access$4(com.coco.lock2.app.Pee.Note) -> d
    void access$5(com.coco.lock2.app.Pee.Note,int) -> b
com.coco.lock2.app.Pee.Note$1 -> l:
    com.coco.lock2.app.Pee.Note this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.ObjectGetter -> m:
    com.coco.lock2.app.Pee.ObjectGetter obgeter -> b
    android.view.View mView -> c
    android.graphics.Paint mBitmapPaint -> d
    android.os.Handler mhandler -> e
    com.coco.lock2.app.Pee.common.LockSetting set -> a
    android.view.View getView() -> getView
    android.graphics.Paint getBitmapPaint() -> getBitmapPaint
    android.os.Handler getHandler() -> getHandler
    void Init(android.content.Context,android.view.View,android.os.Handler) -> Init
    android.graphics.Bitmap getBitmap(int) -> getBitmap
    android.graphics.Bitmap[] getBitmaps(int[]) -> getBitmaps
    android.graphics.Bitmap[] ImageEnlarge(android.graphics.Bitmap[],float) -> ImageEnlarge
com.coco.lock2.app.Pee.Point -> n:
    float x -> a
    float y -> b
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    java.lang.String toString() -> toString
com.coco.lock2.app.Pee.Prompt -> o:
    int[] showinfo -> b
    boolean showflag -> c
    boolean touchflag -> d
    boolean initflag -> e
    int Screen_h -> f
    com.coco.lock2.app.Pee.Point Ptourch_start -> g
    int[] ArrowImageId -> h
    com.coco.lock2.app.Pee.Point[] location -> i
    android.graphics.Bitmap[] arrows -> j
    android.graphics.Bitmap Connection -> k
    com.coco.lock2.app.Pee.Child child -> l
    int refreshstate -> m
    com.coco.lock2.app.Pee.Point Ptouch -> n
    float touch_w -> o
    float touch_h -> p
    int level -> q
    java.lang.Runnable Refresh_handler -> r
    int tp -> a
    int getLevel() -> getLevel
    void setLevel(int) -> setLevel
    void onDraw(android.graphics.Canvas) -> onDraw
    void InitUI(int,int) -> InitUI
    boolean isShowflag() -> isShowflag
    int get_Level(com.coco.lock2.app.Pee.Point) -> a
    void setShowflag(boolean) -> setShowflag
    void vibrate() -> vibrate
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean access$0(com.coco.lock2.app.Pee.Prompt) -> a
    int access$1(com.coco.lock2.app.Pee.Prompt) -> b
    android.graphics.Bitmap[] access$2(com.coco.lock2.app.Pee.Prompt) -> c
    void access$3(com.coco.lock2.app.Pee.Prompt,int) -> a
com.coco.lock2.app.Pee.Prompt$1 -> p:
    com.coco.lock2.app.Pee.Prompt this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.TimeShow -> q:
    java.text.SimpleDateFormat dateFormat -> c
    java.text.SimpleDateFormat time12Format -> d
    java.text.SimpleDateFormat time24Format -> e
    java.lang.String timestr -> f
    java.lang.String datestr -> g
    android.content.Context mcontext -> h
    int ViewW -> i
    int ViewH -> j
    com.coco.lock2.app.Pee.LockImage[] timeimg -> a
    com.coco.lock2.app.Pee.LockImage[] dateimg -> b
    java.lang.String DATE -> k
    java.lang.String WEEK -> l
    int[] LargeId -> m
    int[] SmallId -> n
    int[] EN_MONTH -> o
    int[] EN_WEEK -> p
    int[] DateId -> q
    int[] WeekId -> r
    android.graphics.Bitmap[] en_monthimages -> s
    android.graphics.Bitmap[] en_weekimages -> t
    android.graphics.Bitmap[] en_dayimages -> u
    int en_month -> v
    int en_week -> w
    int en_day -> x
    java.lang.Runnable Refresh_handler -> y
    void getLargeImage() -> b
    void getSmallImage() -> c
    void InitInfo() -> d
    void ImageLocate() -> e
    void ImageLocate(int,float) -> a
    void InitUI(int,int) -> InitUI
    void onDraw(android.graphics.Canvas) -> onDraw
    float getTimeStringHeight(int) -> a
    void drawTimeString(int,android.graphics.Canvas) -> a
    void access$0(com.coco.lock2.app.Pee.TimeShow) -> a
    void access$1(com.coco.lock2.app.Pee.TimeShow) -> b
com.coco.lock2.app.Pee.TimeShow$1 -> r:
    com.coco.lock2.app.Pee.TimeShow this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.ViewWrap -> com.coco.lock2.app.Pee.ViewWrap:
    com.coco.lock2.app.Pee.Lock4Screen lockView -> d
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    android.view.View getView() -> getView
    void setKernelCallback(android.os.Handler$Callback) -> setKernelCallback
    android.os.Handler$Callback getAppService() -> getAppService
    android.view.View createLockView() -> createLockView
com.coco.lock2.app.Pee.ViewWrap$1 -> s:
    com.coco.lock2.app.Pee.ViewWrap this$0 -> a
    void run() -> run
com.coco.lock2.app.Pee.common.BaseView -> com.coco.lock2.app.Pee.common.BaseView:
    java.lang.String LOG_TAG -> b
    com.coco.lock2.app.Pee.common.LockSetting settings -> c
    com.coco.lock2.app.Pee.ViewWrap wrap -> d
    java.lang.Runnable mExitFunc -> e
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setWrap(com.coco.lock2.app.Pee.ViewWrap) -> setWrap
    void setExitFunction(java.lang.Runnable) -> setExitFunction
    void onViewCreate() -> onViewCreate
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.coco.lock2.app.Pee.common.DownloadService -> com.coco.lock2.app.Pee.common.DownloadService:
    int NETTYPE_MOBILE -> a
    int NETTYPE_UNICOM -> b
    int NETTYPE_TELECOM -> c
    int DOWNLOAD_COMPLETE -> d
    int DOWNLOAD_FAIL -> e
    android.app.NotificationManager mUpdateNotificationManager -> f
    java.lang.String DOWNLOAD_PATH -> g
    android.os.Handler mHandler -> h
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.app.NotificationManager access$0(com.coco.lock2.app.Pee.common.DownloadService) -> a
    android.os.Handler access$1(com.coco.lock2.app.Pee.common.DownloadService) -> b
    java.lang.String access$2(com.coco.lock2.app.Pee.common.DownloadService) -> c
com.coco.lock2.app.Pee.common.DownloadService$DownloadHandler -> t:
    com.coco.lock2.app.Pee.common.DownloadService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.coco.lock2.app.Pee.common.DownloadService$DownloadRunnable -> u:
    java.lang.String mDownloadUrl -> a
    java.lang.String mDownloadFileName -> b
    java.io.File mDownloadFile -> c
    int mNotifyId -> d
    android.app.Notification mUpdateNotification -> e
    android.content.Intent mUpdateIntent -> f
    android.app.PendingIntent mUpdatePendingIntent -> g
    com.coco.lock2.app.Pee.common.DownloadService this$0 -> h
    void run() -> run
    long downloadFile(java.lang.String,java.io.File) -> a
com.coco.lock2.app.Pee.common.LoadLockBoxActivity -> com.coco.lock2.app.Pee.common.LoadLockBoxActivity:
    android.app.Dialog noticeDialog -> a
    void onCreate(android.os.Bundle) -> onCreate
    void showNoticeDialog() -> showNoticeDialog
    void onDestroy() -> onDestroy
    int getProxyPort(android.content.Context) -> getProxyPort
    boolean isCWWAPConnect(android.content.Context) -> isCWWAPConnect
    int getNetWorkType(android.content.Context) -> getNetWorkType
    java.lang.String getProxyHost(android.content.Context) -> getProxyHost
    java.lang.String access$0(com.coco.lock2.app.Pee.common.LoadLockBoxActivity) -> a
com.coco.lock2.app.Pee.common.LoadLockBoxActivity$1 -> v:
    com.coco.lock2.app.Pee.common.LoadLockBoxActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.coco.lock2.app.Pee.common.LoadLockBoxActivity$2 -> w:
    com.coco.lock2.app.Pee.common.LoadLockBoxActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.coco.lock2.app.Pee.common.LoadLockBoxActivity$3 -> x:
    com.coco.lock2.app.Pee.common.LoadLockBoxActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.coco.lock2.app.Pee.common.LockSetting -> y:
    android.net.Uri CONTENT_URI -> a
    int timeStyle -> b
    boolean useSound -> c
    boolean useVibrate -> d
    boolean isSoundOpen() -> isSoundOpen
    boolean isVibrateOpen() -> isVibrateOpen
    boolean is24HourFormat() -> is24HourFormat
    boolean loadSetting(android.content.Context) -> loadSetting
com.coco.lock2.app.Pee.common.QueryStringBuilder -> z:
    java.lang.StringBuilder builder -> a
    com.coco.lock2.app.Pee.common.QueryStringBuilder add(java.lang.String,java.lang.String) -> add
    com.coco.lock2.app.Pee.common.QueryStringBuilder add(java.lang.String,int) -> add
    java.lang.String toString() -> toString
com.coco.lock2.app.Pee.common.StaticClass -> aa:
    boolean isLockBoxInstalled(android.content.Context) -> isLockBoxInstalled
com.coco.lock2.local.app.base.AppInfo -> ab:
    java.lang.String appName -> a
    android.content.Intent appIntent -> b
    android.graphics.drawable.Drawable appIcon -> c
com.coco.lock2.local.app.base.BootCompletedReceiver -> com.coco.lock2.local.app.base.BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.coco.lock2.local.app.base.DeviceUtils -> ac:
    int SDK_INT -> a
    java.lang.String DEVICE_MANUFACTURER -> b
    java.lang.String DEVICE_PRODUCT -> c
    java.lang.String DEVICE_MODEL -> d
    java.lang.String DEVICE_DISPLAY -> e
    java.util.UUID uuid -> f
    java.lang.String sNavBarOverride -> g
    int getStatusBarHeight(android.content.Context) -> getStatusBarHeight
    int getNavigationBarHeight(android.content.Context) -> getNavigationBarHeight
    boolean HasNavigationBar(android.content.Context) -> HasNavigationBar
    int getScreenPixelsHeight(android.content.Context) -> getScreenPixelsHeight
    int getRealScreenPixelsHeight(android.app.Activity) -> getRealScreenPixelsHeight
    int getScreenPixelsWidth(android.content.Context) -> getScreenPixelsWidth
    java.util.UUID getDeviceUUID(android.content.Context) -> getDeviceUUID
    boolean isHuaWeiDevices() -> isHuaWeiDevices
    boolean isXiaomiDevices() -> isXiaomiDevices
    boolean isDoovL1() -> isDoovL1
    boolean isHTC() -> isHTC
    boolean hasMeiZuSmartBar() -> hasMeiZuSmartBar
    void hideNavigationBar(android.view.View) -> hideNavigationBar
    boolean isSpecialDevicesForNavigationbar() -> isSpecialDevicesForNavigationbar
    boolean isSpecialDevicesForDefaultLauncherGuide() -> isSpecialDevicesForDefaultLauncherGuide
com.coco.lock2.local.app.base.FileUtils -> ad:
    void copyAssetDirToFiles(android.content.Context,java.lang.String) -> copyAssetDirToFiles
    void copyAssetFileToFiles(android.content.Context,java.lang.String) -> copyAssetFileToFiles
    void copyAssetDirToFiles(java.lang.String,android.content.Context,java.lang.String) -> copyAssetDirToFiles
    void copyAssetFileToFiles(java.lang.String,android.content.Context,java.lang.String) -> copyAssetFileToFiles
    int copySDDirToFiles(java.lang.String,java.lang.String) -> copySDDirToFiles
    int CopySdcardFile(java.lang.String,java.lang.String) -> CopySdcardFile
    void deleteFile(java.io.File) -> deleteFile
com.coco.lock2.local.app.base.IBaseView -> com.coco.lock2.local.app.base.IBaseView:
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
com.coco.lock2.local.app.base.IWrap -> com.coco.lock2.local.app.base.IWrap:
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    android.view.View getView() -> getView
    void setKernelCallback(android.os.Handler$Callback) -> setKernelCallback
    android.os.Handler$Callback getAppService() -> getAppService
com.coco.lock2.local.app.base.LockViewContainer -> com.coco.lock2.local.app.base.LockViewContainer:
    java.lang.String htmlFilesDir -> a
    java.lang.String SDCARD_FILES_DIR -> b
    java.lang.String updateFile -> c
    android.content.Context mContext -> d
    android.content.Context mRemoteContext -> e
    org.apache.cordova.CordovaWrap mCordovaWrap -> f
    android.webkit.WebView mWebView -> g
    android.view.View mLockView -> h
    android.os.Handler mHandler -> i
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onViewResume() -> onViewResume
    void onViewPause() -> onViewPause
    void onViewDestroy() -> onViewDestroy
    void initialWebview() -> b
    void setupViews(android.view.View) -> setupViews
    boolean IsHaveInternet(android.content.Context) -> IsHaveInternet
    void access$0(com.coco.lock2.local.app.base.LockViewContainer) -> a
    android.content.Context access$1(com.coco.lock2.local.app.base.LockViewContainer) -> b
    android.content.Context access$2(com.coco.lock2.local.app.base.LockViewContainer) -> c
    android.os.Handler access$3(com.coco.lock2.local.app.base.LockViewContainer) -> d
    void access$4(com.coco.lock2.local.app.base.LockViewContainer,java.lang.String) -> a
    java.lang.String access$5(com.coco.lock2.local.app.base.LockViewContainer) -> e
    java.lang.String access$6() -> a
com.coco.lock2.local.app.base.LockViewContainer$1 -> ae:
    com.coco.lock2.local.app.base.LockViewContainer this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.coco.lock2.local.app.base.LockViewContainer$2 -> af:
    com.coco.lock2.local.app.base.LockViewContainer this$0 -> a
    void run() -> run
com.coco.lock2.local.app.base.LockViewContainer$3 -> ag:
    com.coco.lock2.local.app.base.LockViewContainer this$0 -> a
    void run() -> run
com.coco.lock2.local.app.base.LockWrapBase -> com.coco.lock2.local.app.base.LockWrapBase:
    android.os.Handler$Callback kernelCallback -> d
    com.coco.lock2.local.app.base.LockViewContainer mLockView -> e
    android.view.View mCustomLockView -> f
    android.content.Context context -> a
    android.content.Context remoteContext -> b
    java.lang.String simInf -> c
    android.os.Handler$Callback appService -> g
    android.view.View createLockView() -> createLockView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    android.view.View getView() -> getView
    void setKernelCallback(android.os.Handler$Callback) -> setKernelCallback
    android.os.Handler$Callback getAppService() -> getAppService
    void unLock() -> unLock
    void resetLight() -> resetLight
    void onUnlock() -> onUnlock
com.coco.lock2.local.app.base.LockWrapBase$1 -> ah:
    com.coco.lock2.local.app.base.LockWrapBase this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.coco.lock2.local.app.base.ThreadUtil -> ai:
    java.util.concurrent.ExecutorService cachedThreadPool -> a
    void execute(java.lang.Runnable) -> execute
com.coco.lock2.local.app.base.Tools -> aj:
    java.util.ArrayList recentTasks(android.content.Context) -> recentTasks
    android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable) -> createIconBitmap
    java.lang.String bitmapToBase64(android.graphics.Bitmap) -> bitmapToBase64
    android.graphics.Bitmap base64ToBitmap(java.lang.String) -> base64ToBitmap
    java.util.HashMap setTime(android.content.Context,java.util.Date) -> setTime
com.cooee.control.center.module.update.UpdateManager -> ak:
    android.content.Context mContext -> a
    java.lang.String texUrl -> b
    boolean isUpdate() -> isUpdate
    java.lang.String getString(java.io.InputStream) -> a
com.cooee.control.center.module.update.UpdateService -> com.cooee.control.center.module.update.UpdateService:
    android.content.BroadcastReceiver mBroadcastReceiver -> a
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.cooee.control.center.module.update.UpdateService$1 -> al:
    com.cooee.control.center.module.update.UpdateService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.control.center.module.update.UpdateTask -> am:
    android.content.Context mContext -> a
    com.cooee.control.center.module.update.UpdateTask$XmlTask xmlTask -> c
    android.content.SharedPreferences sharedPrefer -> d
    android.content.SharedPreferences$Editor editor -> b
    boolean updateFailed -> e
    java.lang.String downUrl -> f
    java.lang.String zipName -> g
    void checkUpdate() -> checkUpdate
    boolean judgeUpdate(long) -> a
    void updateFile() -> a
    boolean downloadFile(java.lang.String) -> a
    void access$3$4a513032(java.io.File,java.lang.String) -> a
com.cooee.control.center.module.update.UpdateTask$1 -> an:
    com.cooee.control.center.module.update.UpdateTask this$0 -> a
    void run() -> run
com.cooee.control.center.module.update.UpdateTask$XmlTask -> ao:
    com.cooee.control.center.module.update.UpdateManager updateManager -> b
    com.cooee.control.center.module.update.UpdateTask this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cooee.cordova.plugins.AppsApi -> com.cooee.cordova.plugins.AppsApi:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_CHECK_AVAILABILITY -> ACTION_CHECK_AVAILABILITY
    java.lang.String ACTION_START_ACTIVITY -> ACTION_START_ACTIVITY
    java.lang.String ACTION_START_SHORTCUT -> ACTION_START_SHORTCUT
    java.lang.String ACTION_START_BROWSER_URL -> ACTION_START_BROWSER_URL
    java.lang.String ACTION_BIND_FAVORITE_APP -> ACTION_BIND_FAVORITE_APP
    org.apache.cordova.CallbackContext mCallbackContext -> mCallbackContext
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean appInstalled(java.lang.String) -> appInstalled
    void startApp(org.json.JSONArray) -> startApp
    void startShortcut(org.json.JSONArray) -> startShortcut
    void startUrl(org.json.JSONArray) -> startUrl
    void checkAvailability(java.lang.String,org.apache.cordova.CallbackContext) -> checkAvailability
    void bindWebFavoriteApp() -> bindWebFavoriteApp
    void sendJS(java.lang.String) -> sendJS
    void startMicroEntrance(android.content.Context) -> startMicroEntrance
    void createAppShortCut(android.content.Context,android.content.Intent,java.lang.String,android.graphics.Bitmap) -> createAppShortCut
    void createSystemSwitcherShortCut(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap) -> createSystemSwitcherShortCut
    com.cooee.cordova.plugins.UnlockListener access$0() -> access$0
    org.apache.cordova.CallbackContext access$1(com.cooee.cordova.plugins.AppsApi) -> access$1
    void access$2(com.cooee.cordova.plugins.AppsApi,android.content.Context,android.content.Intent,java.lang.String,android.graphics.Bitmap) -> access$2
    void access$3(com.cooee.cordova.plugins.AppsApi,android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap) -> access$3
com.cooee.cordova.plugins.AppsApi$1 -> ap:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$2 -> aq:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$3 -> ar:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$4 -> as:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$5 -> at:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$6 -> au:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    org.json.JSONArray val$args -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$7 -> av:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.AppsApi$8 -> aw:
    com.cooee.cordova.plugins.AppsApi this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.BluetoothStatus -> com.cooee.cordova.plugins.BluetoothStatus:
    org.apache.cordova.CordovaWebView mwebView -> mwebView
    org.apache.cordova.CordovaInterface mcordova -> mcordova
    java.lang.String LOG_TAG -> LOG_TAG
    android.bluetooth.BluetoothAdapter bluetoothAdapter -> bluetoothAdapter
    org.apache.cordova.CallbackContext callbackContext -> callbackContext
    android.content.BroadcastReceiver mReceiver -> mReceiver
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void onDestroy() -> onDestroy
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void enableBT() -> enableBT
    void disableBT() -> disableBT
    boolean isBlueEnabled(org.apache.cordova.CallbackContext) -> isBlueEnabled
    void promptForBT() -> promptForBT
    void initPlugin() -> initPlugin
    void sendJS(java.lang.String) -> sendJS
    void access$0(com.cooee.cordova.plugins.BluetoothStatus,java.lang.String) -> access$0
    org.apache.cordova.CordovaWebView access$1() -> access$1
com.cooee.cordova.plugins.BluetoothStatus$1 -> ax:
    com.cooee.cordova.plugins.BluetoothStatus this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.cordova.plugins.BluetoothStatus$2 -> ay:
    com.cooee.cordova.plugins.BluetoothStatus this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.BluetoothStatus$3 -> az:
    com.cooee.cordova.plugins.BluetoothStatus this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.EventStatistics -> com.cooee.cordova.plugins.EventStatistics:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_CLICK_APP -> ACTION_CLICK_APP
    java.lang.String ACTION_OPEN_CONTROL_CENTER -> ACTION_OPEN_CONTROL_CENTER
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext) -> execute
    void clickApp() -> clickApp
    void openCentrolCenter() -> openCentrolCenter
com.cooee.cordova.plugins.Flashlight -> com.cooee.cordova.plugins.Flashlight:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_AVAILABLE -> ACTION_AVAILABLE
    java.lang.String ACTION_SWITCH_ON -> ACTION_SWITCH_ON
    java.lang.String ACTION_SWITCH_OFF -> ACTION_SWITCH_OFF
    java.lang.Boolean capable -> capable
    boolean releasing -> releasing
    android.hardware.Camera mCamera -> mCamera
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean isCapable() -> isCapable
    void toggleTorch(boolean,org.apache.cordova.CallbackContext) -> toggleTorch
    void releaseCamera() -> releaseCamera
    android.hardware.Camera access$0(com.cooee.cordova.plugins.Flashlight) -> access$0
    void access$1(com.cooee.cordova.plugins.Flashlight,boolean) -> access$1
com.cooee.cordova.plugins.Flashlight$1 -> ba:
    com.cooee.cordova.plugins.Flashlight this$0 -> a
    void run() -> run
com.cooee.cordova.plugins.TouchEventPrevent -> com.cooee.cordova.plugins.TouchEventPrevent:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_PREVENT_TOUCH_SELF -> ACTION_PREVENT_TOUCH_SELF
    boolean preventWebTouchEvent -> preventWebTouchEvent
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void preventEventSelf() -> preventEventSelf
com.cooee.cordova.plugins.UnlockListener -> com.cooee.cordova.plugins.UnlockListener:
    void onUnlock() -> onUnlock
com.cooee.cordova.plugins.WhitelistPlugin -> com.cooee.cordova.plugins.WhitelistPlugin:
    java.lang.String LOG_TAG -> LOG_TAG
    org.apache.cordova.Whitelist allowedNavigations -> allowedNavigations
    org.apache.cordova.Whitelist allowedIntents -> allowedIntents
    org.apache.cordova.Whitelist allowedRequests -> allowedRequests
    void pluginInitialize() -> pluginInitialize
    java.lang.Boolean shouldAllowNavigation(java.lang.String) -> shouldAllowNavigation
    java.lang.Boolean shouldAllowRequest(java.lang.String) -> shouldAllowRequest
    java.lang.Boolean shouldOpenExternalUrl(java.lang.String) -> shouldOpenExternalUrl
    org.apache.cordova.Whitelist getAllowedNavigations() -> getAllowedNavigations
    void setAllowedNavigations(org.apache.cordova.Whitelist) -> setAllowedNavigations
    org.apache.cordova.Whitelist getAllowedIntents() -> getAllowedIntents
    void setAllowedIntents(org.apache.cordova.Whitelist) -> setAllowedIntents
    org.apache.cordova.Whitelist getAllowedRequests() -> getAllowedRequests
    void setAllowedRequests(org.apache.cordova.Whitelist) -> setAllowedRequests
    org.apache.cordova.Whitelist access$0(com.cooee.cordova.plugins.WhitelistPlugin) -> access$0
    org.apache.cordova.Whitelist access$1(com.cooee.cordova.plugins.WhitelistPlugin) -> access$1
    org.apache.cordova.Whitelist access$2(com.cooee.cordova.plugins.WhitelistPlugin) -> access$2
com.cooee.cordova.plugins.WhitelistPlugin$CustomConfigXmlParser -> bb:
    com.cooee.cordova.plugins.WhitelistPlugin this$0 -> a
    void handleStartTag(org.xmlpull.v1.XmlPullParser) -> handleStartTag
    void handleEndTag(org.xmlpull.v1.XmlPullParser) -> handleEndTag
com.cooee.cordova.plugins.WifiWizard -> com.cooee.cordova.plugins.WifiWizard:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String ADD_NETWORK -> ADD_NETWORK
    java.lang.String REMOVE_NETWORK -> REMOVE_NETWORK
    java.lang.String CONNECT_NETWORK -> CONNECT_NETWORK
    java.lang.String DISCONNECT_NETWORK -> DISCONNECT_NETWORK
    java.lang.String DISCONNECT -> DISCONNECT
    java.lang.String LIST_NETWORKS -> LIST_NETWORKS
    java.lang.String START_SCAN -> START_SCAN
    java.lang.String GET_SCAN_RESULTS -> GET_SCAN_RESULTS
    java.lang.String GET_CONNECTED_SSID -> GET_CONNECTED_SSID
    java.lang.String IS_WIFI_ENABLED -> IS_WIFI_ENABLED
    java.lang.String SET_WIFI_ENABLED -> SET_WIFI_ENABLED
    android.net.wifi.WifiManager wifiManager -> wifiManager
    org.apache.cordova.CallbackContext callbackContext -> callbackContext
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void onDestroy() -> onDestroy
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean addNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> addNetwork
    boolean removeNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> removeNetwork
    boolean connectNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> connectNetwork
    boolean disconnectNetwork(org.apache.cordova.CallbackContext,org.json.JSONArray) -> disconnectNetwork
    boolean disconnect(org.apache.cordova.CallbackContext) -> disconnect
    boolean listNetworks(org.apache.cordova.CallbackContext) -> listNetworks
    boolean getScanResults(org.apache.cordova.CallbackContext,org.json.JSONArray) -> getScanResults
    boolean startScan(org.apache.cordova.CallbackContext) -> startScan
    boolean getConnectedSSID(org.apache.cordova.CallbackContext) -> getConnectedSSID
    boolean isWifiEnabled(org.apache.cordova.CallbackContext) -> isWifiEnabled
    int ssidToNetworkId(java.lang.String) -> ssidToNetworkId
    boolean setWifiEnabled(org.apache.cordova.CallbackContext,org.json.JSONArray) -> setWifiEnabled
    boolean validateData(org.json.JSONArray) -> validateData
    void sendJS(java.lang.String) -> sendJS
    android.net.wifi.WifiManager access$0(com.cooee.cordova.plugins.WifiWizard) -> access$0
com.cooee.cordova.plugins.WifiWizard$1 -> bc:
    com.cooee.cordova.plugins.WifiWizard this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cooee.cordova.plugins.WifiWizard$2 -> bd:
    com.cooee.cordova.plugins.WifiWizard this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.WifiWizard$3 -> be:
    com.cooee.cordova.plugins.WifiWizard this$0 -> a
    java.lang.String val$js -> b
    void run() -> run
com.cooee.cordova.plugins.camera.CameraLauncher -> com.cooee.cordova.plugins.camera.CameraLauncher:
    int DATA_URL -> DATA_URL
    int FILE_URI -> FILE_URI
    int NATIVE_URI -> NATIVE_URI
    int PHOTOLIBRARY -> PHOTOLIBRARY
    int CAMERA -> CAMERA
    int SAVEDPHOTOALBUM -> SAVEDPHOTOALBUM
    int PICTURE -> PICTURE
    int VIDEO -> VIDEO
    int ALLMEDIA -> ALLMEDIA
    int JPEG -> JPEG
    int PNG -> PNG
    java.lang.String GET_PICTURE -> GET_PICTURE
    java.lang.String GET_VIDEO -> GET_VIDEO
    java.lang.String GET_All -> GET_All
    java.lang.String LOG_TAG -> LOG_TAG
    int CROP_CAMERA -> CROP_CAMERA
    int mQuality -> mQuality
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    android.net.Uri imageUri -> imageUri
    int encodingType -> encodingType
    int mediaType -> mediaType
    boolean saveToPhotoAlbum -> saveToPhotoAlbum
    boolean correctOrientation -> correctOrientation
    boolean orientationCorrected -> orientationCorrected
    boolean allowEdit -> allowEdit
    org.apache.cordova.CallbackContext callbackContext -> callbackContext
    int numPics -> numPics
    android.media.MediaScannerConnection conn -> conn
    android.net.Uri scanMe -> scanMe
    android.net.Uri croppedUri -> croppedUri
    com.cooee.cordova.plugins.UnlockListener sUnlockListener -> sUnlockListener
    void setOnUnlockListener(com.cooee.cordova.plugins.UnlockListener) -> setOnUnlockListener
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    java.lang.String getTempDirectoryPath() -> getTempDirectoryPath
    void takePicture(int,int) -> takePicture
    java.io.File createCaptureFile(int) -> createCaptureFile
    void getImage(int,int,int) -> getImage
    void performCrop(android.net.Uri,int,android.content.Intent) -> performCrop
    void processResultFromCamera(int,android.content.Intent) -> processResultFromCamera
    java.lang.String getPicutresPath() -> getPicutresPath
    void refreshGallery(android.net.Uri) -> refreshGallery
    java.lang.String ouputModifiedBitmap(android.graphics.Bitmap,android.net.Uri) -> ouputModifiedBitmap
    void processResultFromGallery(int,android.content.Intent) -> processResultFromGallery
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int getImageOrientation(android.net.Uri) -> getImageOrientation
    android.graphics.Bitmap getRotatedBitmap(int,android.graphics.Bitmap,com.cooee.cordova.plugins.camera.ExifHelper) -> getRotatedBitmap
    void writeUncompressedImage(android.net.Uri) -> writeUncompressedImage
    android.net.Uri getUriFromMediaStore() -> getUriFromMediaStore
    android.graphics.Bitmap getScaledBitmap(java.lang.String) -> getScaledBitmap
    int[] calculateAspectRatio(int,int) -> calculateAspectRatio
    int calculateSampleSize(int,int,int,int) -> calculateSampleSize
    android.database.Cursor queryImgDB(android.net.Uri) -> queryImgDB
    void cleanup(int,android.net.Uri,android.net.Uri,android.graphics.Bitmap) -> cleanup
    void checkForDuplicateImage(int) -> checkForDuplicateImage
    android.net.Uri whichContentStore() -> whichContentStore
    void processPicture(android.graphics.Bitmap) -> processPicture
    void failPicture(java.lang.String) -> failPicture
    void scanForGallery(android.net.Uri) -> scanForGallery
    void onMediaScannerConnected() -> onMediaScannerConnected
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
com.cooee.cordova.plugins.camera.ExifHelper -> com.cooee.cordova.plugins.camera.ExifHelper:
    java.lang.String aperture -> aperture
    java.lang.String datetime -> datetime
    java.lang.String exposureTime -> exposureTime
    java.lang.String flash -> flash
    java.lang.String focalLength -> focalLength
    java.lang.String gpsAltitude -> gpsAltitude
    java.lang.String gpsAltitudeRef -> gpsAltitudeRef
    java.lang.String gpsDateStamp -> gpsDateStamp
    java.lang.String gpsLatitude -> gpsLatitude
    java.lang.String gpsLatitudeRef -> gpsLatitudeRef
    java.lang.String gpsLongitude -> gpsLongitude
    java.lang.String gpsLongitudeRef -> gpsLongitudeRef
    java.lang.String gpsProcessingMethod -> gpsProcessingMethod
    java.lang.String gpsTimestamp -> gpsTimestamp
    java.lang.String iso -> iso
    java.lang.String make -> make
    java.lang.String model -> model
    java.lang.String orientation -> orientation
    java.lang.String whiteBalance -> whiteBalance
    android.media.ExifInterface inFile -> inFile
    android.media.ExifInterface outFile -> outFile
    void createInFile(java.lang.String) -> createInFile
    void createOutFile(java.lang.String) -> createOutFile
    void readExifData() -> readExifData
    void writeExifData() -> writeExifData
    int getOrientation() -> getOrientation
    void resetOrientation() -> resetOrientation
com.cooee.cordova.plugins.camera.FileHelper -> com.cooee.cordova.plugins.camera.FileHelper:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String _DATA -> _DATA
    java.lang.String getRealPath(android.net.Uri,org.apache.cordova.CordovaInterface) -> getRealPath
    java.lang.String getRealPath(java.lang.String,org.apache.cordova.CordovaInterface) -> getRealPath
    java.lang.String getRealPathFromURI_API19(android.content.Context,android.net.Uri) -> getRealPathFromURI_API19
    java.lang.String getRealPathFromURI_API11to18(android.content.Context,android.net.Uri) -> getRealPathFromURI_API11to18
    java.lang.String getRealPathFromURI_BelowAPI11(android.content.Context,android.net.Uri) -> getRealPathFromURI_BelowAPI11
    java.io.InputStream getInputStreamFromUriString(java.lang.String,org.apache.cordova.CordovaInterface) -> getInputStreamFromUriString
    java.lang.String stripFileProtocol(java.lang.String) -> stripFileProtocol
    java.lang.String getMimeTypeForExtension(java.lang.String) -> getMimeTypeForExtension
    java.lang.String getMimeType(java.lang.String,org.apache.cordova.CordovaInterface) -> getMimeType
com.cooee.cordova.plugins.mobiledata.MobileDataWizard -> com.cooee.cordova.plugins.mobiledata.MobileDataWizard:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_IS_MOBILE_DATA_ENABLED -> ACTION_IS_MOBILE_DATA_ENABLED
    java.lang.String ACTION_click_MOBILE_DATA -> ACTION_click_MOBILE_DATA
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean isMobileDataEnabled(org.apache.cordova.CallbackContext) -> isMobileDataEnabled
    void clickMobileData() -> clickMobileData
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    void longClickMobileData() -> longClickMobileData
com.cooee.cordova.plugins.mobiledata.TelephonyInfo -> com.cooee.cordova.plugins.mobiledata.TelephonyInfo:
    com.cooee.cordova.plugins.mobiledata.TelephonyInfo telephonyInfo -> telephonyInfo
    java.lang.String imsiSIM1 -> imsiSIM1
    java.lang.String imsiSIM2 -> imsiSIM2
    boolean isSIM1Ready -> isSIM1Ready
    boolean isSIM2Ready -> isSIM2Ready
    com.cooee.cordova.plugins.mobiledata.TelephonyInfo getInstance(android.content.Context) -> getInstance
    java.lang.String getDeviceIdBySlot(android.content.Context,java.lang.String,int) -> getDeviceIdBySlot
    boolean getSIMStateBySlot(android.content.Context,java.lang.String,int) -> getSIMStateBySlot
    void printTelephonyManagerMethodNamesForThisDevice(android.content.Context) -> printTelephonyManagerMethodNamesForThisDevice
    java.lang.String getImsiSIM1() -> getImsiSIM1
    java.lang.String getImsiSIM2() -> getImsiSIM2
    boolean isSIM1Ready() -> isSIM1Ready
    boolean isSIM2Ready() -> isSIM2Ready
    boolean isDualSIM() -> isDualSIM
com.cooee.cordova.plugins.mobiledata.TelephonyInfo$GeminiMethodNotFoundException -> bf:
    long serialVersionUID -> serialVersionUID
com.cooee.lock.statistics.Assets -> bg:
    android.content.Context mContext -> b
    org.json.JSONObject config -> a
    void initAssets(android.content.Context) -> initAssets
    org.json.JSONObject getConfig(java.lang.String) -> getConfig
    java.lang.String readTextFile(java.io.InputStream) -> a
com.cooee.lock.statistics.Dbhelp -> bh:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean onSerch(android.database.sqlite.SQLiteDatabase,java.lang.String) -> onSerch
    void onCreateTable(android.database.sqlite.SQLiteDatabase,java.lang.String) -> onCreateTable
com.cooee.lock.statistics.StaticClass -> com.cooee.lock.statistics.StaticClass:
    java.lang.String appid -> a
    java.lang.String sn -> b
    java.lang.String launcherVersion -> c
    java.lang.String packagename -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.cooee.shell.moduleupdate.ConfigData -> bi:
    java.lang.String updateInterval -> b
    java.lang.String airpushInterval -> c
    java.lang.String deviceModel -> d
    java.lang.String configVersion -> e
    com.cooee.shell.moduleupdate.b shellModule -> f
    com.cooee.shell.moduleupdate.b downloaderModule -> g
    com.cooee.shell.moduleupdate.b chargeModule -> h
    boolean isPullXmlErr -> a
    java.lang.String getUpdateInterval() -> getUpdateInterval
    java.lang.String getAirPushInterval() -> getAirPushInterval
    java.lang.String getConfigVersion() -> getConfigVersion
    void setConfigVersion(java.lang.String) -> setConfigVersion
    void setUpdateInterval(java.lang.String) -> setUpdateInterval
    void setAirpushInterval(java.lang.String) -> setAirpushInterval
    java.lang.String getDeviceModel() -> getDeviceModel
    void setDeviceModel(java.lang.String) -> setDeviceModel
    com.cooee.shell.moduleupdate.b getShellModule() -> getShellModule
    void setShellModule(com.cooee.shell.moduleupdate.b) -> setShellModule
    com.cooee.shell.moduleupdate.b getDownloaderModule() -> getDownloaderModule
    void setDownloaderModule(com.cooee.shell.moduleupdate.b) -> setDownloaderModule
    com.cooee.shell.moduleupdate.b getChargeModule() -> getChargeModule
    void setChargeModule(com.cooee.shell.moduleupdate.b) -> setChargeModule
com.cooee.shell.moduleupdate.ParseConfigXml -> bj:
    com.cooee.shell.moduleupdate.ConfigData PullXmlText(java.lang.String) -> PullXmlText
    void saveConfigXml(android.content.Context,com.cooee.shell.moduleupdate.ConfigData) -> saveConfigXml
    boolean createXml(java.lang.String,java.lang.String) -> createXml
    boolean createConfigXml(android.content.Context,com.cooee.shell.moduleupdate.ConfigData) -> createConfigXml
    com.cooee.shell.moduleupdate.ConfigData getConfigData(java.io.InputStream) -> getConfigData
com.cooee.shell.moduleupdate.RijndaelCrypt -> bk:
    java.lang.String TRANSFORMATION -> g
    java.lang.String ALGORITHM -> h
    javax.crypto.Cipher _cipher -> i
    javax.crypto.SecretKey _password -> j
    javax.crypto.spec.IvParameterSpec _IVParamSpec -> k
    byte[] IV_CG -> a
    byte[] IV_UF -> b
    byte[] IV_SJ -> c
    java.lang.String PWD_CG -> d
    java.lang.String PWD_UF -> e
    java.lang.String PWD_SJ -> f
    byte[] encryptToByteArray(byte[]) -> encryptToByteArray
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String decrypt(byte[],java.lang.String) -> decrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
com.cooee.shell.moduleupdate.b -> bl:
    java.lang.String a -> a
    int b -> b
    java.lang.StringBuffer c -> c
    java.lang.String d -> d
com.cooee.shell.pay.PayActivityHullV5 -> com.cooee.shell.pay.PayActivityHullV5:
    java.lang.Object a -> a
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onNewIntent(android.content.Intent) -> onNewIntent
com.cooee.shell.pay.PayServiceHullV5 -> com.cooee.shell.pay.PayServiceHullV5:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.cooee.shell.pay.f -> bm:
    android.content.Context a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    java.lang.Class d -> d
    java.lang.Object e -> e
    com.cooee.shell.pay.f f -> f
    com.cooee.shell.pay.f a(android.content.Context) -> a
    java.lang.Class a() -> a
    java.lang.Object b() -> b
    java.lang.Class c() -> c
com.cooee.shell.sdk.AppData -> bn:
    java.lang.String packageName -> a
    java.lang.String appName -> b
    java.lang.String versionCode -> c
    java.lang.String versionName -> d
    java.lang.String appP04 -> e
    boolean equals(com.cooee.shell.sdk.AppData) -> equals
    void setPackageName(java.lang.String) -> setPackageName
    void setAppName(java.lang.String) -> setAppName
    void setVersionCode(java.lang.String) -> setVersionCode
    void setVersionName(java.lang.String) -> setVersionName
    void setAppP04(java.lang.String) -> setAppP04
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    java.lang.String getVersionCode() -> getVersionCode
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getAppP04() -> getAppP04
com.cooee.shell.sdk.AppNameXml -> bo:
    void saveApplistXml(android.content.Context) -> saveApplistXml
    void a(java.util.ArrayList) -> a
    java.util.ArrayList getAppDataFromXml() -> getAppDataFromXml
    boolean a() -> a
    java.io.File b() -> b
    com.cooee.shell.sdk.AppData a(android.content.Context) -> a
com.cooee.shell.sdk.CooeeLog -> bp:
    int mLevel -> a
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.String) -> e
    boolean a(int) -> a
    int a() -> a
com.cooee.shell.sdk.CooeeSdk -> bq:
    android.os.Messenger sendMessenger -> a
    boolean DEBUG -> b
    boolean mIsInitCooeeSdk -> c
    boolean cooeeExistSDCard() -> cooeeExistSDCard
    java.lang.String cooeeGetKernelVersion() -> cooeeGetKernelVersion
    java.lang.String b(android.content.Context) -> b
    java.lang.String cooeeGetSmsSc(android.content.Context,int) -> cooeeGetSmsSc
    java.lang.String GetSimScFromSdcardById(android.content.Context,int) -> GetSimScFromSdcardById
    void SetSimScToSdcard(android.content.Context,int,java.lang.String) -> SetSimScToSdcard
    java.lang.String STGetSimScById(android.content.Context,int) -> STGetSimScById
    java.lang.String MTKGetSimScById(android.content.Context,int) -> MTKGetSimScById
    java.lang.String cooeeGetCustomVersion() -> cooeeGetCustomVersion
    long cooeeGetTotalCallTime(android.content.Context) -> cooeeGetTotalCallTime
    java.lang.String cooeeGetImsi(android.content.Context,int) -> cooeeGetImsi
    java.lang.String c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    java.lang.String cooeeGetAndroidID(android.content.Context) -> cooeeGetAndroidID
    java.lang.String cooeeGetImei(android.content.Context,int) -> cooeeGetImei
    java.lang.String cooeeGetIccid(android.content.Context,int) -> cooeeGetIccid
    java.lang.String cooeeGetPhoneNumber(android.content.Context,int) -> cooeeGetPhoneNumber
    java.lang.String cooeeGetCurNetworkType(android.content.Context) -> cooeeGetCurNetworkType
    java.lang.String cooeeGetMCCMNC(android.content.Context) -> cooeeGetMCCMNC
    java.lang.String cooeeGetLAC(android.content.Context) -> cooeeGetLAC
    java.lang.String cooeeGetCID(android.content.Context) -> cooeeGetCID
    int cooeeGetLcdHeight(android.content.Context) -> cooeeGetLcdHeight
    int cooeeGetLcdWidth(android.content.Context) -> cooeeGetLcdWidth
    java.lang.String cooeeGetBuildId() -> cooeeGetBuildId
    java.lang.String cooeeGetBuildDisplay() -> cooeeGetBuildDisplay
    java.lang.String cooeeGetBuildProduct() -> cooeeGetBuildProduct
    java.lang.String cooeeGetBuildDevice() -> cooeeGetBuildDevice
    java.lang.String cooeeGetBuildBoard() -> cooeeGetBuildBoard
    java.lang.String cooeeGetBuildManufacturer() -> cooeeGetBuildManufacturer
    java.lang.String cooeeGetBuildBrand() -> cooeeGetBuildBrand
    java.lang.String cooeeGetBuildModel() -> cooeeGetBuildModel
    java.lang.String cooeeGetBuildBootloader() -> cooeeGetBuildBootloader
    java.lang.String cooeeGetBuildBaseband() -> cooeeGetBuildBaseband
    java.lang.String cooeeGetBuildHardware() -> cooeeGetBuildHardware
    java.lang.String cooeeGetSerialno() -> cooeeGetSerialno
    java.lang.String cooeeGetBuildFingerprint() -> cooeeGetBuildFingerprint
    java.lang.String cooeeGetBuildVersionRelease() -> cooeeGetBuildVersionRelease
    int cooeeGetVersionSdkInt() -> cooeeGetVersionSdkInt
    java.lang.String cooeeGetBuildTags() -> cooeeGetBuildTags
    java.lang.String cooeeGetBuildType() -> cooeeGetBuildType
    java.lang.String cooeeGetVersionIncremental() -> cooeeGetVersionIncremental
    long cooeeGetCurRunTime() -> cooeeGetCurRunTime
    long cooeeGetTotalRunTime() -> cooeeGetTotalRunTime
    int cooeeGetSmsNum(android.content.Context) -> cooeeGetSmsNum
    long cooeeGetTotalRom() -> cooeeGetTotalRom
    long cooeeGetAvailRom() -> cooeeGetAvailRom
    long cooeeGetTotalMem() -> cooeeGetTotalMem
    long cooeeGetAvailMem(android.content.Context) -> cooeeGetAvailMem
    long cooeeGetDefaultSimId(android.content.Context) -> cooeeGetDefaultSimId
    void cooeeSetDefaultSimId(android.content.Context) -> cooeeSetDefaultSimId
    java.lang.String cooeeGetCooeeId(android.content.Context) -> cooeeGetCooeeId
    java.lang.String cooeeGetProjectInfo(android.content.Context) -> cooeeGetProjectInfo
    java.lang.String cooeeGetProjectXmlStr(android.content.Context) -> cooeeGetProjectXmlStr
    byte[] getPostBufToByte(android.content.Context,java.lang.String) -> getPostBufToByte
    byte[] getPostBufToByte(android.content.Context,java.lang.String,java.lang.String,byte[]) -> getPostBufToByte
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Class,java.lang.Object) -> a
    void initCooeeSdk(android.content.Context) -> initCooeeSdk
    void startShellServiceByBootReceiver(android.content.Context) -> startShellServiceByBootReceiver
    boolean shellServiceIsStart(java.util.List,java.lang.String) -> shellServiceIsStart
    java.lang.String getRunningServicePackageName(android.content.Context,java.lang.String) -> getRunningServicePackageName
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    void gotoGameActivity(android.content.Context) -> gotoGameActivity
    void appExitNotifyCooeeSdk(android.content.Context,int) -> appExitNotifyCooeeSdk
    void appExitNotifyCooeeSdkForResult(android.app.Activity,int) -> appExitNotifyCooeeSdkForResult
    void a(android.content.Context) -> a
com.cooee.shell.sdk.ExceptionLog -> br:
    void writeShellExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String) -> writeShellExceptionToXml
    void writePayExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String) -> writePayExceptionToXml
    void writeExceptionToXml(java.lang.Throwable,android.content.Context,java.lang.String,java.lang.String) -> writeExceptionToXml
    java.lang.String getExceptionXmlStr() -> getExceptionXmlStr
    void delExceptionXml() -> delExceptionXml
    boolean hasExceptionXml() -> hasExceptionXml
    void writeExceptionTime(int) -> writeExceptionTime
    int getExceptionTime() -> getExceptionTime
    void writeExceptionToFile(java.lang.Throwable) -> writeExceptionToFile
    void writeShellUpdateExceptionFile(android.content.Context,java.lang.String) -> writeShellUpdateExceptionFile
    java.lang.String getShellUpdateExceptionStr(android.content.Context) -> getShellUpdateExceptionStr
    void delShellUpdateExceptionFile(android.content.Context) -> delShellUpdateExceptionFile
com.cooee.shell.sdk.JarFileUtils -> bs:
    void copyAllJarsAndCheckVersion(android.content.Context) -> copyAllJarsAndCheckVersion
    boolean copyPayJarAndCheckVersion(android.content.Context) -> copyPayJarAndCheckVersion
    boolean copyShellJarAndCheckVersion(android.content.Context) -> copyShellJarAndCheckVersion
    boolean copyJarAndCheckVersion(android.content.Context,java.lang.String) -> copyJarAndCheckVersion
    boolean copyFileToFile(java.io.File,java.io.File) -> copyFileToFile
    boolean copyShellJarFrommAssetsToPrivate(android.content.Context) -> copyShellJarFrommAssetsToPrivate
    boolean copyPayJarFrommAssetsToPrivate(android.content.Context) -> copyPayJarFrommAssetsToPrivate
    boolean copyFileFromAssetsToPrivate(android.content.Context,java.lang.String,java.io.File) -> copyFileFromAssetsToPrivate
    boolean copyAssetsToFile(android.content.Context,java.lang.String,java.io.File) -> copyAssetsToFile
    int compareFileVersion(android.content.Context,java.io.File,java.io.File) -> compareFileVersion
    void deleteDexFile(java.lang.String) -> deleteDexFile
    boolean isFileLegal(java.io.File) -> isFileLegal
    boolean createNewFile(java.io.File) -> createNewFile
    void createFileNeedDir(java.io.File) -> createFileNeedDir
    java.io.File getPayPrivateFile(android.content.Context) -> getPayPrivateFile
    java.io.File getShellPrivateFile(android.content.Context) -> getShellPrivateFile
    java.io.File getSdcardFile(java.lang.String) -> getSdcardFile
    java.io.File getPrivateFile(android.content.Context,java.lang.String) -> getPrivateFile
    java.lang.String getJarVersion(android.content.Context,java.lang.String) -> getJarVersion
    java.lang.String getPrivateJarVersion(android.content.Context,java.lang.String) -> getPrivateJarVersion
    java.lang.String getPrivateShellJarVersion(android.content.Context) -> getPrivateShellJarVersion
    java.lang.String getPrivatePayJarVersion(android.content.Context) -> getPrivatePayJarVersion
    java.lang.String getPrivateDownloadJarVersion(android.content.Context) -> getPrivateDownloadJarVersion
com.cooee.shell.sdk.SdkClassUtils -> bt:
    java.lang.String getShellServiceHullClassName() -> getShellServiceHullClassName
    java.lang.String getPayServiceHullClassName() -> getPayServiceHullClassName
    java.lang.String getShellActivityHullClassName() -> getShellActivityHullClassName
    java.lang.String getPayActivityHullClassName() -> getPayActivityHullClassName
    java.lang.String getDownloadActivityHullClassName() -> getDownloadActivityHullClassName
    java.lang.String getShellReceiverHullClassName() -> getShellReceiverHullClassName
com.cooee.shell.sdk.SdkPathUtils -> bu:
    java.lang.String GET_SHELL_MODULE() -> GET_SHELL_MODULE
    java.lang.String GET_PAY_MODULE() -> GET_PAY_MODULE
    java.lang.String GET_SDK_DIR() -> GET_SDK_DIR
    java.lang.String GET_MODULE_DIR() -> GET_MODULE_DIR
    java.lang.String GET_SHELL_DIR() -> GET_SHELL_DIR
    java.lang.String GET_PAY_DIR() -> GET_PAY_DIR
    java.lang.String GET_DOWNLOAD_DIR() -> GET_DOWNLOAD_DIR
    java.lang.String getSdkSdcardDir() -> getSdkSdcardDir
    java.lang.String getModuleSdcardDir() -> getModuleSdcardDir
    java.lang.String getModulePrivateDir(android.content.Context) -> getModulePrivateDir
    java.lang.String getModuleDir(android.content.Context) -> getModuleDir
    java.lang.String getShellJarSdcardPath() -> getShellJarSdcardPath
    java.lang.String getShellJarPrivatePath(android.content.Context) -> getShellJarPrivatePath
    java.lang.String getShellJarPath(android.content.Context) -> getShellJarPath
    java.lang.String getPayJarSdcardPath() -> getPayJarSdcardPath
    java.lang.String getPayJarPrivatePath(android.content.Context) -> getPayJarPrivatePath
    java.lang.String getPayJarPath(android.content.Context) -> getPayJarPath
    java.lang.String getShellPrivateDir(android.content.Context) -> getShellPrivateDir
    java.lang.String getShellSdcardDir() -> getShellSdcardDir
    java.lang.String getShellDir(android.content.Context) -> getShellDir
    java.lang.String getPayPrivateDir(android.content.Context) -> getPayPrivateDir
    java.lang.String getPaySdcardDir() -> getPaySdcardDir
    java.lang.String getPayDir(android.content.Context) -> getPayDir
    void createJarSdcardDir() -> createJarSdcardDir
    void createJarPrivateDir(android.content.Context) -> createJarPrivateDir
    void createJarDir(android.content.Context) -> createJarDir
com.cooee.shell.sdk.a -> bv:
    android.content.Context a -> a
    void run() -> run
com.cooee.shell.sdk.b -> bw:
    byte[] a(android.content.Context,java.lang.String) -> a
    int a(android.content.Context,java.lang.String,byte[]) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
    byte[] a(java.lang.String) -> a
com.cooee.shell.sdk.c -> bx:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.cooee.shell.shell.SdkActivityHullV5 -> com.cooee.shell.shell.SdkActivityHullV5:
    java.lang.String STRING_NAME -> a
    int a -> b
    java.lang.Class b -> c
    java.lang.Object c -> d
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.Exception) -> a
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.cooee.shell.shell.SdkReceiverHullV5 -> com.cooee.shell.shell.SdkReceiverHullV5:
    java.lang.Object a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
com.cooee.shell.shell.SdkServiceHullV5 -> com.cooee.shell.shell.SdkServiceHullV5:
    java.lang.Class a -> a
    java.lang.Object b -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.cooee.statistics.CustomerHttpClientNew -> com.cooee.statistics.CustomerHttpClientNew:
    java.lang.String CHARSET -> CHARSET
    org.apache.http.client.HttpClient customerHttpClient -> customerHttpClient
    android.content.Context context -> context
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    java.lang.String[] post(java.lang.String,java.lang.String,android.content.Context) -> post
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
com.cooee.statistics.StaticClassNew -> com.cooee.statistics.StaticClassNew:
    int DATANUM -> DATANUM
    int DELAY -> DELAY
com.cooee.statistics.StatisticsBaseNew -> com.cooee.statistics.StatisticsBaseNew:
    boolean enable_Statistics_LOG -> enable_Statistics_LOG
    android.content.Context mContext -> mContext
    java.lang.String LOG_URL -> LOG_URL
    java.lang.String LOG_URL_TEST -> LOG_URL_TEST
    java.lang.String DEFAULT_KEY -> DEFAULT_KEY
    java.lang.String DEFAULT_ERRTIME -> DEFAULT_ERRTIME
    java.lang.String ERRTIME -> ERRTIME
    java.lang.String ERRCOUNT -> ERRCOUNT
    java.lang.String SUCCESSTIME -> SUCCESSTIME
    java.lang.String errtime -> errtime
    java.util.ArrayList idSet -> idSet
    java.lang.String TAG -> TAG
    java.lang.String PATH_ENABLE_LOG -> PATH_ENABLE_LOG
    android.content.SharedPreferences preferences -> preferences
    java.lang.String ACTION_REGISTER -> ACTION_REGISTER
    java.lang.String ACTION_DAILY_ATTENDANCE -> ACTION_DAILY_ATTENDANCE
    java.lang.String ACTION_USE -> ACTION_USE
    java.lang.String ACTION_START_UP -> ACTION_START_UP
    java.lang.String ACTION_CONFIG_UPDATE -> ACTION_CONFIG_UPDATE
    java.lang.String ACTION_START_DOWNLOAD -> ACTION_START_DOWNLOAD
    java.lang.String ACTION_INSTALL -> ACTION_INSTALL
    java.lang.String ACTION_DEFAULT_THEME_REGISTER -> ACTION_DEFAULT_THEME_REGISTER
    java.lang.String ACTION_DEFAULT_THEME_USE -> ACTION_DEFAULT_THEME_USE
    java.lang.String ACTION_DEFAULT_THEME_CHANGE -> ACTION_DEFAULT_THEME_CHANGE
    java.lang.String ACTION_OPEN_CONTROL_CENTER -> ACTION_OPEN_CONTROL_CENTER
    java.lang.String ACTION_CLICK_HEART_APP -> ACTION_CLICK_HEART_APP
    java.lang.String PREFERENCE_KEY -> PREFERENCE_KEY
    java.lang.String NEXT_0011_TIME_KEY -> NEXT_0011_TIME_KEY
    boolean have_action_0011 -> have_action_0011
    java.lang.String IMSI -> IMSI
    java.lang.String default_theme_register -> default_theme_register
    java.lang.String default_theme_change -> default_theme_change
    java.lang.String register_id -> register_id
    android.app.Service service -> service
    android.os.HandlerThread handlerThread -> handlerThread
    android.os.Handler mHandler -> mHandler
    java.lang.Object threadSync -> threadSync
    java.lang.Runnable UploadRun -> UploadRun
    char[] hexDigits -> hexDigits
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void packageOnEvent(android.app.Service,java.lang.String,java.lang.String) -> packageOnEvent
    boolean ErrTimeTransfinite(com.cooee.statistics.StatisticsBaseNew$TYPE) -> ErrTimeTransfinite
    boolean SuccessTimeTransfinite() -> SuccessTimeTransfinite
    void checkThread() -> checkThread
    void exitThread() -> exitThread
    void setApplicationContext(android.content.Context) -> setApplicationContext
    java.lang.String getSDPath() -> getSDPath
    void packageSetAppContext(android.content.Context) -> packageSetAppContext
    android.content.Context getApplicationContext() -> getApplicationContext
    boolean exitErrTime() -> exitErrTime
    void clearErrTimeAndCount() -> clearErrTimeAndCount
    void recordErrTime() -> recordErrTime
    void recordSuccessTime() -> recordSuccessTime
    void recordErrCount(int) -> recordErrCount
    void delAllData() -> delAllData
    int getErrTimes() -> getErrTimes
    boolean IsHaveInternet(android.content.Context) -> IsHaveInternet
    java.lang.String getLogInformation() -> getLogInformation
    java.lang.String getCurTime() -> getCurTime
    java.lang.String getParams(java.lang.String,boolean) -> getParams
    java.lang.String getMyUUID(android.content.Context) -> getMyUUID
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
    java.lang.String bufferToHex(byte[],int,int) -> bufferToHex
    void appendHexPair(byte,java.lang.StringBuffer) -> appendHexPair
    java.lang.String getParams0017NoMd5(java.lang.String) -> getParams0017NoMd5
    java.lang.String getParams0017List(java.lang.String,java.lang.String) -> getParams0017List
    java.lang.String getParams0017WithMd5(java.lang.String,java.lang.String) -> getParams0017WithMd5
    boolean isNeedLog(java.lang.String) -> isNeedLog
    void setNextLog0011Time() -> setNextLog0011Time
    java.lang.String md5Picture(android.content.Context,java.lang.String) -> md5Picture
    android.os.Handler access$0() -> access$0
    java.lang.Runnable access$1() -> access$1
    android.content.Context access$2() -> access$2
    boolean access$3(android.content.Context) -> access$3
    void access$4() -> access$4
    java.lang.String access$5() -> access$5
    boolean access$6() -> access$6
    void access$7() -> access$7
    java.lang.String access$8() -> access$8
    java.lang.String access$9() -> access$9
    java.util.ArrayList access$10() -> access$10
    void access$11(java.lang.String) -> access$11
    java.lang.String access$12() -> access$12
    void access$13(java.lang.String) -> access$13
    java.lang.String access$14() -> access$14
    void access$15(java.lang.String) -> access$15
    void access$16() -> access$16
    void access$17() -> access$17
    void access$18() -> access$18
    int access$19() -> access$19
    void access$20(int) -> access$20
    void access$21() -> access$21
com.cooee.statistics.StatisticsBaseNew$1 -> by:
    void run() -> run
com.cooee.statistics.StatisticsBaseNew$TYPE -> bz:
    com.cooee.statistics.StatisticsBaseNew$TYPE RETRYINTERVAL -> RETRYINTERVAL
    com.cooee.statistics.StatisticsBaseNew$TYPE ONEDAYINTERVAL -> ONEDAYINTERVAL
    com.cooee.statistics.StatisticsBaseNew$TYPE[] ENUM$VALUES -> ENUM$VALUES
    com.cooee.statistics.StatisticsBaseNew$TYPE[] values() -> values
    com.cooee.statistics.StatisticsBaseNew$TYPE valueOf(java.lang.String) -> valueOf
com.cooee.statistics.StatisticsExpandNew -> com.cooee.statistics.StatisticsExpandNew:
    java.lang.String CONFIG_FILE_NAME -> CONFIG_FILE_NAME
    java.lang.String readTextFile(java.io.InputStream) -> readTextFile
    com.cooee.statistics.StatisticsExpandNew$AppidAndSn procSNandAppid(android.content.Context,int,java.lang.String) -> procSNandAppid
    void register(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> register
    void dailyAttendance(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> dailyAttendance
    void use(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> use
    void clickHeartApp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> clickHeartApp
    void openControlCenter(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> openControlCenter
    void startUp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> startUp
    void configUpdate(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> configUpdate
    void startDownload(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> startDownload
    void install(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> install
    void register_default_theme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean) -> register_default_theme
    void useDefaultTheme(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> useDefaultTheme
    void setStatiisticsLogEnable(boolean) -> setStatiisticsLogEnable
    java.lang.String md5Picture(android.content.Context,java.lang.String) -> md5Picture
com.cooee.statistics.StatisticsExpandNew$AppidAndSn -> ca:
    java.lang.String sn -> a
    java.lang.String appid -> b
    java.lang.String getSn() -> getSn
    void setSn(java.lang.String) -> setSn
    java.lang.String getAppid() -> getAppid
    void setAppid(java.lang.String) -> setAppid
com.cooee.statistics.StatisticsServiceNew -> com.cooee.statistics.StatisticsServiceNew:
    java.lang.String EXTRA_EVENT_ID -> EXTRA_EVENT_ID
    java.lang.String EXTRA_PARAMS -> EXTRA_PARAMS
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void handleCommand(android.content.Intent) -> handleCommand
com.cooee.statistics.databaseNew.ConfigDBNew -> com.cooee.statistics.databaseNew.ConfigDBNew:
    java.lang.String KEY_NAME -> KEY_NAME
    java.lang.String KEY_VALUE -> KEY_VALUE
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    java.lang.String DEFAULT_ERRTIME -> DEFAULT_ERRTIME
    java.lang.String ERRTIME -> ERRTIME
    java.lang.String ERRCOUNT -> ERRCOUNT
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    void initconfdb() -> initconfdb
    com.cooee.statistics.databaseNew.ConfigDBNew open() -> open
    void close() -> close
    long insertTitle(java.lang.String,java.lang.String) -> insertTitle
    boolean deleteTitle(java.lang.String) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    java.lang.String getTitle(java.lang.String) -> getTitle
    boolean updateTitle(java.lang.String,java.lang.String) -> updateTitle
com.cooee.statistics.databaseNew.DatabaseHelperNew -> com.cooee.statistics.databaseNew.DatabaseHelperNew:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.cooee.statistics.databaseNew.JournalDBNew -> com.cooee.statistics.databaseNew.JournalDBNew:
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_LOGTEXT -> KEY_LOGTEXT
    java.lang.String KEY_UPLOADTIME -> KEY_UPLOADTIME
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    android.content.Context context -> context
    com.cooee.statistics.databaseNew.DatabaseHelperNew DBHelper -> DBHelper
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String getCreateSql() -> getCreateSql
    java.lang.String getDropSql() -> getDropSql
    com.cooee.statistics.databaseNew.JournalDBNew open() -> open
    void close() -> close
    long insertTitle(java.lang.String) -> insertTitle
    long insertAllInfo(java.lang.String,java.lang.String) -> insertAllInfo
    boolean deleteTitle(long) -> deleteTitle
    android.database.Cursor getAllTitles() -> getAllTitles
    boolean updateTitle(long,java.lang.String) -> updateTitle
    boolean updateAllInfo(long,java.lang.String,java.lang.String) -> updateAllInfo
    java.lang.String getCurTime() -> getCurTime
com.iLoong.launcher.MList.ApkMangerActivity -> com.iLoong.launcher.MList.ApkMangerActivity:
    com.iLoong.launcher.MList.MeApkDownloadManager MeapkDlMgr -> MeapkDlMgr
    int entryId -> entryId
    boolean isStartByNotiy -> isStartByNotiy
    java.lang.String moudleName -> moudleName
    android.support.v4.view.ViewPager gridPager -> gridPager
    android.view.View viewDownload -> viewDownload
    android.view.View viewInstall -> viewInstall
    java.lang.Boolean isShowDownloadView -> isShowDownloadView
    java.lang.Boolean isShowInstallView -> isShowInstallView
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadListViewAdapter downloadAdapter -> downloadAdapter
    com.iLoong.launcher.MList.ApkMangerActivity$InstallListViewAdapter installAdapter -> installAdapter
    android.widget.Button butCannelback -> butCannelback
    android.widget.TextView tvTitleInfo -> tvTitleInfo
    android.widget.FrameLayout flDownloadNUllDate -> flDownloadNUllDate
    android.widget.FrameLayout flDownlaodListDate -> flDownlaodListDate
    android.widget.FrameLayout flInstallNUllDate -> flInstallNUllDate
    android.widget.FrameLayout flInstallListDate -> flInstallListDate
    android.widget.ListView lvInstallListView -> lvInstallListView
    android.widget.ListView lvDownloadListView -> lvDownloadListView
    java.util.List DownloadApkList -> DownloadApkList
    java.util.List InstallApkList -> InstallApkList
    long longTime -> longTime
    java.util.List SucessCallbackList -> SucessCallbackList
    java.util.List FailedCallbackList -> FailedCallbackList
    com.iLoong.launcher.MList.MyR R -> R
    java.lang.Class[] mActivityClass -> mActivityClass
    boolean[] visible -> visible
    int index -> index
    com.iLoong.launcher.MList.ApkMangerActivity instance -> instance
    int CurEntryID -> CurEntryID
    android.os.Handler DownloadUpdateHander -> DownloadUpdateHander
    com.iLoong.launcher.MList.DownloadApkItem LongClickListenerDownloadItem -> LongClickListenerDownloadItem
    com.iLoong.launcher.MList.InstallApkItemEx LongClickListenerInstallItem -> LongClickListenerInstallItem
    android.app.Dialog LongClickListenerDialog -> LongClickListenerDialog
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    java.lang.String getVersion(java.lang.String,android.content.Context) -> getVersion
    void InitInstallList() -> InitInstallList
    void InitDownloadList() -> InitDownloadList
    void onStart() -> onStart
    void onRestart() -> onRestart
    boolean StartActivityByPackageName(java.lang.String,android.content.Context) -> StartActivityByPackageName
    void UpdateDownloadFrame() -> UpdateDownloadFrame
    void UpdateInstallFrame() -> UpdateInstallFrame
    void InitDownLoadListView() -> InitDownLoadListView
    void InitInstallListView() -> InitInstallListView
    void DownloadApkNeedDownload() -> DownloadApkNeedDownload
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void initView() -> initView
    void access$0(com.iLoong.launcher.MList.ApkMangerActivity) -> access$0
    void access$1(com.iLoong.launcher.MList.ApkMangerActivity) -> access$1
    boolean access$2(com.iLoong.launcher.MList.ApkMangerActivity,java.lang.String,android.content.Context) -> access$2
    void access$3(com.iLoong.launcher.MList.ApkMangerActivity) -> access$3
    android.support.v4.view.ViewPager access$4(com.iLoong.launcher.MList.ApkMangerActivity) -> access$4
com.iLoong.launcher.MList.ApkMangerActivity$1 -> cb:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iLoong.launcher.MList.ApkMangerActivity$2 -> cc:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$3 -> cd:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
com.iLoong.launcher.MList.ApkMangerActivity$4 -> ce:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    android.widget.RadioButton val$rbutDownload -> b
    android.widget.RadioButton val$rbutInstall -> c
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.iLoong.launcher.MList.ApkMangerActivity$5 -> cf:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$6 -> cg:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack -> ch:
    com.iLoong.launcher.MList.DownloadApkItem CurItem -> a
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void onDoing(java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onRestart(java.lang.String) -> onRestart
    void onStop(java.lang.String) -> onStop
com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBackMsgData -> ci:
    com.iLoong.launcher.MList.DownloadApkItem CurItem -> a
    cool.sdk.download.manager.dl_info DlInfo -> b
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> c
    com.iLoong.launcher.MList.DownloadApkItem getCurItem() -> getCurItem
    cool.sdk.download.manager.dl_info getDlInfo() -> getDlInfo
com.iLoong.launcher.MList.ApkMangerActivity$DownloadControlButClicklister -> cj:
    com.iLoong.launcher.MList.DownloadApkItem CurItem -> a
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadListViewAdapter -> ck:
    java.util.List DownloadApkList -> a
    android.view.LayoutInflater mInflater -> c
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void Update(java.util.List) -> Update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.iLoong.launcher.MList.ApkMangerActivity$DownloadListViewHolder -> cl:
    android.widget.ImageView ivAppIcon -> a
    android.widget.TextView tvAppName -> b
    android.widget.ProgressBar progressBarApp -> c
    android.widget.TextView tvAppSize -> d
    android.widget.TextView TvAppDownloadControl -> e
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> f
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener -> cm:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.iLoong.launcher.MList.ApkMangerActivity access$0(com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener) -> a
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener$1 -> cn:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener$2 -> co:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener$3 -> cp:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$DownloadType -> com.iLoong.launcher.MList.ApkMangerActivity$DownloadType:
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType ON_SUCESS -> ON_SUCESS
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType ON_FAILED -> ON_FAILED
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType ON_DOING -> ON_DOING
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType[] ENUM$VALUES -> ENUM$VALUES
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType[] values() -> values
    com.iLoong.launcher.MList.ApkMangerActivity$DownloadType valueOf(java.lang.String) -> valueOf
com.iLoong.launcher.MList.ApkMangerActivity$GridPagerAdapter -> cq:
    java.lang.String LOG_TAG -> b
    android.view.View viewFrist -> c
    android.view.View viewSecond -> d
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    int getItemPosition(java.lang.Object) -> getItemPosition
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
com.iLoong.launcher.MList.ApkMangerActivity$InstallControlButClicklister -> cr:
    com.iLoong.launcher.MList.InstallApkItemEx CurItem -> a
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$InstallListViewAdapter -> cs:
    java.util.List InstallApkList -> a
    android.view.LayoutInflater mInflater -> c
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> b
    void Update(java.util.List) -> Update
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.iLoong.launcher.MList.ApkMangerActivity$InstallListViewHolder -> ct:
    android.widget.ImageView ivAppIcon -> a
    android.widget.TextView tvAppName -> b
    android.widget.TextView tvAppVersion -> c
    android.widget.TextView tvAppSize -> d
    android.widget.TextView TvAppInstallControl -> e
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> f
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener -> cu:
    com.iLoong.launcher.MList.ApkMangerActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    com.iLoong.launcher.MList.ApkMangerActivity access$0(com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener) -> a
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener$1 -> cv:
    com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener$2 -> cw:
    com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener$3 -> cx:
    com.iLoong.launcher.MList.ApkMangerActivity$InstallOnItemLongClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.iLoong.launcher.MList.BrowerOperation -> com.iLoong.launcher.MList.BrowerOperation:
com.iLoong.launcher.MList.DownloadApkItem -> com.iLoong.launcher.MList.DownloadApkItem:
    java.lang.String PackageName -> PackageName
    android.graphics.drawable.Drawable IconImgSrc -> IconImgSrc
    java.lang.String AppName -> AppName
    java.lang.Long CurSize -> CurSize
    java.lang.Long TotalSize -> TotalSize
    int DownLoadState -> DownLoadState
    com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack downloadCallback -> downloadCallback
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    android.graphics.drawable.Drawable getIconImgSrc() -> getIconImgSrc
    void setIconImgSrc(android.graphics.drawable.Drawable) -> setIconImgSrc
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.Long getCurSize() -> getCurSize
    void setCurSize(java.lang.Long) -> setCurSize
    java.lang.Long getTotalSize() -> getTotalSize
    void setTotalSize(java.lang.Long) -> setTotalSize
    int getDownLoadState() -> getDownLoadState
    void setDownLoadState(int) -> setDownLoadState
    com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack getDownloadCallback() -> getDownloadCallback
    void setDownloadCallback(com.iLoong.launcher.MList.ApkMangerActivity$DownLoadCallBack) -> setDownloadCallback
com.iLoong.launcher.MList.InstallApkItemEx -> com.iLoong.launcher.MList.InstallApkItemEx:
    java.lang.String PackageName -> PackageName
    android.graphics.drawable.Drawable IconImgSrc -> IconImgSrc
    java.lang.String AppName -> AppName
    java.lang.Long appSize -> appSize
    java.lang.String AppVersion -> AppVersion
    int InstallState -> InstallState
    int getInstallState() -> getInstallState
    void setInstallState(int) -> setInstallState
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    android.graphics.drawable.Drawable getIconImgSrc() -> getIconImgSrc
    void setIconImgSrc(android.graphics.drawable.Drawable) -> setIconImgSrc
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getAppVersion() -> getAppVersion
    void setAppVersion(java.lang.String) -> setAppVersion
    java.lang.Long getAppSize() -> getAppSize
    void setAppSize(java.lang.Long) -> setAppSize
com.iLoong.launcher.MList.JSClass -> com.iLoong.launcher.MList.JSClass:
    android.webkit.WebView webView -> webView
    android.content.Context context -> context
    com.iLoong.launcher.MList.MeApkDownloadManager MeApkDlMgr -> MeApkDlMgr
    java.lang.String failingUrl -> failingUrl
    java.util.Map infoMap -> infoMap
    android.app.ProgressDialog builder -> builder
    java.lang.String moudleName -> moudleName
    int mDLManagerID -> mDLManagerID
    int mEntryId -> mEntryId
    android.os.Handler MainActivityHandler -> MainActivityHandler
    com.iLoong.launcher.MList.MyR R -> R
    com.iLoong.launcher.MList.MeApkDLShowType curShowType -> curShowType
    com.iLoong.launcher.MList.MeApkDownloadCallBack WebMainApkDownloadCallBack -> WebMainApkDownloadCallBack
    void initPackageInfo(android.content.Context) -> initPackageInfo
    java.lang.String getVersion(java.lang.String,android.content.Context) -> getVersion
    void appInstallInfoChange(android.content.Context,java.lang.String,int) -> appInstallInfoChange
    int checkAppIsInstall(java.lang.String) -> checkAppIsInstall
    android.content.pm.PackageInfo getAppPackageInfo(java.lang.String) -> getAppPackageInfo
    boolean invokeJSMethod(java.lang.String,java.lang.Object[]) -> invokeJSMethod
    int getVersionCode(java.lang.String,android.content.Context) -> getVersionCode
    int AppQueryState(java.lang.String) -> AppQueryState
    void subWebviewBack() -> subWebviewBack
    void OpenSubWebview(java.lang.String) -> OpenSubWebview
    int DownLoadingApkCount() -> DownLoadingApkCount
    void setDialog() -> setDialog
    void canelDialog() -> canelDialog
    boolean IsForegroundRunning(android.content.Context) -> IsForegroundRunning
    void DownloadApkNeedDownload() -> DownloadApkNeedDownload
    int DownloadApk(java.lang.String,java.lang.String) -> DownloadApk
    void DownloadStop(java.lang.String) -> DownloadStop
    java.lang.String DownloadQueryInfo(java.lang.String) -> DownloadQueryInfo
    java.lang.String AppQueryInfo(java.lang.String) -> AppQueryInfo
    java.lang.String AppQueryAll() -> AppQueryAll
    boolean loadUrl(java.lang.String) -> loadUrl
    void alert(java.lang.String) -> alert
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.Boolean IsNetworkAvailableLocal(android.content.Context) -> IsNetworkAvailableLocal
    int IsNetworkAvailable() -> IsNetworkAvailable
    java.lang.Boolean IsStorageCanUsed() -> IsStorageCanUsed
    void AppStart(java.lang.String) -> AppStart
    int AppInstall(java.lang.String) -> AppInstall
    void SetBackgroundWithWallpaper() -> SetBackgroundWithWallpaper
    java.lang.String GetSysLanguage() -> GetSysLanguage
    void DlMgrOpen() -> DlMgrOpen
    void Refresh_Retry() -> Refresh_Retry
    void Set_Network() -> Set_Network
    int googlePalyIsInstall() -> googlePalyIsInstall
    void LoadUrlByBrowser(java.lang.String) -> LoadUrlByBrowser
    void LoadUrlByBrowserByGP(java.lang.String) -> LoadUrlByBrowserByGP
    boolean startAppStoreDownload(java.lang.String) -> startAppStoreDownload
    java.util.List getAllInstallBrowser(android.content.pm.PackageManager) -> getAllInstallBrowser
    void choiceBrowserToVisitUrl(android.content.Context,java.lang.String,android.content.pm.PackageManager) -> choiceBrowserToVisitUrl
    android.content.pm.ResolveInfo getUserDefinitionBrowers(android.content.pm.PackageManager) -> getUserDefinitionBrowers
    void doDefaultBrowser(android.content.Context,java.lang.String) -> doDefaultBrowser
    void gotoUrl(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PackageManager) -> gotoUrl
    java.lang.String h01() -> h01
    int h02() -> h02
    java.lang.String h03() -> h03
    java.lang.String h04() -> h04
    java.lang.String h05() -> h05
    java.lang.String h06() -> h06
    java.lang.String h07() -> h07
    java.lang.String h08() -> h08
    java.lang.String h09() -> h09
    java.lang.String h10() -> h10
    java.lang.String h11() -> h11
    int h12() -> h12
    int h13() -> h13
    java.lang.String h14() -> h14
    java.lang.String h16() -> h16
    java.lang.String h18() -> h18
    java.lang.String h19() -> h19
    java.lang.String a00() -> a00
    java.lang.String a01() -> a01
    java.lang.String a02() -> a02
    java.lang.String a03() -> a03
    java.lang.String a04() -> a04
    java.lang.String a05() -> a05
    java.lang.String a06() -> a06
    java.lang.String a07() -> a07
    java.lang.String a08() -> a08
    java.lang.String a09() -> a09
    java.lang.String a10() -> a10
    java.lang.String a11() -> a11
    java.lang.String a12() -> a12
    java.lang.String a13() -> a13
    java.lang.String a14() -> a14
    java.lang.String a15() -> a15
    java.lang.String a16() -> a16
    java.lang.String a17() -> a17
    java.lang.String a18() -> a18
    java.lang.String a19() -> a19
    java.lang.String a20() -> a20
    java.lang.String a21() -> a21
com.iLoong.launcher.MList.JSClass$1 -> cy:
    com.iLoong.launcher.MList.JSClass this$0 -> a
    void onSuccess(java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onStop(java.lang.String) -> onStop
    void onRestart(java.lang.String) -> onRestart
com.iLoong.launcher.MList.JSClass$2 -> cz:
    com.iLoong.launcher.MList.JSClass this$0 -> a
    java.lang.String val$pkgName -> b
    java.lang.String val$json -> c
    void run() -> run
    com.iLoong.launcher.MList.JSClass access$0(com.iLoong.launcher.MList.JSClass$2) -> a
com.iLoong.launcher.MList.JSClass$2$1 -> da:
    com.iLoong.launcher.MList.JSClass$2 this$1 -> a
    java.lang.String val$pkgName -> b
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
com.iLoong.launcher.MList.JSClass$2$2 -> db:
    com.iLoong.launcher.MList.JSClass$2 this$1 -> a
    java.lang.String val$pkgName -> b
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
com.iLoong.launcher.MList.JSClass$3 -> dc:
    com.iLoong.launcher.MList.JSClass this$0 -> a
    java.lang.String val$pkgName -> b
    void run() -> run
com.iLoong.launcher.MList.KillProcessTimerTask -> com.iLoong.launcher.MList.KillProcessTimerTask:
    android.content.Context mContext -> mContext
    void run() -> run
com.iLoong.launcher.MList.LoadURL -> com.iLoong.launcher.MList.LoadURL:
    com.iLoong.launcher.MList.PhoneInfoma phoneInfoma -> phoneInfoma
    int MicrVersion -> MicrVersion
    java.lang.String loadUrl(android.content.Context) -> loadUrl
    java.lang.String BaseDetalFolder64Str(android.content.Context,java.lang.String) -> BaseDetalFolder64Str
    java.lang.String Base64Str(android.content.Context,int) -> Base64Str
    java.lang.String hexStr2Str(java.lang.String) -> hexStr2Str
    void initPhoneInfoma(android.content.Context) -> initPhoneInfoma
com.iLoong.launcher.MList.MELOG -> com.iLoong.launcher.MList.MELOG:
    boolean bEnableLog -> bEnableLog
    boolean bIsCheckOpenLog -> bIsCheckOpenLog
    void setEnableLog(boolean) -> setEnableLog
    boolean isOpenLog() -> isOpenLog
    int v(java.lang.String,java.lang.String) -> v
    int d(java.lang.String,java.lang.String) -> d
    int i(java.lang.String,java.lang.String) -> i
    int w(java.lang.String,java.lang.String) -> w
    int e(java.lang.String,java.lang.String) -> e
com.iLoong.launcher.MList.MELOG$1 -> dd:
    void run() -> run
com.iLoong.launcher.MList.MEServiceActivity -> com.iLoong.launcher.MList.MEServiceActivity:
    boolean[] visible -> visible
    int index -> index
    int MEShowType -> MEShowType
    android.app.Dialog ad -> ad
    int[] $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType -> $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onMeApkOnPkgUninstall(android.content.Intent) -> onMeApkOnPkgUninstall
    void onMeApkOnPkgInstalled(android.content.Intent) -> onMeApkOnPkgInstalled
    void onMePushShowType(android.content.Intent) -> onMePushShowType
    void onMEApkOnDownloading(android.content.Intent) -> onMEApkOnDownloading
    void onMEApkOnSucessEx(android.content.Intent) -> onMEApkOnSucessEx
    void onMEApkOnSucess(android.content.Intent) -> onMEApkOnSucess
    void onMEApkReStartByEntryID(android.content.Intent) -> onMEApkReStartByEntryID
    void onMEApkReStartAll(android.content.Intent) -> onMEApkReStartAll
    void onMEApkOnNotifyReStart(android.content.Intent) -> onMEApkOnNotifyReStart
    void onMEShowType(android.content.Intent) -> onMEShowType
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int[] $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType() -> $SWITCH_TABLE$com$iLoong$launcher$MList$MeServiceType
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg -> de:
    android.content.Context mContext -> a
    boolean IsShowCanel -> b
    com.iLoong.launcher.MList.MyR MeR -> c
    android.view.View cancel -> d
    android.view.View update -> e
    android.view.View$OnClickListener listener -> f
    com.iLoong.launcher.MList.MEServiceActivity this$0 -> g
    void onCreate(android.os.Bundle) -> onCreate
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.iLoong.launcher.MList.MEServiceActivity access$0(com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg) -> a
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1 -> df:
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg this$1 -> a
    void onClick(android.view.View) -> onClick
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg access$0(com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1) -> a
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1$1 -> dg:
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$1 this$2 -> a
    void run() -> run
com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg$2 -> dh:
    com.iLoong.launcher.MList.MEServiceActivity$MeDisclaimeDlg this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.iLoong.launcher.MList.MainActivity -> com.iLoong.launcher.MList.MainActivity:
    boolean isNeedClearHistory -> isNeedClearHistory
    java.lang.String reloadUrl -> reloadUrl
    boolean flag -> flag
    boolean flagError -> flagError
    com.iLoong.launcher.MList.JSClass mainJsClass -> mainJsClass
    com.iLoong.launcher.MList.JSClass subJsCalss -> subJsCalss
    android.webkit.WebView mainWebView -> mainWebView
    android.webkit.WebView subWebView -> subWebView
    android.view.View MainFrameWebview -> MainFrameWebview
    android.view.View SubFrameWebview -> SubFrameWebview
    boolean isenable1 -> isenable1
    boolean isenable2 -> isenable2
    boolean isenable3 -> isenable3
    boolean isenable4 -> isenable4
    int app_id -> app_id
    com.iLoong.launcher.MList.MainActivity instance -> instance
    byte[] UPath -> UPath
    boolean isExit -> isExit
    java.lang.String url -> url
    java.lang.String strAction -> strAction
    com.iLoong.launcher.MList.MyR R -> R
    int openSubWebView -> openSubWebView
    int subWebViewBackSoftKey -> subWebViewBackSoftKey
    int mainWebViewBackSoftKey -> mainWebViewBackSoftKey
    int setBackgroundWithWallpaper -> setBackgroundWithWallpaper
    android.os.Handler mHandler -> mHandler
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    void LoadMiroEntryUrl(java.lang.String,boolean) -> LoadMiroEntryUrl
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean SubWebViewOnBackListener() -> SubWebViewOnBackListener
    boolean MainWebViewOnBackListener() -> MainWebViewOnBackListener
    void bindJsClass(com.iLoong.launcher.MList.JSClass,android.webkit.WebView) -> bindJsClass
    void setConfigCallback(android.view.WindowManager) -> setConfigCallback
    void access$0(boolean) -> access$0
    boolean access$1(com.iLoong.launcher.MList.MainActivity) -> access$1
    boolean access$2(com.iLoong.launcher.MList.MainActivity) -> access$2
    boolean access$3() -> access$3
com.iLoong.launcher.MList.MainActivity$1 -> di:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iLoong.launcher.MList.MainActivity$2 -> dj:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
com.iLoong.launcher.MList.MainActivity$3 -> dk:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
com.iLoong.launcher.MList.MainActivity$4 -> dl:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    com.iLoong.launcher.MList.JSClass val$jsClass -> b
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.iLoong.launcher.MList.MainActivity$5 -> dm:
    com.iLoong.launcher.MList.MainActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.iLoong.launcher.MList.Main_FirstActivity -> com.iLoong.launcher.MList.Main_FirstActivity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.Main_FourthActicity -> com.iLoong.launcher.MList.Main_FourthActicity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.Main_SecondActivity -> com.iLoong.launcher.MList.Main_SecondActivity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.Main_ThreeActivity -> com.iLoong.launcher.MList.Main_ThreeActivity:
    int app_id -> app_id
    int getId() -> getId
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.iLoong.launcher.MList.MceInfo -> com.iLoong.launcher.MList.MceInfo:
    java.lang.String h01 -> h01
    int h02 -> h02
    java.lang.String h03 -> h03
    java.lang.String h04 -> h04
    java.lang.String h05 -> h05
    java.lang.String h06 -> h06
    java.lang.String h07 -> h07
    java.lang.String h08 -> h08
    java.lang.String h09 -> h09
    java.lang.String h10 -> h10
    java.lang.String h11 -> h11
    int h12 -> h12
    int h13 -> h13
    java.lang.String h14 -> h14
    java.lang.String h16 -> h16
    java.lang.String h18 -> h18
    java.lang.String h19 -> h19
    com.iLoong.launcher.MList.MceInfo mceInfo -> mceInfo
    com.iLoong.launcher.MList.MceInfo instance(android.content.Context) -> instance
    java.lang.String localeGetSysLanguage(android.content.Context) -> localeGetSysLanguage
    java.lang.String getH01() -> getH01
    int getH02() -> getH02
    java.lang.String getH03() -> getH03
    java.lang.String getH04() -> getH04
    java.lang.String getH05() -> getH05
    java.lang.String getH06() -> getH06
    java.lang.String getH07() -> getH07
    java.lang.String getH08() -> getH08
    java.lang.String getH09() -> getH09
    java.lang.String getH10() -> getH10
    java.lang.String getH11() -> getH11
    int getH12() -> getH12
    int getH13() -> getH13
    java.lang.String getH14() -> getH14
    java.lang.String getH16() -> getH16
    java.lang.String getH18() -> getH18
    java.lang.String getH19() -> getH19
com.iLoong.launcher.MList.MeActiveCallback -> com.iLoong.launcher.MList.MeActiveCallback:
    void NoifySatrtAction(java.lang.String) -> NoifySatrtAction
    void NotifyDelAction(java.lang.String) -> NotifyDelAction
    void NotifyInstallSucessAction(java.lang.String) -> NotifyInstallSucessAction
    void NotifyUninstallApkAction(java.lang.String) -> NotifyUninstallApkAction
com.iLoong.launcher.MList.MeApkDLShowType -> com.iLoong.launcher.MList.MeApkDLShowType:
    com.iLoong.launcher.MList.MeApkDLShowType None -> None
    com.iLoong.launcher.MList.MeApkDLShowType WebviewMain -> WebviewMain
    com.iLoong.launcher.MList.MeApkDLShowType WebviewSub -> WebviewSub
    com.iLoong.launcher.MList.MeApkDLShowType DownloadManagerActivity -> DownloadManagerActivity
    com.iLoong.launcher.MList.MeApkDLShowType Notification -> Notification
    com.iLoong.launcher.MList.MeApkDLShowType NeedReStartDownload -> NeedReStartDownload
    com.iLoong.launcher.MList.MeApkDLShowType[] ENUM$VALUES -> ENUM$VALUES
    com.iLoong.launcher.MList.MeApkDLShowType[] values() -> values
    com.iLoong.launcher.MList.MeApkDLShowType valueOf(java.lang.String) -> valueOf
com.iLoong.launcher.MList.MeApkDlMgrBuilder -> com.iLoong.launcher.MList.MeApkDlMgrBuilder:
    java.util.Map MeApkDownloadManagerMap -> MeApkDownloadManagerMap
    com.iLoong.launcher.MList.MeApkDownloadManager Build(android.content.Context,java.lang.String,int) -> Build
    com.iLoong.launcher.MList.MeApkDownloadManager GetMeApkDownloadManager(int) -> GetMeApkDownloadManager
    java.util.Map GetAllMeApkDownloadManager() -> GetAllMeApkDownloadManager
com.iLoong.launcher.MList.MeApkDlNotifyManager -> com.iLoong.launcher.MList.MeApkDlNotifyManager:
    com.iLoong.launcher.MList.MeApkDlNotifyManager instance -> instance
    int meEntryNotifyID -> meEntryNotifyID
    int meApkNotifyID -> meApkNotifyID
    com.iLoong.launcher.MList.MyR MeR -> MeR
    android.content.Context context -> context
    com.iLoong.launcher.MList.MeApkDlNotifyManager getInstance(android.content.Context) -> getInstance
    com.iLoong.launcher.MList.MeApkDownloadManager GetMeApkMgr(int) -> GetMeApkMgr
    java.lang.String getApkIconPathByPkgname(com.iLoong.launcher.MList.MeApkDownloadManager,java.lang.String) -> getApkIconPathByPkgname
    android.graphics.Bitmap getApkIconByPkgname(com.iLoong.launcher.MList.MeApkDownloadManager,java.lang.String,android.content.res.Resources,int) -> getApkIconByPkgname
    android.graphics.Bitmap getApkIconByPath(java.lang.String) -> getApkIconByPath
    boolean StartActivityByPackageName(java.lang.String,android.content.Context) -> StartActivityByPackageName
    void showOnMeApkDlStartNotify(int,java.lang.String,int) -> showOnMeApkDlStartNotify
    void CanelOnMeApkDlStartNotify(int) -> CanelOnMeApkDlStartNotify
    void onMeApkDlStart(int,java.lang.String,java.lang.String) -> onMeApkDlStart
    void onMeApkInstalled(int,java.lang.String,java.lang.String) -> onMeApkInstalled
    void onMeApkUninstallCanel(java.lang.String) -> onMeApkUninstallCanel
    void onMeApkDlSucess(int,java.lang.String,java.lang.String,cool.sdk.download.manager.dl_info) -> onMeApkDlSucess
    void onMeApkDlSucessEx(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onMeApkDlSucessEx
    void onMeApkDlDel(int,java.lang.String,java.lang.String) -> onMeApkDlDel
    void onMeApkDlStop(int,java.lang.String,java.lang.String) -> onMeApkDlStop
    void onMeApkDlFailed(int,java.lang.String,java.lang.String,cool.sdk.download.manager.dl_info) -> onMeApkDlFailed
com.iLoong.launcher.MList.MeApkDlNotifyManager$1 -> dn:
    com.iLoong.launcher.MList.MeApkDlNotifyManager this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MeApkDownloadCallBack -> com.iLoong.launcher.MList.MeApkDownloadCallBack:
    com.iLoong.launcher.MList.MeApkDLShowType ShowType -> ShowType
    void onDoing(java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onRestart(java.lang.String) -> onRestart
    void onStop(java.lang.String) -> onStop
com.iLoong.launcher.MList.MeApkDownloadManager -> com.iLoong.launcher.MList.MeApkDownloadManager:
    cool.sdk.download.CoolDLMgr iconDlMgr -> iconDlMgr
    cool.sdk.download.CoolDLMgr apkDlMgr -> apkDlMgr
    int entryId -> entryId
    java.util.Map MeApkDownloadTaskMap -> MeApkDownloadTaskMap
    java.util.Map MeAddActiveCallBackMap -> MeAddActiveCallBackMap
    android.content.Context context -> context
    java.lang.String moudleName -> moudleName
    cool.sdk.download.CoolDLMgr GetSdkApkDlMgr() -> GetSdkApkDlMgr
    cool.sdk.download.CoolDLMgr GetSdkIconMgr() -> GetSdkIconMgr
    cool.sdk.download.manager.dl_info GetInfoByPkgName(java.lang.String) -> GetInfoByPkgName
    void StartDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> StartDownload
    void ReStartDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> ReStartDownload
    void AddCallback(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> AddCallback
    void StopDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> StopDownload
    void DelDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> DelDownload
    void ApkInstalled(java.lang.String) -> ApkInstalled
    void ApkUninstall(java.lang.String) -> ApkUninstall
    int getVersionCode(java.lang.String,android.content.Context) -> getVersionCode
    int GetUninstallApkCount() -> GetUninstallApkCount
    int GetDownLoadingApkCount() -> GetDownLoadingApkCount
    int access$0(com.iLoong.launcher.MList.MeApkDownloadManager) -> access$0
    cool.sdk.download.CoolDLMgr access$1(com.iLoong.launcher.MList.MeApkDownloadManager) -> access$1
com.iLoong.launcher.MList.MeApkDownloadManager$MeApkDownloadTask -> do:
    cool.sdk.download.manager.dl_task CurSDKDLTask -> a
    com.iLoong.launcher.MList.MeCoolDLCallback CurCallback -> b
    com.iLoong.launcher.MList.MeApkDownloadManager this$0 -> c
    void MeApkReStartDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> MeApkReStartDownload
    void SetTaskCallback(com.iLoong.launcher.MList.MeApkDLShowType,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> SetTaskCallback
    void MeApkStopDownload(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> MeApkStopDownload
com.iLoong.launcher.MList.MeCoolDLCallback -> dp:
    java.util.Map MeApkDlCallbackMap -> a
    android.content.Context context -> b
    int entryID -> c
    java.lang.String apkMoudleName -> d
    void AddMECallBack(com.iLoong.launcher.MList.MeApkDLShowType,com.iLoong.launcher.MList.MeApkDownloadCallBack) -> AddMECallBack
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onstart(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> onstart
    void onRestart(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> onRestart
    void onStop(com.iLoong.launcher.MList.MeApkDLShowType,java.lang.String) -> onStop
com.iLoong.launcher.MList.MeDLProtectionService -> com.iLoong.launcher.MList.MeDLProtectionService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.iLoong.launcher.MList.MeDLProtectionService$1 -> dq:
    com.iLoong.launcher.MList.MeDLProtectionService this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MeGeneralMethod -> com.iLoong.launcher.MList.MeGeneralMethod:
    boolean InstallApk(android.content.Context,java.lang.String) -> InstallApk
    boolean IsForegroundRunning(android.content.Context) -> IsForegroundRunning
    boolean IsDownloadTaskRunning(android.content.Context) -> IsDownloadTaskRunning
    boolean IsWifiConnected(android.content.Context) -> IsWifiConnected
com.iLoong.launcher.MList.MeServiceType -> com.iLoong.launcher.MList.MeServiceType:
    com.iLoong.launcher.MList.MeServiceType NONE -> NONE
    com.iLoong.launcher.MList.MeServiceType MEShowType -> MEShowType
    com.iLoong.launcher.MList.MeServiceType MEApkOnDownloading -> MEApkOnDownloading
    com.iLoong.launcher.MList.MeServiceType MeApkOnPkgInstalled -> MeApkOnPkgInstalled
    com.iLoong.launcher.MList.MeServiceType MeApkOnPkgUninstall -> MeApkOnPkgUninstall
    com.iLoong.launcher.MList.MeServiceType MEApkOnNotifyReStart -> MEApkOnNotifyReStart
    com.iLoong.launcher.MList.MeServiceType MEApkReStartByEntryID -> MEApkReStartByEntryID
    com.iLoong.launcher.MList.MeServiceType MEApkReStartAll -> MEApkReStartAll
    com.iLoong.launcher.MList.MeServiceType MEApkOnNotifyInstall -> MEApkOnNotifyInstall
    com.iLoong.launcher.MList.MeServiceType MEApkOnSucess -> MEApkOnSucess
    com.iLoong.launcher.MList.MeServiceType MEApkOnSucessEx -> MEApkOnSucessEx
    com.iLoong.launcher.MList.MeServiceType MEApkOnFailed -> MEApkOnFailed
    com.iLoong.launcher.MList.MeServiceType MEApkOnStop -> MEApkOnStop
    com.iLoong.launcher.MList.MeServiceType MeApkOnInstalled -> MeApkOnInstalled
    com.iLoong.launcher.MList.MeServiceType MePushShowType -> MePushShowType
    com.iLoong.launcher.MList.MeServiceType[] ENUM$VALUES -> ENUM$VALUES
    com.iLoong.launcher.MList.MeServiceType[] values() -> values
    com.iLoong.launcher.MList.MeServiceType valueOf(java.lang.String) -> valueOf
com.iLoong.launcher.MList.MyListView -> com.iLoong.launcher.MList.MyListView:
    void onMeasure(int,int) -> onMeasure
com.iLoong.launcher.MList.MyR -> com.iLoong.launcher.MList.MyR:
    com.iLoong.launcher.MList.MyR R -> R
    com.iLoong.launcher.MList.MyR$color_t color -> color
    com.iLoong.launcher.MList.MyR$dimen_t dimen -> dimen
    com.iLoong.launcher.MList.MyR$drawable_t drawable -> drawable
    com.iLoong.launcher.MList.MyR$id_t id -> id
    com.iLoong.launcher.MList.MyR$layout_t layout -> layout
    com.iLoong.launcher.MList.MyR$string_t string -> string
    boolean InflateMyR(android.content.Context,java.lang.Class,java.lang.Object,java.lang.String) -> InflateMyR
    com.iLoong.launcher.MList.MyR getMyR(android.content.Context) -> getMyR
com.iLoong.launcher.MList.MyR$color_t -> com.iLoong.launcher.MList.MyR$color_t:
    int cool_ml_blue_total_tab_top_line1 -> cool_ml_blue_total_tab_top_line1
    int cool_ml_page_header_back_color -> cool_ml_page_header_back_color
    int cool_ml_page_header_bottom_line -> cool_ml_page_header_bottom_line
    int cool_ml_white_skin_title_color -> cool_ml_white_skin_title_color
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$dimen_t -> com.iLoong.launcher.MList.MyR$dimen_t:
    int cool_ml_ToolBar_height -> cool_ml_ToolBar_height
    int cool_ml_page_header_back_padding -> cool_ml_page_header_back_padding
    int cool_ml_page_header_back_top_padding -> cool_ml_page_header_back_top_padding
    int cool_ml_page_header_back_width -> cool_ml_page_header_back_width
    int cool_ml_textsize_b -> cool_ml_textsize_b
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$drawable_t -> com.iLoong.launcher.MList.MyR$drawable_t:
    int cool_ml_alert_list_bg -> cool_ml_alert_list_bg
    int cool_ml_bg_item_bottom_normal -> cool_ml_bg_item_bottom_normal
    int cool_ml_bg_item_top_normal -> cool_ml_bg_item_top_normal
    int cool_ml_bottom_pressed -> cool_ml_bottom_pressed
    int cool_ml_corner_list_bg -> cool_ml_corner_list_bg
    int cool_ml_cutline -> cool_ml_cutline
    int cool_ml_discalmer_bg -> cool_ml_discalmer_bg
    int cool_ml_discalmer_del -> cool_ml_discalmer_del
    int cool_ml_discalmer_icon -> cool_ml_discalmer_icon
    int cool_ml_divider -> cool_ml_divider
    int cool_ml_download_install -> cool_ml_download_install
    int cool_ml_icon_btn_list_download -> cool_ml_icon_btn_list_download
    int cool_ml_icon_btn_list_download_pause -> cool_ml_icon_btn_list_download_pause
    int cool_ml_icon_btn_list_install -> cool_ml_icon_btn_list_install
    int cool_ml_icon_btn_list_pause -> cool_ml_icon_btn_list_pause
    int cool_ml_icon_btn_list_run -> cool_ml_icon_btn_list_run
    int cool_ml_icon_btn_list_waiting_download -> cool_ml_icon_btn_list_waiting_download
    int cool_ml_icon_listview_bg -> cool_ml_icon_listview_bg
    int cool_ml_know -> cool_ml_know
    int cool_ml_know_small -> cool_ml_know_small
    int cool_ml_ku_store -> cool_ml_ku_store
    int cool_ml_ku_store_small -> cool_ml_ku_store_small
    int cool_ml_list_item_color -> cool_ml_list_item_color
    int cool_ml_no_data -> cool_ml_no_data
    int cool_ml_normal_list_selector -> cool_ml_normal_list_selector
    int cool_ml_notify -> cool_ml_notify
    int cool_ml_notify_small -> cool_ml_notify_small
    int cool_ml_page_header_back_press -> cool_ml_page_header_back_press
    int cool_ml_pageselect_button_underline -> cool_ml_pageselect_button_underline
    int cool_ml_progress_bg -> cool_ml_progress_bg
    int cool_ml_software -> cool_ml_software
    int cool_ml_software_small -> cool_ml_software_small
    int cool_ml_toolbar_download_btn -> cool_ml_toolbar_download_btn
    int cool_ml_toolbar_downloading_btn -> cool_ml_toolbar_downloading_btn
    int cool_ml_toolbar_downloading_btn_pressed -> cool_ml_toolbar_downloading_btn_pressed
    int cool_ml_toolbar_search_btn_pressed -> cool_ml_toolbar_search_btn_pressed
    int cool_ml_underline_press -> cool_ml_underline_press
    int cool_ml_underline_unpress -> cool_ml_underline_unpress
    int cool_ml_webview_loading_press -> cool_ml_webview_loading_press
    int cool_ml_white_skin_top_line_img -> cool_ml_white_skin_top_line_img
    int cool_ml_white_total_tab_bg -> cool_ml_white_total_tab_bg
    int cool_ml_wonderful_game -> cool_ml_wonderful_game
    int cool_ml_wonderful_game_small -> cool_ml_wonderful_game_small
    int cool_ml_you_may_love -> cool_ml_you_may_love
    int cool_ml_you_may_love_small -> cool_ml_you_may_love_small
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$id_t -> com.iLoong.launcher.MList.MyR$id_t:
    int cool_ml_InstallListTextView1 -> cool_ml_InstallListTextView1
    int cool_ml_InstallListTextView2 -> cool_ml_InstallListTextView2
    int cool_ml_appListTextView1 -> cool_ml_appListTextView1
    int cool_ml_appListTextView2 -> cool_ml_appListTextView2
    int cool_ml_back_text -> cool_ml_back_text
    int cool_ml_discalmer_del -> cool_ml_discalmer_del
    int cool_ml_disclaimer_update -> cool_ml_disclaimer_update
    int cool_ml_flDownloadList -> cool_ml_flDownloadList
    int cool_ml_flDownloadNULLData -> cool_ml_flDownloadNULLData
    int cool_ml_flInsatllList -> cool_ml_flInsatllList
    int cool_ml_flInsatllNULLData -> cool_ml_flInsatllNULLData
    int cool_ml_header_nav_layout_bottom_line -> cool_ml_header_nav_layout_bottom_line
    int cool_ml_ivProcessImg -> cool_ml_ivProcessImg
    int cool_ml_linearLayout1 -> cool_ml_linearLayout1
    int cool_ml_liner01 -> cool_ml_liner01
    int cool_ml_lvDownload -> cool_ml_lvDownload
    int cool_ml_lvInstall -> cool_ml_lvInstall
    int cool_ml_mainwebviewframe -> cool_ml_mainwebviewframe
    int cool_ml_manager_appIco -> cool_ml_manager_appIco
    int cool_ml_manager_appIco1 -> cool_ml_manager_appIco1
    int cool_ml_manager_appName -> cool_ml_manager_appName
    int cool_ml_manager_appName1 -> cool_ml_manager_appName1
    int cool_ml_manager_appSize -> cool_ml_manager_appSize
    int cool_ml_manager_appSize1 -> cool_ml_manager_appSize1
    int cool_ml_manager_appVersion1 -> cool_ml_manager_appVersion1
    int cool_ml_manager_button -> cool_ml_manager_button
    int cool_ml_manager_button1 -> cool_ml_manager_button1
    int cool_ml_manager_progressBar -> cool_ml_manager_progressBar
    int cool_ml_nav_layout_top_img -> cool_ml_nav_layout_top_img
    int cool_ml_nav_layout_top_line1 -> cool_ml_nav_layout_top_line1
    int cool_ml_notification_image -> cool_ml_notification_image
    int cool_ml_notification_text -> cool_ml_notification_text
    int cool_ml_notification_title -> cool_ml_notification_title
    int cool_ml_page_header -> cool_ml_page_header
    int cool_ml_rbutDownloadPage -> cool_ml_rbutDownloadPage
    int cool_ml_rbutInstallPage -> cool_ml_rbutInstallPage
    int cool_ml_rela01 -> cool_ml_rela01
    int cool_ml_rela02 -> cool_ml_rela02
    int cool_ml_subwebviewframe -> cool_ml_subwebviewframe
    int cool_ml_themeGridPager -> cool_ml_themeGridPager
    int cool_ml_title_text -> cool_ml_title_text
    int cool_ml_toolbar_downcount -> cool_ml_toolbar_downcount
    int cool_ml_toolbar_download_Layout -> cool_ml_toolbar_download_Layout
    int cool_ml_toolbar_download_img -> cool_ml_toolbar_download_img
    int cool_ml_toolbar_search_img -> cool_ml_toolbar_search_img
    int cool_ml_webView1 -> cool_ml_webView1
    int cool_ml_webView2 -> cool_ml_webView2
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$layout_t -> com.iLoong.launcher.MList.MyR$layout_t:
    int cool_ml_activity_main -> cool_ml_activity_main
    int cool_ml_apk_download_view -> cool_ml_apk_download_view
    int cool_ml_apk_install_view -> cool_ml_apk_install_view
    int cool_ml_apk_manager -> cool_ml_apk_manager
    int cool_ml_disclaimer_dialog -> cool_ml_disclaimer_dialog
    int cool_ml_dwonload_notification -> cool_ml_dwonload_notification
    int cool_ml_manager_download_listview -> cool_ml_manager_download_listview
    int cool_ml_manager_install_listview -> cool_ml_manager_install_listview
    int cool_ml_onlongclick_listview -> cool_ml_onlongclick_listview
    int cool_ml_onlongclick_listview_install -> cool_ml_onlongclick_listview_install
    int cool_ml_page_header -> cool_ml_page_header
    int cool_ml_webview_loading_dlg -> cool_ml_webview_loading_dlg
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyR$string_t -> com.iLoong.launcher.MList.MyR$string_t:
    int cool_ml_MeIcon_cannot_uninstall -> cool_ml_MeIcon_cannot_uninstall
    int cool_ml_MeIcon_uninstall -> cool_ml_MeIcon_uninstall
    int cool_ml_MeIcon_uninstalling -> cool_ml_MeIcon_uninstalling
    int cool_ml_app_name1 -> cool_ml_app_name1
    int cool_ml_app_name2 -> cool_ml_app_name2
    int cool_ml_app_name3 -> cool_ml_app_name3
    int cool_ml_app_name4 -> cool_ml_app_name4
    int cool_ml_confirm_canel -> cool_ml_confirm_canel
    int cool_ml_confirm_content -> cool_ml_confirm_content
    int cool_ml_confirm_ok -> cool_ml_confirm_ok
    int cool_ml_cooee_download_jixu -> cool_ml_cooee_download_jixu
    int cool_ml_cooee_download_quxiao -> cool_ml_cooee_download_quxiao
    int cool_ml_cooee_install_jixu -> cool_ml_cooee_install_jixu
    int cool_ml_cooee_install_quxiao -> cool_ml_cooee_install_quxiao
    int cool_ml_disclaimer_desc -> cool_ml_disclaimer_desc
    int cool_ml_disclaimer_title -> cool_ml_disclaimer_title
    int cool_ml_disclaimer_update -> cool_ml_disclaimer_update
    int cool_ml_dl_failed -> cool_ml_dl_failed
    int cool_ml_dl_failed_text -> cool_ml_dl_failed_text
    int cool_ml_dl_ing -> cool_ml_dl_ing
    int cool_ml_dl_ing_text -> cool_ml_dl_ing_text
    int cool_ml_dl_installed -> cool_ml_dl_installed
    int cool_ml_dl_installed_text -> cool_ml_dl_installed_text
    int cool_ml_dl_stop -> cool_ml_dl_stop
    int cool_ml_dl_stop_text -> cool_ml_dl_stop_text
    int cool_ml_dl_sucess -> cool_ml_dl_sucess
    int cool_ml_dl_sucess_text -> cool_ml_dl_sucess_text
    int cool_ml_donwload_manager -> cool_ml_donwload_manager
    int cool_ml_donwloadorinstall_manager -> cool_ml_donwloadorinstall_manager
    int cool_ml_download_failed -> cool_ml_download_failed
    int cool_ml_download_jixu -> cool_ml_download_jixu
    int cool_ml_download_quxiao -> cool_ml_download_quxiao
    int cool_ml_dummy_button -> cool_ml_dummy_button
    int cool_ml_dummy_content -> cool_ml_dummy_content
    int cool_ml_install_file_not_exsit -> cool_ml_install_file_not_exsit
    int cool_ml_install_jixu -> cool_ml_install_jixu
    int cool_ml_install_manager -> cool_ml_install_manager
    int cool_ml_install_quxiao -> cool_ml_install_quxiao
    int cool_ml_loading_1 -> cool_ml_loading_1
    int cool_ml_more_content -> cool_ml_more_content
    int cool_ml_network_not_available -> cool_ml_network_not_available
    int cool_ml_new_content -> cool_ml_new_content
    int cool_ml_storage_not_available -> cool_ml_storage_not_available
    com.iLoong.launcher.MList.MyR this$0 -> this$0
com.iLoong.launcher.MList.MyReceiver -> com.iLoong.launcher.MList.MyReceiver:
    android.content.Context mContent -> mContent
    java.lang.String pkgName -> pkgName
    boolean IsMeForeground(android.content.Context) -> IsMeForeground
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iLoong.launcher.MList.MyReceiver$1 -> dr:
    com.iLoong.launcher.MList.MyReceiver this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MyReceiver$2 -> ds:
    com.iLoong.launcher.MList.MyReceiver this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.MyReceiver$3 -> dt:
    com.iLoong.launcher.MList.MyReceiver this$0 -> a
    void run() -> run
com.iLoong.launcher.MList.PathUtil -> com.iLoong.launcher.MList.PathUtil:
    java.lang.String myPath -> myPath
    java.lang.String myUrl -> myUrl
    java.lang.String getPathHtmlSdcard() -> getPathHtmlSdcard
    java.lang.String getPathDBSdcard(android.content.Context) -> getPathDBSdcard
    java.lang.String getPathHtmlDownloadUrl() -> getPathHtmlDownloadUrl
    java.lang.String getPathDownloadFolder() -> getPathDownloadFolder
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
com.iLoong.launcher.MList.PhoneInfo -> com.iLoong.launcher.MList.PhoneInfo:
    java.lang.String a00 -> a00
    java.lang.String a01 -> a01
    java.lang.String a02 -> a02
    java.lang.String a03 -> a03
    java.lang.String a04 -> a04
    java.lang.String a05 -> a05
    java.lang.String a06 -> a06
    java.lang.String a07 -> a07
    java.lang.String a08 -> a08
    java.lang.String a09 -> a09
    java.lang.String a10 -> a10
    java.lang.String a11 -> a11
    java.lang.String a12 -> a12
    java.lang.String a13 -> a13
    java.lang.String a14 -> a14
    java.lang.String a15 -> a15
    java.lang.String a16 -> a16
    java.lang.String a17 -> a17
    java.lang.String a19 -> a19
    java.lang.String a18 -> a18
    java.lang.String a20 -> a20
    java.lang.String a21 -> a21
    int width -> width
    int hight -> hight
    com.iLoong.launcher.MList.PhoneInfo phoneInfo -> phoneInfo
    com.iLoong.launcher.MList.PhoneInfo instance(android.content.Context) -> instance
    void initPhoneInfo(android.content.Context) -> initPhoneInfo
    java.lang.String getA00() -> getA00
    java.lang.String getA01() -> getA01
    java.lang.String getA02() -> getA02
    java.lang.String getA03() -> getA03
    java.lang.String getA04() -> getA04
    java.lang.String getA05() -> getA05
    java.lang.String getA06() -> getA06
    java.lang.String getA07() -> getA07
    java.lang.String getA08() -> getA08
    java.lang.String getA09() -> getA09
    java.lang.String getA10() -> getA10
    java.lang.String getA11() -> getA11
    java.lang.String getA12() -> getA12
    java.lang.String getA13() -> getA13
    java.lang.String getA14() -> getA14
    java.lang.String getA15() -> getA15
    java.lang.String getA16() -> getA16
    java.lang.String getA17() -> getA17
    java.lang.String getA18() -> getA18
    java.lang.String getA19() -> getA19
    java.lang.String getA20() -> getA20
    int getWidth() -> getWidth
    int getHight() -> getHight
    java.lang.String getA21() -> getA21
com.iLoong.launcher.MList.PhoneInfoma -> du:
    java.lang.String h1 -> a
    int h2 -> b
    java.lang.String h3 -> c
    java.lang.String h4 -> d
    java.lang.String h5 -> e
    java.lang.String h6 -> f
    java.lang.String h7 -> g
    java.lang.String h8 -> h
    java.lang.String h9 -> i
    java.lang.String h10 -> j
    java.lang.String h11 -> k
    int h12 -> l
com.iLoong.launcher.MList.RijndaelCrypt -> com.iLoong.launcher.MList.RijndaelCrypt:
    java.lang.String TAG -> TAG
    java.lang.String TRANSFORMATION -> TRANSFORMATION
    java.lang.String ALGORITHM -> ALGORITHM
    javax.crypto.Cipher _cipher -> _cipher
    javax.crypto.SecretKey _password -> _password
    javax.crypto.spec.IvParameterSpec _IVParamSpec -> _IVParamSpec
    byte[] IV -> IV
    java.lang.String PWD -> PWD
    byte[] encryptToByteArray(byte[]) -> encryptToByteArray
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String decrypt(byte[]) -> decrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
    void test() -> test
com.iLoong.launcher.MList.SimpleCrypto -> com.iLoong.launcher.MList.SimpleCrypto:
    java.lang.String HEX -> HEX
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] getRawKey(byte[]) -> getRawKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    byte[] decrypt(byte[],byte[]) -> decrypt
    java.lang.String toHex(java.lang.String) -> toHex
    java.lang.String fromHex(java.lang.String) -> fromHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String toHex(byte[]) -> toHex
    void appendHex(java.lang.StringBuffer,byte) -> appendHex
com.iLoong.launcher.MList.Utility -> com.iLoong.launcher.MList.Utility:
    void setListViewHeightBasedOnChildren(android.widget.ListView,int) -> setListViewHeightBasedOnChildren
    int setListViewHeightBasedOnChildren1(android.widget.ListView) -> setListViewHeightBasedOnChildren1
    int googlePalyIsInstall(android.content.Context) -> googlePalyIsInstall
com.iLoong.launcher.MList.WebviewLoadingDlg -> com.iLoong.launcher.MList.WebviewLoadingDlg:
    android.content.Context mContext -> mContext
    android.widget.ImageView view -> view
    android.view.animation.Animation rotateAnimation -> rotateAnimation
    android.app.Dialog ssdialog -> ssdialog
    void onCreate(android.os.Bundle) -> onCreate
    void ShowDlg(android.content.Context) -> ShowDlg
    void CloseDlg() -> CloseDlg
com.kpsh.sdk.KpshActivity -> com.kpsh.sdk.KpshActivity:
    java.lang.Class a -> a
    java.lang.Object b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    void onStart() -> onStart
    void onRestart() -> onRestart
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
com.kpsh.sdk.KpshMsg -> dv:
    int msgId -> a
    java.lang.String msgTitle -> b
    java.lang.String msgBody -> c
    int allowClear -> d
    int allowRing -> e
    int allowVibrate -> f
    void setMsgTitle(java.lang.String) -> setMsgTitle
    void setMsgBody(java.lang.String) -> setMsgBody
    void setMsgId(int) -> setMsgId
    int getMsgId() -> getMsgId
    java.lang.String getMsgTitle() -> getMsgTitle
    java.lang.String getMsgBody() -> getMsgBody
    void setAllowClear(int) -> setAllowClear
    void setAllowRing(int) -> setAllowRing
    void setAllowVibrate(int) -> setAllowVibrate
    int getAllowClear() -> getAllowClear
    int getAllowRing() -> getAllowRing
    int getAllowVibrate() -> getAllowVibrate
com.kpsh.sdk.KpshReceiver -> com.kpsh.sdk.KpshReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
    boolean a(android.content.Context) -> a
    boolean a() -> a
com.kpsh.sdk.KpshSdk -> com.kpsh.sdk.KpshSdk:
    boolean isExistSDCard() -> isExistSDCard
    void checkAM(android.content.Context) -> a
    void initSdk(android.content.Context) -> initSdk
    void startKpshService(android.content.Context) -> startKpshService
    boolean setAppKpshTag(android.content.Context,java.lang.String) -> setAppKpshTag
    void setAppKpshForbid(android.content.Context,boolean) -> setAppKpshForbid
    void msgOperationCallback(android.content.Context,int,java.lang.String) -> msgOperationCallback
    void AppExitNotifyKpsh(android.content.Context) -> AppExitNotifyKpsh
    boolean assetsHasKpshMoudle(android.content.Context) -> b
    java.lang.String getModuleVersion(android.content.Context) -> getModuleVersion
    java.lang.String getP04(android.content.Context) -> getP04
    java.lang.String getP04FromConfig(android.content.Context) -> getP04FromConfig
    java.lang.String getP04FromManifest(android.content.Context) -> getP04FromManifest
    com.kpsh.sdk.KpshMsg stringToKpshMsg(android.os.Bundle) -> stringToKpshMsg
    java.lang.String getPmc(android.content.Context) -> getPmc
    java.lang.String getKuwaPmc(android.content.Context) -> getKuwaPmc
com.kpsh.sdk.KpshService -> com.kpsh.sdk.KpshService:
    java.lang.Class a -> a
    java.lang.Object b -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.kpsh.sdk.a -> dw:
    android.content.Context a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    com.kpsh.sdk.a d -> d
    com.kpsh.sdk.a a(android.content.Context) -> a
    java.lang.Class a() -> a
    java.lang.Object b() -> b
com.kpsh.sdk.b -> dx:
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    boolean e(android.content.Context) -> e
    boolean a(java.io.File,java.io.File) -> a
    boolean c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.io.File) -> a
    boolean b(android.content.Context,java.lang.String,java.io.File) -> b
    int a(android.content.Context,java.io.File,java.io.File) -> a
    void b(java.lang.String) -> b
    boolean a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
    void a() -> a
    java.io.File a(java.lang.String) -> a
    java.io.File d(android.content.Context) -> d
com.kpsh.sdk.c -> dy:
    int a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    boolean a(int) -> a
    int b() -> b
    void a(java.lang.Exception) -> a
com.kpsh.sdk.d -> dz:
    com.kpsh.sdk.KpshReceiver a -> a
    android.content.Context b -> b
    android.content.Intent c -> c
    void run() -> run
com.kpsh.sdk.e -> ea:
    android.content.Context a -> a
    void run() -> run
cool.sdk.MicroEntry.MicroEntry -> eb:
    cool.sdk.download.CoolDLMgr CoolDLMgr(android.content.Context,java.lang.String,int) -> CoolDLMgr
cool.sdk.MicroEntry.MicroEntryHelper -> ec:
    java.lang.String[] MEAction -> a
    boolean HasSetDisable -> B
    java.lang.Class[] mActivityClass -> b
    long TimeWakeUpShow -> c
    long TimeShow -> d
    boolean IsMeUpdateDisclaimer -> e
    int NotifyID -> f
    com.iLoong.launcher.MList.MyR RR -> g
    android.content.Context mContext -> h
    cool.sdk.MicroEntry.MicroEntryHelper instance -> i
    boolean[] visableInDesktop -> j
    cool.sdk.MicroEntry.MicroEntryHelper getInstance(android.content.Context) -> getInstance
    void OnDataChange() -> OnDataChange
    void updateME(boolean[]) -> a
    void ShowMENotification(boolean[],int,long,int,int) -> a
    void ShowNotifcationPer(boolean[],int,long,int,int) -> b
    void ShowNotifcation() -> ShowNotifcation
    long getServerCurTime() -> a
    void UpdateMeStateUserConfirm(boolean[],int) -> UpdateMeStateUserConfirm
    void updateMEStateForce(boolean[]) -> b
    void SetDesktopShotCutIcon(android.content.Context,java.lang.Class,boolean,int) -> SetDesktopShotCutIcon
    void setEnabled(android.content.Context,java.lang.Class,boolean,boolean,int) -> setEnabled
    void setEnableByCfg(int) -> setEnableByCfg
    boolean checkActionCanEnable(android.content.Context,int) -> a
    boolean checkActionCanDisable(android.content.Context,int) -> b
    void setComponentEnabled(android.content.Context,android.content.ComponentName,int) -> a
    boolean shouldExit(android.content.Context) -> shouldExit
    void UpdateDeleteItemByHide(int,java.lang.String) -> UpdateDeleteItemByHide
    void UpdateDeleteItemListByConfig(boolean[]) -> c
    void UpdateActiveItemList(boolean[],int) -> a
    java.lang.String getEntryID() -> getEntryID
cool.sdk.MicroEntry.MicroEntryLog -> ed:
    java.lang.Object syncObj -> a
    void LogItem(android.content.Context,java.lang.String,cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem) -> a
    void LogItem(android.content.Context,java.lang.String,java.util.List) -> a
    void LogActive(android.content.Context,cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem) -> LogActive
    void LogActive(android.content.Context,java.util.List) -> LogActive
    void LogDelete(android.content.Context,cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem) -> LogDelete
    void LogDelete(android.content.Context,java.util.List) -> LogDelete
cool.sdk.MicroEntry.MicroEntryLog$MicroEntryLogItem -> ee:
    int type -> a
    int id -> b
    java.lang.String name -> c
cool.sdk.MicroEntry.MicroEntryUpdate -> ef:
    cool.sdk.update.manager.UpdateConfig config -> k
    android.content.Context context -> l
    cool.sdk.log.CoolLog Log -> m
    cool.sdk.download.CoolDLMgr dlMgrIcon -> n
    java.lang.Object dlMgrIconSync -> o
    void OnDataChange() -> OnDataChange
    java.lang.String getEntryID() -> getEntryID
    cool.sdk.download.CoolDLMgr getCoolDLMgrIcon() -> getCoolDLMgrIcon
    boolean allowDeleteEntry() -> allowDeleteEntry
    java.lang.String localeGetSysLanguage() -> localeGetSysLanguage
    boolean OnUpdate(android.content.Context) -> a
    java.lang.String getListString() -> getListString
    java.lang.String getEntryUrl(int) -> getEntryUrl
cool.sdk.MicroEntry.MicroEntryUpdate$1 -> eg:
    cool.sdk.MicroEntry.MicroEntryUpdate this$0 -> a
    void mySuccessCheck() -> a
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.MicroEntry.MicroEntryUpdate$MyIconCoolDLCallback -> eh:
    int successCount -> b
    int failCount -> c
    int downloadCount -> d
    int totalCount -> e
    cool.sdk.MicroEntry.MicroEntryUpdate this$0 -> f
cool.sdk.common.Compress -> ei:
    void compress(java.io.InputStream,java.io.OutputStream) -> compress
    void decompress(java.io.InputStream,java.io.OutputStream) -> decompress
    byte[] byteCompress(byte[]) -> byteCompress
    byte[] byteDecompress(byte[]) -> byteDecompress
    byte[] Md5(byte[]) -> Md5
cool.sdk.common.CoolHttpClient -> ej:
    org.apache.http.client.HttpClient customerHttpClient -> d
    byte[] decodekey -> a
    int sequence -> e
    byte[] CientENCRYPT2 -> b
    int encryptMode -> c
    void Translate(byte[],byte[]) -> Translate
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    byte[] wrapContentBody(java.lang.String) -> wrapContentBody
    java.lang.String unWrapContentBody(byte[]) -> unWrapContentBody
    cool.sdk.common.CoolHttpClient$ResultEntity postEntity(java.lang.String,java.lang.String) -> postEntity
cool.sdk.common.CoolHttpClient$ResultEntity -> ek:
    int httpCode -> a
    java.lang.Exception exception -> b
    java.lang.String content -> c
    long contentLength -> d
cool.sdk.common.CoolMethod -> el:
    java.lang.String getSn(android.content.Context) -> getSn
    java.lang.String getAppID(android.content.Context) -> getAppID
    java.lang.String getCooeeId(android.content.Context) -> getCooeeId
    long getTotalCallTime(android.content.Context) -> getTotalCallTime
    int getSmsNum(android.content.Context) -> getSmsNum
    long getCallTimes(android.content.Context) -> getCallTimes
    long getPhoneTotalUseTime(android.content.Context) -> getPhoneTotalUseTime
    long getAppActiveTime(android.content.Context) -> getAppActiveTime
    long getInstallAppCount(android.content.Context) -> getInstallAppCount
    boolean IsBuildInApp(android.content.Context,java.lang.String) -> IsBuildInApp
cool.sdk.common.DES -> em:
    java.lang.String ivs -> a
    char[] HEXCHAR -> b
    byte[] cbc_encode(java.lang.String,java.lang.String) -> cbc_encode
    byte[] cbc_encode(byte[],byte[]) -> cbc_encode
    byte[] cbc_decode(java.lang.String,byte[]) -> cbc_decode
    byte[] ecb_encode(java.lang.String,java.lang.String) -> ecb_encode
    byte[] ecb_encode(byte[],byte[]) -> ecb_encode
    byte[] ecb_decode(java.lang.String,byte[]) -> ecb_decode
    byte[] ecb_decode(byte[],byte[]) -> ecb_decode
    java.lang.String toHexString(byte[]) -> toHexString
    java.lang.String byte2HexString(byte[]) -> byte2HexString
    byte[] String2Byte(java.lang.String) -> String2Byte
    java.lang.String getMD5EncruptKey(byte[]) -> getMD5EncruptKey
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
cool.sdk.common.JsonUtil -> en:
    org.json.JSONObject NewRequestJSON(android.content.Context,int,java.lang.String) -> NewRequestJSON
cool.sdk.common.MD5 -> eo:
    char[] HEXCHAR -> a
    java.lang.String toHexString(byte[]) -> toHexString
    java.lang.String byte2HexString(byte[]) -> byte2HexString
    byte[] String2Byte(java.lang.String) -> String2Byte
    java.lang.String getMD5EncruptKey(byte[]) -> getMD5EncruptKey
    java.lang.String getMD5EncruptKey(java.lang.String) -> getMD5EncruptKey
    java.lang.String bufferToHex(byte[]) -> bufferToHex
cool.sdk.common.MyMethod -> ep:
    int InstallApk(android.content.Context,java.lang.String,boolean) -> InstallApk
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    boolean InstallApk(android.content.Context,java.lang.String) -> InstallApk
    void StartActivityByPackageName(android.content.Context,java.lang.String) -> StartActivityByPackageName
    boolean IsPackageInstalled(android.content.Context,java.lang.String) -> IsPackageInstalled
    boolean vertifyApk(android.content.Context,java.lang.String,java.lang.String) -> vertifyApk
cool.sdk.common.UrlUtil -> eq:
    java.lang.String[] urls -> a
    java.lang.String urlGetTime -> b
    byte[] TimeArray -> c
    byte[] CientENCRYPT -> d
    java.lang.String getDataServerUrl() -> getDataServerUrl
    java.lang.String getDownloadServerUrl() -> getDownloadServerUrl
    java.lang.String getLogServerUrl() -> getLogServerUrl
cool.sdk.db.DoubleBackUpDB -> er:
    java.lang.String DB_NAME -> a
    java.lang.Object syncObj -> b
    java.lang.String privateDbPath -> p
    java.lang.String sdcardDbPath -> q
    java.lang.String TBL_NAME -> r
    java.lang.String CREATE_TBL -> s
    void createDb(java.lang.String) -> a
    android.database.sqlite.SQLiteDatabase getDatabase(java.lang.String) -> b
    void setValue(java.lang.String,java.lang.Integer) -> setValue
    void setValue(java.lang.String,java.lang.Long) -> setValue
    void setValue(java.lang.String,java.lang.String) -> setValue
    java.lang.Integer getInt(java.lang.String) -> getInt
    java.lang.Integer getInt(java.lang.String,java.lang.Integer) -> getInt
    java.lang.Long getLong(java.lang.String) -> getLong
    java.lang.Long getLong(java.lang.String,java.lang.Long) -> getLong
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getStringFromDB(java.lang.String,java.lang.String) -> a
    void setStringToDB(java.lang.String,java.lang.String,java.lang.String) -> a
cool.sdk.download.CoolDLCallback -> es:
    void onDoing(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onDoing
    void onSuccess(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.download.CoolDLMgr -> et:
    android.content.Context context -> c
    cool.sdk.download.manager.dl_manager dl_mgr -> a
    java.lang.String moudleName -> d
    int h12 -> e
    java.lang.String h13 -> f
    cool.sdk.log.CoolLog Log -> b
    boolean checkPathEverytime -> g
    boolean isSilentDownload -> h
    java.util.Map mgrMap -> i
    int[] $SWITCH_TABLE$cool$sdk$download$CoolDLResType -> j
    void setCheckPathEverytime(boolean) -> setCheckPathEverytime
    void setIsSilentDownload(boolean) -> setIsSilentDownload
    java.lang.String getInternalPath() -> getInternalPath
    java.lang.String getExternalPath() -> getExternalPath
    void checkPath() -> a
    cool.sdk.download.CoolDLMgr getInstance(android.content.Context,java.lang.String,int,java.lang.String) -> getInstance
    java.lang.String buildType(java.lang.String,int) -> a
    java.lang.String buildUrl(java.lang.String,int,java.lang.String) -> a
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadNewTask
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadNewTask
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadNewTask
    cool.sdk.download.manager.dl_task ResDownloadNewTask(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadNewTask
    int ResDownloadStart(cool.sdk.download.manager.dl_task) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback,int,java.lang.String) -> ResDownloadStart
    int ResDownloadStart(cool.sdk.download.CoolDLResType,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResDownloadStart
    void ResDownloadStop(cool.sdk.download.CoolDLResType,java.lang.String,boolean) -> ResDownloadStop
    void ResDownloadStop(cool.sdk.download.CoolDLResType,java.lang.String) -> ResDownloadStop
    int ResQueryState(cool.sdk.download.CoolDLResType,java.lang.String) -> ResQueryState
    cool.sdk.download.manager.dl_info ResGetInfo(cool.sdk.download.CoolDLResType,java.lang.String,boolean) -> ResGetInfo
    cool.sdk.download.manager.dl_info ResGetInfo(cool.sdk.download.CoolDLResType,java.lang.String) -> ResGetInfo
    void ResSetTaskCallback(cool.sdk.download.manager.dl_info,java.lang.String,cool.sdk.download.CoolDLCallback) -> ResSetTaskCallback
    void ResSetTaskCallback(cool.sdk.download.manager.dl_info,cool.sdk.download.CoolDLCallback) -> ResSetTaskCallback
    java.util.List ResGetTaskListNeedDownload() -> ResGetTaskListNeedDownload
    java.util.List ResGetTaskList(cool.sdk.download.CoolDLResType) -> ResGetTaskList
    cool.sdk.download.manager.dl_task IconNewTask(java.lang.String,java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> IconNewTask
    cool.sdk.download.manager.dl_task IconNewTask(java.lang.String,cool.sdk.download.CoolDLCallback) -> IconNewTask
    int IconDownload(cool.sdk.download.manager.dl_task) -> IconDownload
    int IconDownload(java.lang.String,java.lang.String,cool.sdk.download.CoolDLCallback) -> IconDownload
    int IconDownload(java.lang.String,cool.sdk.download.CoolDLCallback) -> IconDownload
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String,java.lang.String,boolean) -> IconGetInfo
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String,boolean) -> IconGetInfo
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String,java.lang.String) -> IconGetInfo
    cool.sdk.download.manager.dl_info IconGetInfo(java.lang.String) -> IconGetInfo
    cool.sdk.download.manager.dl_task UrlNewTask(java.lang.String,cool.sdk.download.manager.dl_cb) -> UrlNewTask
    int UrlDownload(cool.sdk.download.manager.dl_task) -> UrlDownload
    int UrlDownload(java.lang.String,cool.sdk.download.manager.dl_cb) -> UrlDownload
    cool.sdk.download.manager.dl_info UrlGetInfo(java.lang.String,boolean) -> UrlGetInfo
    cool.sdk.download.manager.dl_info UrlGetInfo(java.lang.String) -> UrlGetInfo
    int access$0(cool.sdk.download.CoolDLMgr) -> a
    java.lang.String access$1(cool.sdk.download.CoolDLMgr) -> b
    android.content.Context access$2(cool.sdk.download.CoolDLMgr) -> c
    boolean access$3(cool.sdk.download.CoolDLMgr) -> d
    int[] $SWITCH_TABLE$cool$sdk$download$CoolDLResType() -> b
cool.sdk.download.CoolDLMgr$My_dl_cb -> eu:
    cool.sdk.download.CoolDLCallback cb -> a
    cool.sdk.download.CoolDLMgr this$0 -> b
    int[] $SWITCH_TABLE$cool$sdk$download$manager$dl_result -> c
    java.lang.String onUrl(cool.sdk.download.manager.dl_info) -> a
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    cool.sdk.download.manager.dl_result onFinish(cool.sdk.download.manager.dl_info) -> onFinish
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
    int[] $SWITCH_TABLE$cool$sdk$download$manager$dl_result() -> a
cool.sdk.download.CoolDLResType -> ev:
    cool.sdk.download.CoolDLResType RES_TYPE_APK -> RES_TYPE_APK
    cool.sdk.download.CoolDLResType RES_TYPE_PIC -> RES_TYPE_PIC
    int value -> value
    cool.sdk.download.CoolDLResType[] ENUM$VALUES -> ENUM$VALUES
    cool.sdk.download.CoolDLResType from(int) -> a
    cool.sdk.download.CoolDLResType[] values() -> values
    cool.sdk.download.CoolDLResType valueOf(java.lang.String) -> valueOf
cool.sdk.download.manager.DlMethod -> ew:
    java.lang.String getMD5String(java.lang.String) -> getMD5String
    byte[] bytesFromStream(java.io.InputStream) -> bytesFromStream
    boolean saveStream(java.io.InputStream,java.lang.String) -> saveStream
    boolean IsWifiConnected(android.content.Context) -> IsWifiConnected
    boolean IsNetworkAvailable(android.content.Context) -> IsNetworkAvailable
    java.net.HttpURLConnection HttpGet(android.content.Context,java.lang.String,java.lang.String[]) -> HttpGet
    java.net.HttpURLConnection HttpPost(android.content.Context,java.lang.String,byte[],java.lang.String[]) -> HttpPost
    java.net.HttpURLConnection HttpGet(android.content.Context,java.lang.String,int,int,java.lang.String[]) -> HttpGet
    java.net.HttpURLConnection HttpPost(android.content.Context,java.lang.String,int,int,byte[],java.lang.String[]) -> HttpPost
    java.net.HttpURLConnection HttpPostEx(android.content.Context,java.lang.String,byte[],java.lang.String[]) -> HttpPostEx
    java.net.HttpURLConnection HttpPostEx(android.content.Context,java.lang.String,int,int,byte[],java.lang.String[]) -> HttpPostEx
    java.net.HttpURLConnection HttpPost2$4e3cb5da(java.lang.String,int,byte[],java.lang.String[]) -> a
cool.sdk.download.manager.dl_cb -> ex:
    java.lang.String onUrl(cool.sdk.download.manager.dl_info) -> a
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    cool.sdk.download.manager.dl_result onFinish(cool.sdk.download.manager.dl_info) -> onFinish
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.download.manager.dl_db -> ey:
    java.lang.Object syncObj -> b
    java.lang.String dbPath -> a
    android.database.sqlite.SQLiteDatabase getDatabase() -> a
    cool.sdk.download.manager.dl_info constructPkgInfo(android.database.Cursor) -> a
    android.content.ContentValues constructContentValues(cool.sdk.download.manager.dl_info) -> a
    cool.sdk.download.manager.dl_info getPkg(java.lang.String) -> getPkg
    java.util.List getPkgList() -> getPkgList
    int insertPkg(cool.sdk.download.manager.dl_info,boolean) -> insertPkg
    void updatePkg(cool.sdk.download.manager.dl_info) -> updatePkg
    void deletePkg(java.lang.String) -> deletePkg
cool.sdk.download.manager.dl_info -> ez:
    int iD -> a
    long len_p -> b
    long has_b -> c
    java.lang.String url -> d
    java.lang.String filePath -> e
    java.lang.String md5 -> f
    java.lang.Object[] params -> g
    java.util.Map callbackList -> h
    int downloadState -> i
    org.json.JSONObject json -> j
    void setCallback(java.lang.String,cool.sdk.download.manager.dl_cb) -> setCallback
    java.lang.Object[] getParams() -> getParams
    void setParams(java.lang.Object[]) -> setParams
    boolean setParam(int,java.lang.Object) -> setParam
    void setJson(java.lang.String) -> setJson
    java.lang.String getJson() -> getJson
    java.lang.Object getValue(java.lang.String) -> getValue
    boolean setValue(java.lang.String,java.lang.Object) -> setValue
    int getID() -> getID
    void setID(int) -> setID
    long getTotalBytes() -> getTotalBytes
    void setTotalBytes(int) -> setTotalBytes
    long getCurBytes() -> getCurBytes
    void setCurBytes(int) -> setCurBytes
    java.lang.String getURL() -> getURL
    void setURL(java.lang.String) -> setURL
    java.lang.String getFilePath() -> getFilePath
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getMD5() -> getMD5
    void setMD5(java.lang.String) -> setMD5
    int getDownloadState() -> getDownloadState
    boolean IsDownloadSuccess() -> IsDownloadSuccess
    boolean equals(java.lang.Object) -> equals
cool.sdk.download.manager.dl_manager -> fa:
    cool.sdk.download.manager.dl_manager$dl_handler handler -> a
    cool.sdk.download.manager.dl_db dm -> b
    android.content.Context context -> c
    int maxConnCount -> d
    int maxListCount -> l
    int connectTimeout -> e
    int readTimeout -> f
    int maxProgress -> g
    int recvBufSize -> h
    java.lang.Object listObj -> i
    java.util.List urlList -> j
    java.util.List downList -> k
    java.lang.String downloadDir -> m
    void sendMsg(int,java.lang.Object[]) -> a
    void setMaxTaskCount(int) -> setMaxTaskCount
    void setDownloadPath(java.lang.String) -> setDownloadPath
    void setDataBasePath(java.lang.String) -> setDataBasePath
    void setUseHandler(boolean) -> setUseHandler
    void setMaxProgress(int) -> setMaxProgress
    void setRecvBufSize(int) -> setRecvBufSize
    void setMaxConnectionCount(int) -> setMaxConnectionCount
    void setReadTimeout(int) -> setReadTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getTaskCount() -> getTaskCount
    cool.sdk.download.manager.dl_info getTaskInfo(java.lang.String,boolean) -> getTaskInfo
    cool.sdk.download.manager.dl_result updateTaskInfo(cool.sdk.download.manager.dl_info) -> updateTaskInfo
    cool.sdk.download.manager.dl_result startTask(cool.sdk.download.manager.dl_task) -> startTask
    void mergeJson(org.json.JSONObject,org.json.JSONObject) -> a
    cool.sdk.download.manager.dl_result stopTask(java.lang.String) -> stopTask
    cool.sdk.download.manager.dl_result stopTask(java.lang.String,boolean) -> stopTask
    java.util.List getTaskList() -> getTaskList
    void stopAllTask() -> stopAllTask
cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE -> fb:
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE STATE_IDLE -> STATE_IDLE
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE STATE_DOWNING -> STATE_DOWNING
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE[] ENUM$VALUES -> ENUM$VALUES
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE[] values() -> values
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE valueOf(java.lang.String) -> valueOf
cool.sdk.download.manager.dl_manager$MyDownloadTask -> fc:
    cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread thread -> g
    cool.sdk.download.manager.dl_task task -> a
    cool.sdk.download.manager.dl_info info -> b
    java.lang.Object snapObj -> c
    java.lang.Object stateObj -> d
    boolean isWifi -> e
    cool.sdk.download.manager.dl_manager this$0 -> f
    void Start() -> Start
    void Stop(boolean) -> Stop
cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread -> fd:
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE downState -> c
    long lastTry -> a
    cool.sdk.download.manager.dl_manager$MyDownloadTask this$1 -> b
    void Result(boolean,cool.sdk.download.manager.dl_result) -> a
    int getProgress(long,long) -> a
    void run() -> run
    cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE access$0(cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread) -> a
    void access$2(cool.sdk.download.manager.dl_manager$MyDownloadTask$MyDownloadThread,cool.sdk.download.manager.dl_manager$DOWNLOAD_STATE) -> a
cool.sdk.download.manager.dl_manager$dl_handler -> fe:
    void handleMessage(android.os.Message) -> handleMessage
cool.sdk.download.manager.dl_result -> ff:
    cool.sdk.download.manager.dl_result OK -> OK
    cool.sdk.download.manager.dl_result FULL -> FULL
    cool.sdk.download.manager.dl_result EXISTS -> EXISTS
    cool.sdk.download.manager.dl_result NOT_EXISTS -> NOT_EXISTS
    cool.sdk.download.manager.dl_result FAIL_HASH -> FAIL_HASH
    cool.sdk.download.manager.dl_result FAIL_NET -> FAIL_NET
    cool.sdk.download.manager.dl_result FAIL_FINISH -> FAIL_FINISH
    cool.sdk.download.manager.dl_result FAIL_EXCEPTION -> FAIL_EXCEPTION
    cool.sdk.download.manager.dl_result FAIL_URL -> FAIL_URL
    cool.sdk.download.manager.dl_result NORMAL_EXIT -> NORMAL_EXIT
    cool.sdk.download.manager.dl_result FAIL_NOT_SUPPORT -> FAIL_NOT_SUPPORT
    cool.sdk.download.manager.dl_result[] ENUM$VALUES -> ENUM$VALUES
    cool.sdk.download.manager.dl_result[] values() -> values
    cool.sdk.download.manager.dl_result valueOf(java.lang.String) -> valueOf
cool.sdk.download.manager.dl_task -> fg:
    java.lang.String url -> a
    boolean useQueue -> b
    java.lang.String path -> c
    java.lang.String getParams -> d
    byte[] postParams -> e
    java.lang.Object[] params -> f
    org.json.JSONObject json -> g
    java.util.Map callbackList -> h
    java.lang.Object getValue(java.lang.String) -> getValue
    boolean setValue(java.lang.String,java.lang.Object) -> setValue
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    boolean isUseQueue() -> isUseQueue
    void setUseQueue(boolean) -> setUseQueue
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getGetParams() -> getGetParams
    void setGetParams(java.lang.String) -> setGetParams
    byte[] getPostParams() -> getPostParams
    void setPostParams(byte[]) -> setPostParams
    java.lang.Object[] getParms() -> getParms
    void setParms(java.lang.Object[]) -> setParms
    void setCallback(java.lang.String,cool.sdk.download.manager.dl_cb) -> setCallback
    java.lang.String onUrl(cool.sdk.download.manager.dl_info) -> onUrl
    void onStart(cool.sdk.download.manager.dl_info) -> onStart
    void onDoing(cool.sdk.download.manager.dl_info) -> onDoing
    cool.sdk.download.manager.dl_result onFinish(cool.sdk.download.manager.dl_info) -> onFinish
    void onSuccess(cool.sdk.download.manager.dl_info) -> onSuccess
    void onFail(cool.sdk.download.manager.dl_result,cool.sdk.download.manager.dl_info) -> onFail
cool.sdk.log.CoolLog -> fh:
    java.lang.String filePath -> a
    boolean bEnableLog -> b
    java.lang.Boolean bExistsLog -> c
    void setEnableLog(boolean) -> setEnableLog
    void v(java.lang.String,java.lang.String) -> v
cool.sdk.log.LogDB -> fi:
    java.lang.String privateDbPath -> a
    java.lang.String sdcardDbPath -> b
    java.lang.String FILE_NAME -> c
    android.content.Context context -> d
    cool.sdk.log.LogDB instance -> e
    cool.sdk.log.LogDB getInstance(android.content.Context) -> getInstance
    java.util.List getJsonList() -> a
    void setJsonList(java.util.List) -> a
    void AddItem(org.json.JSONObject) -> AddItem
    void AddItem(org.json.JSONArray) -> AddItem
    void RemoveItem(org.json.JSONObject) -> RemoveItem
    void RemoveItem(org.json.JSONArray) -> RemoveItem
    void AddStaticsItem(cool.sdk.log.LogDB$MyStaticsItem) -> AddStaticsItem
    void RemoveStaticsItem(cool.sdk.log.LogDB$MyStaticsItem) -> RemoveStaticsItem
    void RemoveStaticsList(java.util.List) -> RemoveStaticsList
    java.util.List getMyStaticsList(android.content.Context) -> getMyStaticsList
    void setMyStaticsList(java.util.List) -> setMyStaticsList
    java.util.List getMyStaticsListFromFile(java.lang.String) -> a
    void setMyStaticsListToFile(java.lang.String,java.util.List) -> a
cool.sdk.log.LogDB$MyStaticsItem -> fj:
    long serialVersionUID -> serialVersionUID
    java.lang.String Action -> Action
    int h12 -> h12
    java.lang.String h13 -> h13
    java.lang.Integer h17 -> h17
    int productId -> productId
    int productType -> productType
    int resId -> resId
    java.lang.String packageName -> packageName
    java.lang.Integer code -> code
    int count -> count
    boolean equals(java.lang.Object) -> equals
    java.lang.String toMyString() -> a
cool.sdk.log.LogHelper -> fk:
    void Download(android.content.Context,cool.sdk.download.manager.dl_info,java.lang.Integer,int,java.lang.String,java.lang.Integer) -> Download
    void Package(android.content.Context,java.lang.String,boolean) -> Package
    void Item(android.content.Context,org.json.JSONObject,org.json.JSONArray) -> Item
cool.sdk.log.LogHelper$1 -> fl:
    android.content.Context val$context -> a
    int val$h12 -> b
    java.lang.String val$h13 -> c
    java.lang.Integer val$code -> d
    java.lang.String val$Action -> e
    int val$productId -> f
    int val$productType -> g
    int val$resId -> h
    java.lang.String val$packageName -> i
    java.lang.Integer val$h17 -> j
    cool.sdk.log.LogDB$MyStaticsItem val$staticsItem -> k
    cool.sdk.download.manager.dl_info val$info -> l
    void run() -> run
cool.sdk.log.LogHelper$2 -> fm:
    android.content.Context val$context -> a
    boolean val$install -> b
    java.lang.String val$packageName -> c
    void run() -> run
cool.sdk.log.LogHelper$3 -> fn:
    android.content.Context val$context -> a
    int val$h12 -> b
    java.lang.String val$h13 -> c
    org.json.JSONObject val$json -> d
    java.lang.String val$action -> e
    org.json.JSONArray val$array -> f
    void run() -> run
cool.sdk.statistics.StatisticsUpdate -> fo:
    cool.sdk.update.manager.UpdateConfig config -> a
    android.content.Context context -> b
    cool.sdk.log.CoolLog Log -> c
    cool.sdk.statistics.StatisticsUpdate instance -> d
    cool.sdk.statistics.StatisticsUpdate getInstance(android.content.Context) -> getInstance
    long getAppActiveTime() -> getAppActiveTime
    boolean OnUpdate(android.content.Context) -> a
cool.sdk.update.UpdateManager -> fp:
    void UpdateAsync(android.content.Context) -> UpdateAsync
    void UpdateSync(android.content.Context) -> UpdateSync
cool.sdk.update.UpdateManager$1 -> fq:
    android.content.Context val$context -> a
    void run() -> run
cool.sdk.update.UpdateManagerImpl -> fr:
    void Update(android.content.Context) -> Update
    void UpdateSync(android.content.Context) -> UpdateSync
    void UpdateOver(android.content.Context) -> UpdateOver
    boolean allowUpdate(android.content.Context) -> allowUpdate
cool.sdk.update.manager.UpdateConfig -> fs:
    long UPDATE_DEFAULT_MINUTES -> a
    long UPDATE_MIN_MINUTES -> b
    long UPDATE_MAX_MINUTES -> c
    long MAX_UPDATE_TIMES_PER_DAY -> d
    long RETRY_TIMES_WHEN_ONLINE -> e
cool.sdk.update.manager.UpdateHelper -> ft:
    boolean isUpdating -> t
    long lastMinute -> u
    long retryTimes -> v
    long gapMinute -> w
    cool.sdk.update.manager.UpdateHelper$OneDayParam oneDayParam -> x
    cool.sdk.update.manager.UpdateConfig config -> y
    java.lang.String moduleName -> z
    android.content.Context context -> A
    boolean neesUpdate() -> a
    void UpdateForSuccess(boolean) -> UpdateForSuccess
    void Update(boolean,boolean) -> Update
    void Update() -> Update
    void Update(boolean) -> Update
    void UpdateSync(boolean) -> UpdateSync
    boolean OnUpdate(android.content.Context) -> a
    cool.sdk.update.manager.UpdateHelper$OneDayParam getOneDayParam$315c0ebb() -> b
    void setOneDayParam$726ba52b(cool.sdk.update.manager.UpdateHelper$OneDayParam) -> a
    cool.sdk.update.manager.UpdateHelper$OneDayParam getOneDayParamFromFile(java.lang.String) -> a
    void setOneDayParamToFile(java.lang.String,cool.sdk.update.manager.UpdateHelper$OneDayParam) -> a
cool.sdk.update.manager.UpdateHelper$1 -> fu:
    cool.sdk.update.manager.UpdateHelper this$0 -> a
    void run() -> run
cool.sdk.update.manager.UpdateHelper$OneDayParam -> fv:
    long lastDay -> a
    long times -> b
cool.sdk.update.manager.UpdateReceiver -> cool.sdk.update.manager.UpdateReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.AuthenticationToken -> org.apache.cordova.AuthenticationToken:
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
org.apache.cordova.CallbackContext -> org.apache.cordova.CallbackContext:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String callbackId -> callbackId
    org.apache.cordova.CordovaWebView webView -> webView
    boolean finished -> finished
    int changingThreads -> changingThreads
    boolean isFinished() -> isFinished
    boolean isChangingThreads() -> isChangingThreads
    java.lang.String getCallbackId() -> getCallbackId
    void sendPluginResult(org.apache.cordova.PluginResult) -> sendPluginResult
    void success(org.json.JSONObject) -> success
    void success(java.lang.String) -> success
    void success(org.json.JSONArray) -> success
    void success(byte[]) -> success
    void success(int) -> success
    void success() -> success
    void error(org.json.JSONObject) -> error
    void error(java.lang.String) -> error
    void error(int) -> error
org.apache.cordova.Config -> org.apache.cordova.Config:
    java.lang.String TAG -> TAG
    org.apache.cordova.ConfigXmlParser parser -> parser
    void init(android.app.Activity) -> init
    void init() -> init
    java.lang.String getStartUrl() -> getStartUrl
    java.lang.String getErrorUrl() -> getErrorUrl
    java.util.List getPluginEntries() -> getPluginEntries
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    boolean isInitialized() -> isInitialized
org.apache.cordova.ConfigXmlParser -> org.apache.cordova.ConfigXmlParser:
    java.lang.String TAG -> TAG
    java.lang.String launchUrl -> launchUrl
    org.apache.cordova.CordovaPreferences prefs -> prefs
    java.util.ArrayList pluginEntries -> pluginEntries
    boolean insideFeature -> insideFeature
    java.lang.String service -> service
    java.lang.String pluginClass -> pluginClass
    java.lang.String paramType -> paramType
    boolean onload -> onload
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    java.util.ArrayList getPluginEntries() -> getPluginEntries
    java.lang.String getLaunchUrl() -> getLaunchUrl
    void parse(android.content.Context) -> parse
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void handleStartTag(org.xmlpull.v1.XmlPullParser) -> handleStartTag
    void handleEndTag(org.xmlpull.v1.XmlPullParser) -> handleEndTag
    void setStartUrl(java.lang.String) -> setStartUrl
org.apache.cordova.CordovaActivity -> org.apache.cordova.CordovaActivity:
    java.lang.String TAG -> TAG
    org.apache.cordova.CordovaWebView appView -> appView
    int ACTIVITY_STARTING -> ACTIVITY_STARTING
    int ACTIVITY_RUNNING -> ACTIVITY_RUNNING
    int ACTIVITY_EXITING -> ACTIVITY_EXITING
    boolean keepRunning -> keepRunning
    boolean immersiveMode -> immersiveMode
    org.apache.cordova.CordovaPreferences preferences -> preferences
    java.lang.String launchUrl -> launchUrl
    java.util.ArrayList pluginEntries -> pluginEntries
    org.apache.cordova.CordovaInterfaceImpl cordovaInterface -> cordovaInterface
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> init
    void loadConfig() -> loadConfig
    void createViews() -> createViews
    org.apache.cordova.CordovaWebView makeWebView() -> makeWebView
    org.apache.cordova.CordovaWebViewEngine makeWebViewEngine() -> makeWebViewEngine
    org.apache.cordova.CordovaInterfaceImpl makeCordovaInterface() -> makeCordovaInterface
    void loadUrl(java.lang.String) -> loadUrl
    android.view.View loadWebViewUrl(java.lang.String) -> loadWebViewUrl
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onStop() -> onStop
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void displayError(java.lang.String,java.lang.String,java.lang.String,boolean) -> displayError
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
org.apache.cordova.CordovaActivity$1 -> fw:
    org.apache.cordova.CordovaActivity this$0 -> a
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
org.apache.cordova.CordovaActivity$2 -> fx:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    java.lang.String val$errorUrl -> c
    void run() -> run
org.apache.cordova.CordovaActivity$3 -> fy:
    org.apache.cordova.CordovaActivity this$0 -> a
    boolean val$exit -> b
    org.apache.cordova.CordovaActivity val$me -> c
    java.lang.String val$description -> d
    java.lang.String val$failingUrl -> e
    void run() -> run
org.apache.cordova.CordovaActivity$4 -> fz:
    org.apache.cordova.CordovaActivity this$0 -> a
    org.apache.cordova.CordovaActivity val$me -> b
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    java.lang.String val$button -> e
    boolean val$exit -> f
    void run() -> run
    org.apache.cordova.CordovaActivity access$0(org.apache.cordova.CordovaActivity$4) -> a
org.apache.cordova.CordovaActivity$4$1 -> ga:
    org.apache.cordova.CordovaActivity$4 this$1 -> a
    boolean val$exit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaArgs -> org.apache.cordova.CordovaArgs:
    org.json.JSONArray baseArgs -> baseArgs
    java.lang.Object get(int) -> get
    boolean getBoolean(int) -> getBoolean
    double getDouble(int) -> getDouble
    int getInt(int) -> getInt
    org.json.JSONArray getJSONArray(int) -> getJSONArray
    org.json.JSONObject getJSONObject(int) -> getJSONObject
    long getLong(int) -> getLong
    java.lang.String getString(int) -> getString
    java.lang.Object opt(int) -> opt
    boolean optBoolean(int) -> optBoolean
    double optDouble(int) -> optDouble
    int optInt(int) -> optInt
    org.json.JSONArray optJSONArray(int) -> optJSONArray
    org.json.JSONObject optJSONObject(int) -> optJSONObject
    long optLong(int) -> optLong
    java.lang.String optString(int) -> optString
    boolean isNull(int) -> isNull
    byte[] getArrayBuffer(int) -> getArrayBuffer
org.apache.cordova.CordovaBridge -> org.apache.cordova.CordovaBridge:
    java.lang.String LOG_TAG -> LOG_TAG
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.NativeToJsMessageQueue jsMessageQueue -> jsMessageQueue
    int expectedBridgeSecret -> expectedBridgeSecret
    java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> jsExec
    void jsSetNativeToJsBridgeMode(int,int) -> jsSetNativeToJsBridgeMode
    java.lang.String jsRetrieveJsMessages(int,boolean) -> jsRetrieveJsMessages
    boolean verifySecret(java.lang.String,int) -> verifySecret
    void clearBridgeSecret() -> clearBridgeSecret
    boolean isSecretEstablished() -> isSecretEstablished
    int generateBridgeSecret() -> generateBridgeSecret
    void reset() -> reset
    java.lang.String promptOnJsPrompt(java.lang.String,java.lang.String,java.lang.String) -> promptOnJsPrompt
org.apache.cordova.CordovaClientCertRequest -> org.apache.cordova.CordovaClientCertRequest:
    android.webkit.ClientCertRequest request -> request
    void cancel() -> cancel
    java.lang.String getHost() -> getHost
    java.lang.String[] getKeyTypes() -> getKeyTypes
    int getPort() -> getPort
    java.security.Principal[] getPrincipals() -> getPrincipals
    void ignore() -> ignore
    void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[]) -> proceed
org.apache.cordova.CordovaDialogsHelper -> org.apache.cordova.CordovaDialogsHelper:
    android.content.Context context -> context
    android.app.AlertDialog lastHandledDialog -> lastHandledDialog
    void showAlert(java.lang.String,org.apache.cordova.CordovaDialogsHelper$Result) -> showAlert
    void showConfirm(java.lang.String,org.apache.cordova.CordovaDialogsHelper$Result) -> showConfirm
    void showPrompt(java.lang.String,java.lang.String,org.apache.cordova.CordovaDialogsHelper$Result) -> showPrompt
    void destroyLastDialog() -> destroyLastDialog
org.apache.cordova.CordovaDialogsHelper$1 -> gb:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$2 -> gc:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaDialogsHelper$3 -> gd:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.apache.cordova.CordovaDialogsHelper$4 -> ge:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$5 -> gf:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$6 -> gg:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.apache.cordova.CordovaDialogsHelper$7 -> gh:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
org.apache.cordova.CordovaDialogsHelper$8 -> gi:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    android.widget.EditText val$input -> b
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$9 -> gj:
    org.apache.cordova.CordovaDialogsHelper this$0 -> a
    org.apache.cordova.CordovaDialogsHelper$Result val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CordovaDialogsHelper$Result -> org.apache.cordova.CordovaDialogsHelper$Result:
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.CordovaHttpAuthHandler -> org.apache.cordova.CordovaHttpAuthHandler:
    android.webkit.HttpAuthHandler handler -> handler
    void cancel() -> cancel
    void proceed(java.lang.String,java.lang.String) -> proceed
org.apache.cordova.CordovaInterface -> org.apache.cordova.CordovaInterface:
    void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void setActivityResultCallback(org.apache.cordova.CordovaPlugin) -> setActivityResultCallback
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    org.apache.cordova.CordovaWrap getCordovaWrap() -> getCordovaWrap
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
org.apache.cordova.CordovaInterfaceImpl -> org.apache.cordova.CordovaInterfaceImpl:
    java.lang.String TAG -> TAG
    android.app.Activity activity -> activity
    android.content.Context context -> context
    org.apache.cordova.CordovaWrap cordovaWrap -> cordovaWrap
    java.util.concurrent.ExecutorService threadPool -> threadPool
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.CordovaInterfaceImpl$ActivityResultHolder savedResult -> savedResult
    org.apache.cordova.CordovaPlugin activityResultCallback -> activityResultCallback
    java.lang.String initCallbackService -> initCallbackService
    int activityResultRequestCode -> activityResultRequestCode
    void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int) -> startActivityForResult
    void setActivityResultCallback(org.apache.cordova.CordovaPlugin) -> setActivityResultCallback
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    org.apache.cordova.CordovaWrap getCordovaWrap() -> getCordovaWrap
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    void onCordovaInit(org.apache.cordova.PluginManager) -> onCordovaInit
    boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setActivityResultRequestCode(int) -> setActivityResultRequestCode
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
org.apache.cordova.CordovaInterfaceImpl$ActivityResultHolder -> gk:
    int requestCode -> a
    int resultCode -> b
    android.content.Intent intent -> c
org.apache.cordova.CordovaPlugin -> org.apache.cordova.CordovaPlugin:
    org.apache.cordova.CordovaWebView webView -> webView
    org.apache.cordova.CordovaInterface cordova -> cordova
    org.apache.cordova.CordovaPreferences preferences -> preferences
    java.lang.String serviceName -> serviceName
    boolean $assertionsDisabled -> $assertionsDisabled
    void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences) -> privateInitialize
    void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView) -> initialize
    void pluginInitialize() -> pluginInitialize
    java.lang.String getServiceName() -> getServiceName
    boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext) -> execute
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext) -> execute
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.Boolean shouldAllowRequest(java.lang.String) -> shouldAllowRequest
    java.lang.Boolean shouldAllowNavigation(java.lang.String) -> shouldAllowNavigation
    java.lang.Boolean shouldAllowBridgeAccess(java.lang.String) -> shouldAllowBridgeAccess
    java.lang.Boolean shouldOpenExternalUrl(java.lang.String) -> shouldOpenExternalUrl
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    org.apache.cordova.CordovaResourceApi$OpenForReadResult handleOpenForRead(android.net.Uri) -> handleOpenForRead
    android.net.Uri toPluginUri(android.net.Uri) -> toPluginUri
    android.net.Uri fromPluginUri(android.net.Uri) -> fromPluginUri
    void onReset() -> onReset
    boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest) -> onReceivedClientCertRequest
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
org.apache.cordova.CordovaPreferences -> org.apache.cordova.CordovaPreferences:
    java.util.HashMap prefs -> prefs
    android.os.Bundle preferencesBundleExtras -> preferencesBundleExtras
    void setPreferencesBundle(android.os.Bundle) -> setPreferencesBundle
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,boolean) -> set
    void set(java.lang.String,int) -> set
    void set(java.lang.String,double) -> set
    java.util.Map getAll() -> getAll
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    int getInteger(java.lang.String,int) -> getInteger
    double getDouble(java.lang.String,double) -> getDouble
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
org.apache.cordova.CordovaResourceApi -> org.apache.cordova.CordovaResourceApi:
    java.lang.String LOG_TAG -> LOG_TAG
    int URI_TYPE_FILE -> URI_TYPE_FILE
    int URI_TYPE_ASSET -> URI_TYPE_ASSET
    int URI_TYPE_CONTENT -> URI_TYPE_CONTENT
    int URI_TYPE_RESOURCE -> URI_TYPE_RESOURCE
    int URI_TYPE_DATA -> URI_TYPE_DATA
    int URI_TYPE_HTTP -> URI_TYPE_HTTP
    int URI_TYPE_HTTPS -> URI_TYPE_HTTPS
    int URI_TYPE_PLUGIN -> URI_TYPE_PLUGIN
    int URI_TYPE_UNKNOWN -> URI_TYPE_UNKNOWN
    java.lang.String PLUGIN_URI_SCHEME -> PLUGIN_URI_SCHEME
    java.lang.String[] LOCAL_FILE_PROJECTION -> LOCAL_FILE_PROJECTION
    java.lang.Thread jsThread -> jsThread
    android.content.res.AssetManager assetManager -> assetManager
    android.content.ContentResolver contentResolver -> contentResolver
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    boolean threadCheckingEnabled -> threadCheckingEnabled
    void setThreadCheckingEnabled(boolean) -> setThreadCheckingEnabled
    boolean isThreadCheckingEnabled() -> isThreadCheckingEnabled
    int getUriType(android.net.Uri) -> getUriType
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    java.lang.String remapPath(java.lang.String) -> remapPath
    java.io.File mapUriToFile(android.net.Uri) -> mapUriToFile
    java.lang.String getMimeType(android.net.Uri) -> getMimeType
    java.lang.String getMimeTypeFromPath(java.lang.String) -> getMimeTypeFromPath
    org.apache.cordova.CordovaResourceApi$OpenForReadResult openForRead(android.net.Uri) -> openForRead
    org.apache.cordova.CordovaResourceApi$OpenForReadResult openForRead(android.net.Uri,boolean) -> openForRead
    java.io.OutputStream openOutputStream(android.net.Uri) -> openOutputStream
    java.io.OutputStream openOutputStream(android.net.Uri,boolean) -> openOutputStream
    java.net.HttpURLConnection createHttpConnection(android.net.Uri) -> createHttpConnection
    void copyResource(org.apache.cordova.CordovaResourceApi$OpenForReadResult,java.io.OutputStream) -> copyResource
    void copyResource(android.net.Uri,java.io.OutputStream) -> copyResource
    void copyResource(android.net.Uri,android.net.Uri) -> copyResource
    void assertBackgroundThread() -> assertBackgroundThread
    java.lang.String getDataUriMimeType(android.net.Uri) -> getDataUriMimeType
    org.apache.cordova.CordovaResourceApi$OpenForReadResult readDataUri(android.net.Uri) -> readDataUri
    void assertNonRelative(android.net.Uri) -> assertNonRelative
org.apache.cordova.CordovaResourceApi$OpenForReadResult -> org.apache.cordova.CordovaResourceApi$OpenForReadResult:
    android.net.Uri uri -> uri
    java.io.InputStream inputStream -> inputStream
    java.lang.String mimeType -> mimeType
    long length -> length
    android.content.res.AssetFileDescriptor assetFd -> assetFd
org.apache.cordova.CordovaWebView -> org.apache.cordova.CordovaWebView:
    java.lang.String CORDOVA_VERSION -> CORDOVA_VERSION
    void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences) -> init
    boolean isInitialized() -> isInitialized
    android.view.View getView() -> getView
    void loadUrlIntoView(java.lang.String,boolean) -> loadUrlIntoView
    void stopLoading() -> stopLoading
    boolean canGoBack() -> canGoBack
    void clearCache() -> clearCache
    void clearCache(boolean) -> clearCache
    void clearHistory() -> clearHistory
    boolean backHistory() -> backHistory
    void handlePause(boolean) -> handlePause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handleResume(boolean) -> handleResume
    void handleStart() -> handleStart
    void handleStop() -> handleStop
    void handleDestroy() -> handleDestroy
    void sendJavascript(java.lang.String) -> sendJavascript
    void showWebPage(java.lang.String,boolean,boolean,java.util.Map) -> showWebPage
    boolean isCustomViewShowing() -> isCustomViewShowing
    void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    void hideCustomView() -> hideCustomView
    org.apache.cordova.CordovaResourceApi getResourceApi() -> getResourceApi
    void setButtonPlumbedToJs(int,boolean) -> setButtonPlumbedToJs
    boolean isButtonPlumbedToJs(int) -> isButtonPlumbedToJs
    void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String) -> sendPluginResult
    org.apache.cordova.PluginManager getPluginManager() -> getPluginManager
    org.apache.cordova.CordovaWebViewEngine getEngine() -> getEngine
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    java.lang.String getUrl() -> getUrl
    android.content.Context getContext() -> getContext
    void loadUrl(java.lang.String) -> loadUrl
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
org.apache.cordova.CordovaWebViewEngine -> org.apache.cordova.CordovaWebViewEngine:
    void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue) -> init
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    android.view.View getView() -> getView
    void loadUrl(java.lang.String,boolean) -> loadUrl
    void stopLoading() -> stopLoading
    java.lang.String getUrl() -> getUrl
    void clearCache() -> clearCache
    void clearHistory() -> clearHistory
    boolean canGoBack() -> canGoBack
    boolean goBack() -> goBack
    void setPaused(boolean) -> setPaused
    void destroy() -> destroy
org.apache.cordova.CordovaWebViewEngine$Client -> org.apache.cordova.CordovaWebViewEngine$Client:
    java.lang.Boolean onDispatchKeyEvent(android.view.KeyEvent) -> onDispatchKeyEvent
    void clearLoadTimeoutTimer() -> clearLoadTimeoutTimer
    void onPageStarted(java.lang.String) -> onPageStarted
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageFinishedLoading(java.lang.String) -> onPageFinishedLoading
    boolean onNavigationAttempt(java.lang.String) -> onNavigationAttempt
org.apache.cordova.CordovaWebViewEngine$EngineView -> org.apache.cordova.CordovaWebViewEngine$EngineView:
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
org.apache.cordova.CordovaWebViewImpl -> org.apache.cordova.CordovaWebViewImpl:
    java.lang.String TAG -> TAG
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.CordovaWebViewEngine engine -> engine
    org.apache.cordova.CordovaInterface cordova -> cordova
    int loadUrlTimeout -> loadUrlTimeout
    org.apache.cordova.CordovaResourceApi resourceApi -> resourceApi
    org.apache.cordova.CordovaPreferences preferences -> preferences
    org.apache.cordova.CoreAndroid appPlugin -> appPlugin
    org.apache.cordova.NativeToJsMessageQueue nativeToJsMessageQueue -> nativeToJsMessageQueue
    org.apache.cordova.CordovaWebViewImpl$EngineClient engineClient -> engineClient
    boolean hasPausedEver -> hasPausedEver
    java.lang.String loadedUrl -> loadedUrl
    android.view.View mCustomView -> mCustomView
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback -> mCustomViewCallback
    java.util.Set boundKeyCodes -> boundKeyCodes
    android.content.Context mRemoteContext -> mRemoteContext
    boolean $assertionsDisabled -> $assertionsDisabled
    org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences) -> createEngine
    org.apache.cordova.CordovaWebViewEngine createEngineWrap(android.content.Context,android.content.Context,org.apache.cordova.CordovaPreferences) -> createEngineWrap
    void init(org.apache.cordova.CordovaInterface) -> init
    void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences) -> init
    boolean isInitialized() -> isInitialized
    void loadUrlIntoView(java.lang.String,boolean) -> loadUrlIntoView
    void loadUrl(java.lang.String) -> loadUrl
    void showWebPage(java.lang.String,boolean,boolean,java.util.Map) -> showWebPage
    void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    void hideCustomView() -> hideCustomView
    boolean isCustomViewShowing() -> isCustomViewShowing
    void sendJavascript(java.lang.String) -> sendJavascript
    void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String) -> sendPluginResult
    org.apache.cordova.PluginManager getPluginManager() -> getPluginManager
    org.apache.cordova.CordovaPreferences getPreferences() -> getPreferences
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    org.apache.cordova.CordovaResourceApi getResourceApi() -> getResourceApi
    org.apache.cordova.CordovaWebViewEngine getEngine() -> getEngine
    android.view.View getView() -> getView
    android.content.Context getContext() -> getContext
    void sendJavascriptEvent(java.lang.String) -> sendJavascriptEvent
    void setButtonPlumbedToJs(int,boolean) -> setButtonPlumbedToJs
    boolean isButtonPlumbedToJs(int) -> isButtonPlumbedToJs
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
    java.lang.String getUrl() -> getUrl
    void stopLoading() -> stopLoading
    boolean canGoBack() -> canGoBack
    void clearCache() -> clearCache
    void clearCache(boolean) -> clearCache
    void clearHistory() -> clearHistory
    boolean backHistory() -> backHistory
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handlePause(boolean) -> handlePause
    void handleResume(boolean) -> handleResume
    void handleStart() -> handleStart
    void handleStop() -> handleStop
    void handleDestroy() -> handleDestroy
    int access$0(org.apache.cordova.CordovaWebViewImpl) -> access$0
    void access$1(org.apache.cordova.CordovaWebViewImpl,int) -> access$1
    java.util.Set access$2(org.apache.cordova.CordovaWebViewImpl) -> access$2
    org.apache.cordova.PluginManager access$3(org.apache.cordova.CordovaWebViewImpl) -> access$3
    org.apache.cordova.CordovaInterface access$4(org.apache.cordova.CordovaWebViewImpl) -> access$4
    android.view.View access$5(org.apache.cordova.CordovaWebViewImpl) -> access$5
    void access$6(org.apache.cordova.CordovaWebViewImpl,java.lang.String) -> access$6
org.apache.cordova.CordovaWebViewImpl$1 -> gl:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    java.lang.String val$url -> b
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$2 -> gm:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    int val$loadUrlTimeoutValue -> b
    int val$currentLoadUrlTimeout -> c
    java.lang.Runnable val$loadError -> d
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$3 -> gn:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    int val$loadUrlTimeoutValue -> b
    java.lang.Runnable val$timeoutCheck -> c
    java.lang.String val$url -> d
    boolean val$_recreatePlugins -> e
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$4 -> go:
    org.apache.cordova.CordovaWebViewImpl this$0 -> a
    int val$loadUrlTimeoutValue -> b
    java.lang.Runnable val$timeoutCheck -> c
    java.lang.String val$url -> d
    boolean val$_recreatePlugins -> e
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$EngineClient -> org.apache.cordova.CordovaWebViewImpl$EngineClient:
    org.apache.cordova.CordovaWebViewImpl this$0 -> this$0
    void clearLoadTimeoutTimer() -> clearLoadTimeoutTimer
    void onPageStarted(java.lang.String) -> onPageStarted
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageFinishedLoading(java.lang.String) -> onPageFinishedLoading
    java.lang.Boolean onDispatchKeyEvent(android.view.KeyEvent) -> onDispatchKeyEvent
    boolean onNavigationAttempt(java.lang.String) -> onNavigationAttempt
    org.apache.cordova.CordovaWebViewImpl access$0(org.apache.cordova.CordovaWebViewImpl$EngineClient) -> access$0
org.apache.cordova.CordovaWebViewImpl$EngineClient$1 -> gp:
    org.apache.cordova.CordovaWebViewImpl$EngineClient this$1 -> a
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$EngineClient$1$1 -> gq:
    org.apache.cordova.CordovaWebViewImpl$EngineClient$1 this$2 -> a
    void run() -> run
org.apache.cordova.CordovaWebViewImpl$EngineClient$1$2 -> gr:
    org.apache.cordova.CordovaWebViewImpl$EngineClient$1 this$2 -> a
    void run() -> run
org.apache.cordova.CordovaWrap -> org.apache.cordova.CordovaWrap:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.content.Context mRemoteContext -> mRemoteContext
    org.apache.cordova.CordovaWebView appView -> appView
    int ACTIVITY_STARTING -> ACTIVITY_STARTING
    int ACTIVITY_RUNNING -> ACTIVITY_RUNNING
    int ACTIVITY_EXITING -> ACTIVITY_EXITING
    boolean keepRunning -> keepRunning
    boolean immersiveMode -> immersiveMode
    org.apache.cordova.CordovaPreferences preferences -> preferences
    java.lang.String launchUrl -> launchUrl
    java.util.ArrayList pluginEntries -> pluginEntries
    org.apache.cordova.CordovaInterfaceImpl cordovaInterface -> cordovaInterface
    android.os.Handler mHandler -> mHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void onCreate(android.os.Bundle) -> onCreate
    void loadConfig() -> loadConfig
    org.apache.cordova.CordovaWebView makeWebView() -> makeWebView
    org.apache.cordova.CordovaWebViewEngine makeWebViewEngine() -> makeWebViewEngine
    org.apache.cordova.CordovaInterfaceImpl makeCordovaInterface() -> makeCordovaInterface
    android.view.View loadWebViewUrl(java.lang.String) -> loadWebViewUrl
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onStop() -> onStop
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void displayError(java.lang.String,java.lang.String,java.lang.String,boolean) -> displayError
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context access$0(org.apache.cordova.CordovaWrap) -> access$0
org.apache.cordova.CordovaWrap$1 -> gs:
    org.apache.cordova.CordovaWrap this$0 -> a
    java.lang.Object onMessage(java.lang.String,java.lang.Object) -> onMessage
org.apache.cordova.CordovaWrap$2 -> gt:
    org.apache.cordova.CordovaWrap this$0 -> a
    org.apache.cordova.CordovaWrap val$me -> b
    java.lang.String val$errorUrl -> c
    void run() -> run
org.apache.cordova.CordovaWrap$3 -> gu:
    org.apache.cordova.CordovaWrap this$0 -> a
    boolean val$exit -> b
    org.apache.cordova.CordovaWrap val$me -> c
    java.lang.String val$description -> d
    java.lang.String val$failingUrl -> e
    void run() -> run
org.apache.cordova.CordovaWrap$4 -> gv:
    org.apache.cordova.CordovaWrap this$0 -> a
    java.lang.String val$message -> b
    java.lang.String val$title -> c
    java.lang.String val$button -> d
    boolean val$exit -> e
    void run() -> run
org.apache.cordova.CordovaWrap$4$1 -> gw:
    org.apache.cordova.CordovaWrap$4 this$1 -> a
    boolean val$exit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.apache.cordova.CoreAndroid -> org.apache.cordova.CoreAndroid:
    android.content.BroadcastReceiver telephonyReceiver -> a
    org.apache.cordova.CallbackContext messageChannel -> b
    void fireJavascriptEvent(java.lang.String) -> fireJavascriptEvent
    void pluginInitialize() -> pluginInitialize
    boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext) -> execute
    void clearCache() -> clearCache
    void loadUrl(java.lang.String,org.json.JSONObject) -> loadUrl
    void clearHistory() -> clearHistory
    void backHistory() -> backHistory
    void overrideBackbutton(boolean) -> overrideBackbutton
    void overrideButton(java.lang.String,boolean) -> overrideButton
    boolean isBackbuttonOverridden() -> isBackbuttonOverridden
    void exitApp() -> exitApp
    void onDestroy() -> onDestroy
org.apache.cordova.CoreAndroid$1 -> gx:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$2 -> gy:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$3 -> gz:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$4 -> ha:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$5 -> hb:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$6 -> hc:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$7 -> hd:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$8 -> he:
    org.apache.cordova.CoreAndroid this$0 -> a
    void run() -> run
org.apache.cordova.CoreAndroid$9 -> hf:
    org.apache.cordova.CoreAndroid this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.cordova.ExposedJsApi -> org.apache.cordova.ExposedJsApi:
    java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    void setNativeToJsBridgeMode(int,int) -> setNativeToJsBridgeMode
    java.lang.String retrieveJsMessages(int,boolean) -> retrieveJsMessages
org.apache.cordova.ICordovaClientCertRequest -> org.apache.cordova.ICordovaClientCertRequest:
    void cancel() -> cancel
    java.lang.String getHost() -> getHost
    java.lang.String[] getKeyTypes() -> getKeyTypes
    int getPort() -> getPort
    java.security.Principal[] getPrincipals() -> getPrincipals
    void ignore() -> ignore
    void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[]) -> proceed
org.apache.cordova.ICordovaCookieManager -> org.apache.cordova.ICordovaCookieManager:
    void setCookiesEnabled(boolean) -> setCookiesEnabled
    void setCookie(java.lang.String,java.lang.String) -> setCookie
    java.lang.String getCookie(java.lang.String) -> getCookie
    void clearCookies() -> clearCookies
    void flush() -> flush
org.apache.cordova.ICordovaHttpAuthHandler -> org.apache.cordova.ICordovaHttpAuthHandler:
    void cancel() -> cancel
    void proceed(java.lang.String,java.lang.String) -> proceed
org.apache.cordova.LOG -> org.apache.cordova.LOG:
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int LOGLEVEL -> LOGLEVEL
    void setLogLevel(int) -> setLogLevel
    void setLogLevel(java.lang.String) -> setLogLevel
    boolean isLoggable(int) -> isLoggable
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
org.apache.cordova.NativeToJsMessageQueue -> org.apache.cordova.NativeToJsMessageQueue:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean FORCE_ENCODE_USING_EVAL -> FORCE_ENCODE_USING_EVAL
    boolean DISABLE_EXEC_CHAINING -> DISABLE_EXEC_CHAINING
    int MAX_PAYLOAD_SIZE -> MAX_PAYLOAD_SIZE
    boolean paused -> paused
    java.util.LinkedList queue -> queue
    java.util.ArrayList bridgeModes -> bridgeModes
    org.apache.cordova.NativeToJsMessageQueue$BridgeMode activeBridgeMode -> activeBridgeMode
    void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode) -> addBridgeMode
    boolean isBridgeEnabled() -> isBridgeEnabled
    boolean isEmpty() -> isEmpty
    void setBridgeMode(int) -> setBridgeMode
    void reset() -> reset
    int calculatePackedMessageLength(org.apache.cordova.NativeToJsMessageQueue$JsMessage) -> calculatePackedMessageLength
    void packMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage,java.lang.StringBuilder) -> packMessage
    java.lang.String popAndEncode(boolean) -> popAndEncode
    java.lang.String popAndEncodeAsJs() -> popAndEncodeAsJs
    void addJavaScript(java.lang.String) -> addJavaScript
    void addPluginResult(org.apache.cordova.PluginResult,java.lang.String) -> addPluginResult
    void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage) -> enqueueMessage
    void setPaused(boolean) -> setPaused
org.apache.cordova.NativeToJsMessageQueue$BridgeMode -> org.apache.cordova.NativeToJsMessageQueue$BridgeMode:
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
    void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean) -> notifyOfFlush
    void reset() -> reset
org.apache.cordova.NativeToJsMessageQueue$JsMessage -> hg:
    java.lang.String jsPayloadOrCallbackId -> a
    org.apache.cordova.PluginResult pluginResult -> b
    int calculateEncodedLengthHelper(org.apache.cordova.PluginResult) -> a
    int calculateEncodedLength() -> a
    void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult) -> a
    void encodeAsJsMessage(java.lang.StringBuilder) -> a
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode -> org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode:
    org.apache.cordova.CordovaWebViewEngine engine -> engine
    org.apache.cordova.CordovaInterface cordova -> cordova
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
    org.apache.cordova.CordovaWebViewEngine access$0(org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode) -> access$0
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode$1 -> hh:
    org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode this$1 -> a
    org.apache.cordova.NativeToJsMessageQueue val$queue -> b
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode$2 -> hi:
    org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode this$1 -> a
    org.apache.cordova.NativeToJsMessageQueue val$queue -> b
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode -> org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode:
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode -> org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate delegate -> delegate
    boolean online -> online
    boolean ignoreNextFlush -> ignoreNextFlush
    void reset() -> reset
    void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue) -> onNativeToJsMessageAvailable
    void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean) -> notifyOfFlush
    void access$0(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode,boolean) -> access$0
    void access$1(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode,boolean) -> access$1
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate access$2(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode) -> access$2
    boolean access$3(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode) -> access$3
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$1 -> hj:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode this$1 -> a
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$2 -> hk:
    org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode this$1 -> a
    org.apache.cordova.NativeToJsMessageQueue val$queue -> b
    void run() -> run
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate -> org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate:
    void setNetworkAvailable(boolean) -> setNetworkAvailable
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
org.apache.cordova.PluginEntry -> org.apache.cordova.PluginEntry:
    java.lang.String service -> service
    java.lang.String pluginClass -> pluginClass
    org.apache.cordova.CordovaPlugin plugin -> plugin
    boolean onload -> onload
org.apache.cordova.PluginManager -> org.apache.cordova.PluginManager:
    java.lang.String TAG -> TAG
    int SLOW_EXEC_WARNING_THRESHOLD -> SLOW_EXEC_WARNING_THRESHOLD
    java.util.LinkedHashMap pluginMap -> pluginMap
    java.util.LinkedHashMap entryMap -> entryMap
    org.apache.cordova.CordovaInterface ctx -> ctx
    org.apache.cordova.CordovaWebView app -> app
    boolean isInitialized -> isInitialized
    java.util.Collection getPluginEntries() -> getPluginEntries
    void setPluginEntries(java.util.Collection) -> setPluginEntries
    void init() -> init
    void startupPlugins() -> startupPlugins
    void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    org.apache.cordova.CordovaPlugin getPlugin(java.lang.String) -> getPlugin
    void addService(java.lang.String,java.lang.String) -> addService
    void addService(org.apache.cordova.PluginEntry) -> addService
    void onPause(boolean) -> onPause
    boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest) -> onReceivedClientCertRequest
    void onResume(boolean) -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    java.lang.Object postMessage(java.lang.String,java.lang.Object) -> postMessage
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean shouldAllowRequest(java.lang.String) -> shouldAllowRequest
    boolean shouldAllowNavigation(java.lang.String) -> shouldAllowNavigation
    boolean shouldAllowBridgeAccess(java.lang.String) -> shouldAllowBridgeAccess
    java.lang.Boolean shouldOpenExternalUrl(java.lang.String) -> shouldOpenExternalUrl
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    void onReset() -> onReset
    android.net.Uri remapUri(android.net.Uri) -> remapUri
    org.apache.cordova.CordovaPlugin instantiatePlugin(java.lang.String) -> instantiatePlugin
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
org.apache.cordova.PluginResult -> org.apache.cordova.PluginResult:
    int status -> status
    int messageType -> messageType
    boolean keepCallback -> keepCallback
    java.lang.String strMessage -> strMessage
    java.lang.String encodedMessage -> encodedMessage
    java.util.List multipartMessages -> multipartMessages
    int MESSAGE_TYPE_STRING -> MESSAGE_TYPE_STRING
    int MESSAGE_TYPE_JSON -> MESSAGE_TYPE_JSON
    int MESSAGE_TYPE_NUMBER -> MESSAGE_TYPE_NUMBER
    int MESSAGE_TYPE_BOOLEAN -> MESSAGE_TYPE_BOOLEAN
    int MESSAGE_TYPE_NULL -> MESSAGE_TYPE_NULL
    int MESSAGE_TYPE_ARRAYBUFFER -> MESSAGE_TYPE_ARRAYBUFFER
    int MESSAGE_TYPE_BINARYSTRING -> MESSAGE_TYPE_BINARYSTRING
    int MESSAGE_TYPE_MULTIPART -> MESSAGE_TYPE_MULTIPART
    java.lang.String[] StatusMessages -> StatusMessages
    void setKeepCallback(boolean) -> setKeepCallback
    int getStatus() -> getStatus
    int getMessageType() -> getMessageType
    java.lang.String getMessage() -> getMessage
    int getMultipartMessagesSize() -> getMultipartMessagesSize
    org.apache.cordova.PluginResult getMultipartMessage(int) -> getMultipartMessage
    java.lang.String getStrMessage() -> getStrMessage
    boolean getKeepCallback() -> getKeepCallback
    java.lang.String getJSONString() -> getJSONString
    java.lang.String toCallbackString(java.lang.String) -> toCallbackString
    java.lang.String toSuccessCallbackString(java.lang.String) -> toSuccessCallbackString
    java.lang.String toErrorCallbackString(java.lang.String) -> toErrorCallbackString
org.apache.cordova.PluginResult$Status -> org.apache.cordova.PluginResult$Status:
    org.apache.cordova.PluginResult$Status NO_RESULT -> NO_RESULT
    org.apache.cordova.PluginResult$Status OK -> OK
    org.apache.cordova.PluginResult$Status CLASS_NOT_FOUND_EXCEPTION -> CLASS_NOT_FOUND_EXCEPTION
    org.apache.cordova.PluginResult$Status ILLEGAL_ACCESS_EXCEPTION -> ILLEGAL_ACCESS_EXCEPTION
    org.apache.cordova.PluginResult$Status INSTANTIATION_EXCEPTION -> INSTANTIATION_EXCEPTION
    org.apache.cordova.PluginResult$Status MALFORMED_URL_EXCEPTION -> MALFORMED_URL_EXCEPTION
    org.apache.cordova.PluginResult$Status IO_EXCEPTION -> IO_EXCEPTION
    org.apache.cordova.PluginResult$Status INVALID_ACTION -> INVALID_ACTION
    org.apache.cordova.PluginResult$Status JSON_EXCEPTION -> JSON_EXCEPTION
    org.apache.cordova.PluginResult$Status ERROR -> ERROR
    org.apache.cordova.PluginResult$Status[] ENUM$VALUES -> ENUM$VALUES
    org.apache.cordova.PluginResult$Status[] values() -> values
    org.apache.cordova.PluginResult$Status valueOf(java.lang.String) -> valueOf
org.apache.cordova.Whitelist -> org.apache.cordova.Whitelist:
    java.util.ArrayList whiteList -> whiteList
    java.lang.String TAG -> TAG
    void addWhiteListEntry(java.lang.String,boolean) -> addWhiteListEntry
    boolean isUrlWhiteListed(java.lang.String) -> isUrlWhiteListed
org.apache.cordova.Whitelist$URLPattern -> hl:
    java.util.regex.Pattern scheme -> a
    java.util.regex.Pattern host -> b
    java.lang.Integer port -> c
    java.util.regex.Pattern path -> d
    java.lang.String regexFromPattern(java.lang.String,boolean) -> a
    boolean matches(android.net.Uri) -> matches
org.apache.cordova.engine.SystemCookieManager -> hm:
    android.webkit.WebView webView -> a
    android.webkit.CookieManager cookieManager -> b
    void setCookiesEnabled(boolean) -> setCookiesEnabled
    void setCookie(java.lang.String,java.lang.String) -> setCookie
    java.lang.String getCookie(java.lang.String) -> getCookie
    void clearCookies() -> clearCookies
    void flush() -> flush
org.apache.cordova.engine.SystemExposedJsApi -> hn:
    org.apache.cordova.CordovaBridge bridge -> a
    java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> exec
    void setNativeToJsBridgeMode(int,int) -> setNativeToJsBridgeMode
    java.lang.String retrieveJsMessages(int,boolean) -> retrieveJsMessages
org.apache.cordova.engine.SystemWebChromeClient -> org.apache.cordova.engine.SystemWebChromeClient:
    int FILECHOOSER_RESULTCODE -> FILECHOOSER_RESULTCODE
    java.lang.String LOG_TAG -> LOG_TAG
    long MAX_QUOTA -> MAX_QUOTA
    org.apache.cordova.engine.SystemWebViewEngine parentEngine -> parentEngine
    android.view.View mVideoProgressView -> mVideoProgressView
    org.apache.cordova.CordovaDialogsHelper dialogsHelper -> dialogsHelper
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback -> mCustomViewCallback
    android.view.View mCustomView -> mCustomView
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void openFileChooser(android.webkit.ValueCallback) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooser
    boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
    void onPermissionRequest(android.webkit.PermissionRequest) -> onPermissionRequest
    void destroyLastDialog() -> destroyLastDialog
org.apache.cordova.engine.SystemWebChromeClient$1 -> ho:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.engine.SystemWebChromeClient$2 -> hp:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.JsResult val$result -> b
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.engine.SystemWebChromeClient$3 -> hq:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.JsPromptResult val$result -> b
    void gotResult(boolean,java.lang.String) -> gotResult
org.apache.cordova.engine.SystemWebChromeClient$4 -> hr:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.ValueCallback val$uploadMsg -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
org.apache.cordova.engine.SystemWebChromeClient$5 -> hs:
    org.apache.cordova.engine.SystemWebChromeClient this$0 -> a
    android.webkit.ValueCallback val$filePathsCallback -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
org.apache.cordova.engine.SystemWebView -> org.apache.cordova.engine.SystemWebView:
    org.apache.cordova.engine.SystemWebViewClient viewClient -> viewClient
    org.apache.cordova.engine.SystemWebChromeClient chromeClient -> chromeClient
    org.apache.cordova.engine.SystemWebViewEngine parentEngine -> parentEngine
    org.apache.cordova.CordovaInterface cordova -> cordova
    void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface) -> init
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
    void setWebViewClient(android.webkit.WebViewClient) -> setWebViewClient
    void setWebChromeClient(android.webkit.WebChromeClient) -> setWebChromeClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
org.apache.cordova.engine.SystemWebViewClient -> org.apache.cordova.engine.SystemWebViewClient:
    java.lang.String TAG -> TAG
    org.apache.cordova.engine.SystemWebViewEngine parentEngine -> parentEngine
    boolean doClearHistory -> doClearHistory
    boolean isCurrentlyLoading -> isCurrentlyLoading
    java.util.Hashtable authenticationTokens -> authenticationTokens
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest) -> onReceivedClientCertRequest
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String) -> setAuthenticationToken
    org.apache.cordova.AuthenticationToken removeAuthenticationToken(java.lang.String,java.lang.String) -> removeAuthenticationToken
    org.apache.cordova.AuthenticationToken getAuthenticationToken(java.lang.String,java.lang.String) -> getAuthenticationToken
    void clearAuthenticationTokens() -> clearAuthenticationTokens
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    boolean needsKitKatContentUrlFix(android.net.Uri) -> needsKitKatContentUrlFix
    boolean needsSpecialsInAssetUrlFix(android.net.Uri) -> needsSpecialsInAssetUrlFix
org.apache.cordova.engine.SystemWebViewEngine -> org.apache.cordova.engine.SystemWebViewEngine:
    java.lang.String TAG -> TAG
    org.apache.cordova.engine.SystemWebView webView -> webView
    org.apache.cordova.engine.SystemCookieManager cookieManager -> cookieManager
    org.apache.cordova.CordovaPreferences preferences -> preferences
    org.apache.cordova.CordovaBridge bridge -> bridge
    org.apache.cordova.CordovaWebViewEngine$Client client -> client
    org.apache.cordova.CordovaWebView parentWebView -> parentWebView
    org.apache.cordova.CordovaInterface cordova -> cordova
    org.apache.cordova.PluginManager pluginManager -> pluginManager
    org.apache.cordova.CordovaResourceApi resourceApi -> resourceApi
    org.apache.cordova.NativeToJsMessageQueue nativeToJsMessageQueue -> nativeToJsMessageQueue
    android.content.BroadcastReceiver receiver -> receiver
    android.content.Context mRemoteContext -> mRemoteContext
    void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue) -> init
    org.apache.cordova.CordovaWebView getCordovaWebView() -> getCordovaWebView
    org.apache.cordova.ICordovaCookieManager getCookieManager() -> getCookieManager
    android.view.View getView() -> getView
    void initWebViewSettings() -> initWebViewSettings
    void enableRemoteDebugging() -> enableRemoteDebugging
    void exposeJsInterface(android.webkit.WebView,org.apache.cordova.CordovaBridge) -> exposeJsInterface
    void loadUrl(java.lang.String,boolean) -> loadUrl
    java.lang.String getUrl() -> getUrl
    void stopLoading() -> stopLoading
    void clearCache() -> clearCache
    void clearHistory() -> clearHistory
    boolean canGoBack() -> canGoBack
    boolean goBack() -> goBack
    void setPaused(boolean) -> setPaused
    void destroy() -> destroy
org.apache.cordova.engine.SystemWebViewEngine$1 -> ht:
    org.apache.cordova.engine.SystemWebViewEngine this$0 -> a
    void setNetworkAvailable(boolean) -> setNetworkAvailable
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
org.apache.cordova.engine.SystemWebViewEngine$2 -> hu:
    org.apache.cordova.engine.SystemWebViewEngine this$0 -> a
    android.webkit.WebSettings val$settings -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
